### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.DatastoreWriter"
  id: "DatastoreWriter"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.DatastoreWriter.add(com.google.cloud.datastore.FullEntity<?>)"
  - "com.google.cloud.datastore.DatastoreWriter.add(com.google.cloud.datastore.FullEntity<?>...)"
  - "com.google.cloud.datastore.DatastoreWriter.delete(com.google.cloud.datastore.Key...)"
  - "com.google.cloud.datastore.DatastoreWriter.put(com.google.cloud.datastore.FullEntity<?>)"
  - "com.google.cloud.datastore.DatastoreWriter.put(com.google.cloud.datastore.FullEntity<?>...)"
  - "com.google.cloud.datastore.DatastoreWriter.update(com.google.cloud.datastore.Entity...)"
  langs:
  - "java"
  name: "DatastoreWriter"
  nameWithType: "DatastoreWriter"
  fullName: "com.google.cloud.datastore.DatastoreWriter"
  type: "Interface"
  package: "com.google.cloud.datastore"
  summary: "An interface to represent Google Cloud Datastore write operations."
  syntax:
    content: "public interface DatastoreWriter"
- uid: "com.google.cloud.datastore.DatastoreWriter.add(com.google.cloud.datastore.FullEntity<?>)"
  id: "add(com.google.cloud.datastore.FullEntity<?>)"
  parent: "com.google.cloud.datastore.DatastoreWriter"
  langs:
  - "java"
  name: "add(FullEntity<?> entity)"
  nameWithType: "DatastoreWriter.add(FullEntity<?> entity)"
  fullName: "com.google.cloud.datastore.DatastoreWriter.add(FullEntity<?> entity)"
  overload: "com.google.cloud.datastore.DatastoreWriter.add*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Datastore add operation: inserts the provided entity. This method will automatically allocate\n an id if necessary."
  syntax:
    content: "public abstract Entity add(FullEntity<?> entity)"
    parameters:
    - id: "entity"
      type: "com.google.cloud.datastore.FullEntity<?>"
      description: "the entity to add"
    return:
      type: "com.google.cloud.datastore.Entity"
      description: "an <code>Entity</code> with the same properties and a key that is either newly allocated or\n     the same one if key is already complete"
- uid: "com.google.cloud.datastore.DatastoreWriter.add(com.google.cloud.datastore.FullEntity<?>...)"
  id: "add(com.google.cloud.datastore.FullEntity<?>...)"
  parent: "com.google.cloud.datastore.DatastoreWriter"
  langs:
  - "java"
  name: "add(FullEntity<?>[] entities)"
  nameWithType: "DatastoreWriter.add(FullEntity<?>[] entities)"
  fullName: "com.google.cloud.datastore.DatastoreWriter.add(FullEntity<?>[] entities)"
  overload: "com.google.cloud.datastore.DatastoreWriter.add*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Datastore add operation: inserts the provided entities. This method will automatically allocate\n id for any entity with an incomplete key.\nSee Also: <xref uid=\"com.google.cloud.datastore.DatastoreWriter.add(com.google.cloud.datastore.FullEntity<?>)\" data-throw-if-not-resolved=\"false\">#add(FullEntity)</xref>\n"
  syntax:
    content: "public abstract List<Entity> add(FullEntity<?>[] entities)"
    parameters:
    - id: "entities"
      type: "com.google.cloud.datastore.FullEntity<?>[]"
    return:
      type: "java.util.List<com.google.cloud.datastore.Entity>"
      description: "a list of <code>Entity</code> ordered by input with the same properties and a key that is\n     either newly allocated or the same one if was already complete"
- uid: "com.google.cloud.datastore.DatastoreWriter.delete(com.google.cloud.datastore.Key...)"
  id: "delete(com.google.cloud.datastore.Key...)"
  parent: "com.google.cloud.datastore.DatastoreWriter"
  langs:
  - "java"
  name: "delete(Key[] keys)"
  nameWithType: "DatastoreWriter.delete(Key[] keys)"
  fullName: "com.google.cloud.datastore.DatastoreWriter.delete(Key[] keys)"
  overload: "com.google.cloud.datastore.DatastoreWriter.delete*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "A datastore delete operation. It is OK to request the deletion of a non-existing key."
  syntax:
    content: "public abstract void delete(Key[] keys)"
    parameters:
    - id: "keys"
      type: "com.google.cloud.datastore.Key[]"
- uid: "com.google.cloud.datastore.DatastoreWriter.put(com.google.cloud.datastore.FullEntity<?>)"
  id: "put(com.google.cloud.datastore.FullEntity<?>)"
  parent: "com.google.cloud.datastore.DatastoreWriter"
  langs:
  - "java"
  name: "put(FullEntity<?> entity)"
  nameWithType: "DatastoreWriter.put(FullEntity<?> entity)"
  fullName: "com.google.cloud.datastore.DatastoreWriter.put(FullEntity<?> entity)"
  overload: "com.google.cloud.datastore.DatastoreWriter.put*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "A Datastore put (a.k.a upsert) operation: inserts an entity if it does not exist, updates it\n otherwise. This method will automatically allocate an id if necessary."
  syntax:
    content: "public abstract Entity put(FullEntity<?> entity)"
    parameters:
    - id: "entity"
      type: "com.google.cloud.datastore.FullEntity<?>"
      description: "the entity to put"
    return:
      type: "com.google.cloud.datastore.Entity"
      description: "an <code>Entity</code> with the same properties and a key that is either newly allocated or\n     the same one if key is already complete"
- uid: "com.google.cloud.datastore.DatastoreWriter.put(com.google.cloud.datastore.FullEntity<?>...)"
  id: "put(com.google.cloud.datastore.FullEntity<?>...)"
  parent: "com.google.cloud.datastore.DatastoreWriter"
  langs:
  - "java"
  name: "put(FullEntity<?>[] entities)"
  nameWithType: "DatastoreWriter.put(FullEntity<?>[] entities)"
  fullName: "com.google.cloud.datastore.DatastoreWriter.put(FullEntity<?>[] entities)"
  overload: "com.google.cloud.datastore.DatastoreWriter.put*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "A Datastore put (a.k.a upsert) operation: creates an entity if it does not exist, updates it\n otherwise. This method will automatically allocate id for any entity with an incomplete key."
  syntax:
    content: "public abstract List<Entity> put(FullEntity<?>[] entities)"
    parameters:
    - id: "entities"
      type: "com.google.cloud.datastore.FullEntity<?>[]"
    return:
      type: "java.util.List<com.google.cloud.datastore.Entity>"
      description: "a list of updated or inserted <code>Entity</code>, ordered by input. Returned keys are\n     either newly allocated or the same one if was already complete."
- uid: "com.google.cloud.datastore.DatastoreWriter.update(com.google.cloud.datastore.Entity...)"
  id: "update(com.google.cloud.datastore.Entity...)"
  parent: "com.google.cloud.datastore.DatastoreWriter"
  langs:
  - "java"
  name: "update(Entity[] entities)"
  nameWithType: "DatastoreWriter.update(Entity[] entities)"
  fullName: "com.google.cloud.datastore.DatastoreWriter.update(Entity[] entities)"
  overload: "com.google.cloud.datastore.DatastoreWriter.update*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "A Datastore update operation. The operation will fail if an entity with the same key does not\n already exist."
  syntax:
    content: "public abstract void update(Entity[] entities)"
    parameters:
    - id: "entities"
      type: "com.google.cloud.datastore.Entity[]"
references:
- uid: "com.google.cloud.datastore.FullEntity<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.FullEntity"
    name: "FullEntity"
    fullName: "com.google.cloud.datastore.FullEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.Entity"
  name: "Entity"
  nameWithType: "Entity"
  fullName: "com.google.cloud.datastore.Entity"
- uid: "com.google.cloud.datastore.DatastoreWriter.add*"
  name: "add"
  nameWithType: "DatastoreWriter.add"
  fullName: "com.google.cloud.datastore.DatastoreWriter.add"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.FullEntity<?>[]"
  spec.java:
  - uid: "com.google.cloud.datastore.FullEntity"
    name: "FullEntity"
    fullName: "com.google.cloud.datastore.FullEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "java.util.List<com.google.cloud.datastore.Entity>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/cloud/datastore/Entity>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.Entity"
    name: "Entity"
    fullName: "com.google.cloud.datastore.Entity"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.Entity[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Entity"
    name: "Entity"
    fullName: "com.google.cloud.datastore.Entity"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.DatastoreWriter.update*"
  name: "update"
  nameWithType: "DatastoreWriter.update"
  fullName: "com.google.cloud.datastore.DatastoreWriter.update"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.DatastoreWriter.put*"
  name: "put"
  nameWithType: "DatastoreWriter.put"
  fullName: "com.google.cloud.datastore.DatastoreWriter.put"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Key"
    name: "Key"
    fullName: "com.google.cloud.datastore.Key"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.DatastoreWriter.delete*"
  name: "delete"
  nameWithType: "DatastoreWriter.delete"
  fullName: "com.google.cloud.datastore.DatastoreWriter.delete"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.FullEntity"
  name: "FullEntity"
  nameWithType: "FullEntity"
  fullName: "com.google.cloud.datastore.FullEntity"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "?>[]"
  name: "?>[]"
  nameWithType: "?>[]"
  fullName: "?>[]"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
