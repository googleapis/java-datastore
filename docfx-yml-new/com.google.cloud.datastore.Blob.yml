### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.Blob"
  id: "Blob"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.Blob.asInputStream()"
  - "com.google.cloud.datastore.Blob.asReadOnlyByteBuffer()"
  - "com.google.cloud.datastore.Blob.copyFrom(byte[])"
  - "com.google.cloud.datastore.Blob.copyFrom(java.io.InputStream)"
  - "com.google.cloud.datastore.Blob.copyFrom(java.nio.ByteBuffer)"
  - "com.google.cloud.datastore.Blob.copyTo(byte[])"
  - "com.google.cloud.datastore.Blob.copyTo(java.nio.ByteBuffer)"
  - "com.google.cloud.datastore.Blob.equals(java.lang.Object)"
  - "com.google.cloud.datastore.Blob.getLength()"
  - "com.google.cloud.datastore.Blob.hashCode()"
  - "com.google.cloud.datastore.Blob.toByteArray()"
  - "com.google.cloud.datastore.Blob.toString()"
  langs:
  - "java"
  name: "Blob"
  nameWithType: "Blob"
  fullName: "com.google.cloud.datastore.Blob"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "A Google Cloud Datastore Blob. This class is immutable.\nSee Also: <a href=\"https://cloud.google.com/datastore/docs/concepts/entities\">Google Cloud Datastore  Entities, Properties, and Keys</a>\n"
  syntax:
    content: "public final class Blob implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.Blob.Blob(com.google.protobuf.ByteString)"
  id: "Blob(com.google.protobuf.ByteString)"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "Blob(ByteString byteString)"
  nameWithType: "Blob.Blob(ByteString byteString)"
  fullName: "com.google.cloud.datastore.Blob.Blob(ByteString byteString)"
  overload: "com.google.cloud.datastore.Blob.Blob*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Blob(ByteString byteString)"
    parameters:
    - id: "byteString"
      type: "com.google.protobuf.ByteString"
- uid: "com.google.cloud.datastore.Blob.asInputStream()"
  id: "asInputStream()"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "asInputStream()"
  nameWithType: "Blob.asInputStream()"
  fullName: "com.google.cloud.datastore.Blob.asInputStream()"
  overload: "com.google.cloud.datastore.Blob.asInputStream*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns an <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> for this blob content."
  syntax:
    content: "public InputStream asInputStream()"
    return:
      type: "java.io.InputStream"
- uid: "com.google.cloud.datastore.Blob.asReadOnlyByteBuffer()"
  id: "asReadOnlyByteBuffer()"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "asReadOnlyByteBuffer()"
  nameWithType: "Blob.asReadOnlyByteBuffer()"
  fullName: "com.google.cloud.datastore.Blob.asReadOnlyByteBuffer()"
  overload: "com.google.cloud.datastore.Blob.asReadOnlyByteBuffer*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns a read-only <xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\">ByteBuffer</xref> for this blob content."
  syntax:
    content: "public ByteBuffer asReadOnlyByteBuffer()"
    return:
      type: "java.nio.ByteBuffer"
- uid: "com.google.cloud.datastore.Blob.copyFrom(byte[])"
  id: "copyFrom(byte[])"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "copyFrom(byte[] bytes)"
  nameWithType: "Blob.copyFrom(byte[] bytes)"
  fullName: "com.google.cloud.datastore.Blob.copyFrom(byte[] bytes)"
  overload: "com.google.cloud.datastore.Blob.copyFrom*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Blob copyFrom(byte[] bytes)"
    parameters:
    - id: "bytes"
      type: "byte[]"
    return:
      type: "com.google.cloud.datastore.Blob"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Blob.copyFrom(java.io.InputStream)"
  id: "copyFrom(java.io.InputStream)"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "copyFrom(InputStream input)"
  nameWithType: "Blob.copyFrom(InputStream input)"
  fullName: "com.google.cloud.datastore.Blob.copyFrom(InputStream input)"
  overload: "com.google.cloud.datastore.Blob.copyFrom*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Blob copyFrom(InputStream input)"
    parameters:
    - id: "input"
      type: "java.io.InputStream"
    return:
      type: "com.google.cloud.datastore.Blob"
  exceptions:
  - type: "java.io.IOException"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Blob.copyFrom(java.nio.ByteBuffer)"
  id: "copyFrom(java.nio.ByteBuffer)"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "copyFrom(ByteBuffer bytes)"
  nameWithType: "Blob.copyFrom(ByteBuffer bytes)"
  fullName: "com.google.cloud.datastore.Blob.copyFrom(ByteBuffer bytes)"
  overload: "com.google.cloud.datastore.Blob.copyFrom*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Blob copyFrom(ByteBuffer bytes)"
    parameters:
    - id: "bytes"
      type: "java.nio.ByteBuffer"
    return:
      type: "com.google.cloud.datastore.Blob"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Blob.copyTo(byte[])"
  id: "copyTo(byte[])"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "copyTo(byte[] target)"
  nameWithType: "Blob.copyTo(byte[] target)"
  fullName: "com.google.cloud.datastore.Blob.copyTo(byte[] target)"
  overload: "com.google.cloud.datastore.Blob.copyTo*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Copies bytes into a buffer."
  syntax:
    content: "public void copyTo(byte[] target)"
    parameters:
    - id: "target"
      type: "byte[]"
- uid: "com.google.cloud.datastore.Blob.copyTo(java.nio.ByteBuffer)"
  id: "copyTo(java.nio.ByteBuffer)"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "copyTo(ByteBuffer target)"
  nameWithType: "Blob.copyTo(ByteBuffer target)"
  fullName: "com.google.cloud.datastore.Blob.copyTo(ByteBuffer target)"
  overload: "com.google.cloud.datastore.Blob.copyTo*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Copies bytes into a ByteBuffer."
  syntax:
    content: "public void copyTo(ByteBuffer target)"
    parameters:
    - id: "target"
      type: "java.nio.ByteBuffer"
- uid: "com.google.cloud.datastore.Blob.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "Blob.equals(Object obj)"
  fullName: "com.google.cloud.datastore.Blob.equals(Object obj)"
  overload: "com.google.cloud.datastore.Blob.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.Blob.getLength()"
  id: "getLength()"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "getLength()"
  nameWithType: "Blob.getLength()"
  fullName: "com.google.cloud.datastore.Blob.getLength()"
  overload: "com.google.cloud.datastore.Blob.getLength*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the size of this blob."
  syntax:
    content: "public int getLength()"
    return:
      type: "int"
- uid: "com.google.cloud.datastore.Blob.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "Blob.hashCode()"
  fullName: "com.google.cloud.datastore.Blob.hashCode()"
  overload: "com.google.cloud.datastore.Blob.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.datastore.Blob.toByteArray()"
  id: "toByteArray()"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "toByteArray()"
  nameWithType: "Blob.toByteArray()"
  fullName: "com.google.cloud.datastore.Blob.toByteArray()"
  overload: "com.google.cloud.datastore.Blob.toByteArray*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns a copy as byte array."
  syntax:
    content: "public byte[] toByteArray()"
    return:
      type: "byte[]"
- uid: "com.google.cloud.datastore.Blob.toString()"
  id: "toString()"
  parent: "com.google.cloud.datastore.Blob"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "Blob.toString()"
  fullName: "com.google.cloud.datastore.Blob.toString()"
  overload: "com.google.cloud.datastore.Blob.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.protobuf.ByteString"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
    isExternal: true
- uid: "com.google.cloud.datastore.Blob.Blob*"
  name: "Blob"
  nameWithType: "Blob.Blob"
  fullName: "com.google.cloud.datastore.Blob.Blob"
  package: "com.google.cloud.datastore"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.Blob.toString*"
  name: "toString"
  nameWithType: "Blob.toString"
  fullName: "com.google.cloud.datastore.Blob.toString"
  package: "com.google.cloud.datastore"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.datastore.Blob.hashCode*"
  name: "hashCode"
  nameWithType: "Blob.hashCode"
  fullName: "com.google.cloud.datastore.Blob.hashCode"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.Blob.equals*"
  name: "equals"
  nameWithType: "Blob.equals"
  fullName: "com.google.cloud.datastore.Blob.equals"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Blob.getLength*"
  name: "getLength"
  nameWithType: "Blob.getLength"
  fullName: "com.google.cloud.datastore.Blob.getLength"
  package: "com.google.cloud.datastore"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
    isExternal: false
    href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.Blob.toByteArray*"
  name: "toByteArray"
  nameWithType: "Blob.toByteArray"
  fullName: "com.google.cloud.datastore.Blob.toByteArray"
  package: "com.google.cloud.datastore"
- uid: "java.nio.ByteBuffer"
  href: "https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html"
  spec.java:
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html"
- uid: "com.google.cloud.datastore.Blob.asReadOnlyByteBuffer*"
  name: "asReadOnlyByteBuffer"
  nameWithType: "Blob.asReadOnlyByteBuffer"
  fullName: "com.google.cloud.datastore.Blob.asReadOnlyByteBuffer"
  package: "com.google.cloud.datastore"
- uid: "java.io.InputStream"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html"
- uid: "com.google.cloud.datastore.Blob.asInputStream*"
  name: "asInputStream"
  nameWithType: "Blob.asInputStream"
  fullName: "com.google.cloud.datastore.Blob.asInputStream"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Blob.copyTo*"
  name: "copyTo"
  nameWithType: "Blob.copyTo"
  fullName: "com.google.cloud.datastore.Blob.copyTo"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Blob.copyFrom*"
  name: "copyFrom"
  nameWithType: "Blob.copyFrom"
  fullName: "com.google.cloud.datastore.Blob.copyFrom"
  package: "com.google.cloud.datastore"
- uid: "java.io.IOException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
- uid: "java.io.Serializable"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
