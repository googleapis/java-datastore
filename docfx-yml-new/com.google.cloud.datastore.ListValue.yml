### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.ListValue"
  id: "ListValue"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.ListValue.Builder"
  - "com.google.cloud.datastore.ListValue.ListValue(com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  - "com.google.cloud.datastore.ListValue.ListValue(java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  - "com.google.cloud.datastore.ListValue.newBuilder()"
  - "com.google.cloud.datastore.ListValue.of(boolean,boolean...)"
  - "com.google.cloud.datastore.ListValue.of(com.google.cloud.Timestamp,com.google.cloud.Timestamp...)"
  - "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob...)"
  - "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>...)"
  - "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.Key,com.google.cloud.datastore.Key...)"
  - "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng...)"
  - "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  - "com.google.cloud.datastore.ListValue.of(double,double...)"
  - "com.google.cloud.datastore.ListValue.of(java.lang.String,java.lang.String...)"
  - "com.google.cloud.datastore.ListValue.of(java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  - "com.google.cloud.datastore.ListValue.of(long,long...)"
  - "com.google.cloud.datastore.ListValue.toBuilder()"
  langs:
  - "java"
  name: "ListValue"
  nameWithType: "ListValue"
  fullName: "com.google.cloud.datastore.ListValue"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "A Google Cloud Datastore list value. A list value is a list of <xref uid=\"com.google.cloud.datastore.Value\" data-throw-if-not-resolved=\"false\">Value</xref> objects."
  syntax:
    content: "public final class ListValue extends Value<List<? extends Value<?>>>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.datastore.Value"
  inheritedMembers:
  - "com.google.cloud.datastore.Value.equals(java.lang.Object)"
  - "com.google.cloud.datastore.Value.excludeFromIndexes()"
  - "com.google.cloud.datastore.Value.fromPb(com.google.datastore.v1.Value)"
  - "com.google.cloud.datastore.Value.get()"
  - "com.google.cloud.datastore.Value.getType()"
  - "com.google.cloud.datastore.Value.hashCode()"
  - "com.google.cloud.datastore.Value.toBuilder()"
  - "com.google.cloud.datastore.Value.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.ListValue.ListValue(com.google.cloud.datastore.ListValue.Builder)"
  id: "ListValue(com.google.cloud.datastore.ListValue.Builder)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "ListValue(ListValue.Builder builder)"
  nameWithType: "ListValue.ListValue(ListValue.Builder builder)"
  fullName: "com.google.cloud.datastore.ListValue.ListValue(ListValue.Builder builder)"
  overload: "com.google.cloud.datastore.ListValue.ListValue*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "private ListValue(ListValue.Builder builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.datastore.ListValue.Builder"
- uid: "com.google.cloud.datastore.ListValue.ListValue(com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  id: "ListValue(com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "ListValue(Value<?> first, Value<?>[] other)"
  nameWithType: "ListValue.ListValue(Value<?> first, Value<?>[] other)"
  fullName: "com.google.cloud.datastore.ListValue.ListValue(Value<?> first, Value<?>[] other)"
  overload: "com.google.cloud.datastore.ListValue.ListValue*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public ListValue(Value<?> first, Value<?>[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.datastore.Value<?>"
    - id: "other"
      type: "com.google.cloud.datastore.Value<?>[]"
- uid: "com.google.cloud.datastore.ListValue.ListValue(java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  id: "ListValue(java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "ListValue(List<? extends Value<?>> values)"
  nameWithType: "ListValue.ListValue(List<? extends Value<?>> values)"
  fullName: "com.google.cloud.datastore.ListValue.ListValue(List<? extends Value<?>> values)"
  overload: "com.google.cloud.datastore.ListValue.ListValue*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public ListValue(List<? extends Value<?>> values)"
    parameters:
    - id: "values"
      type: "java.util.List<? extends com.google.cloud.datastore.Value<?>>"
- uid: "com.google.cloud.datastore.ListValue.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "ListValue.newBuilder()"
  fullName: "com.google.cloud.datastore.ListValue.newBuilder()"
  overload: "com.google.cloud.datastore.ListValue.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns a builder for <code>ListValue</code> objects."
  syntax:
    content: "public static ListValue.Builder newBuilder()"
    return:
      type: "com.google.cloud.datastore.ListValue.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(boolean,boolean...)"
  id: "of(boolean,boolean...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(boolean first, boolean[] other)"
  nameWithType: "ListValue.of(boolean first, boolean[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(boolean first, boolean[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of boolean values."
  syntax:
    content: "public static ListValue of(boolean first, boolean[] other)"
    parameters:
    - id: "first"
      type: "boolean"
    - id: "other"
      type: "boolean[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(com.google.cloud.Timestamp,com.google.cloud.Timestamp...)"
  id: "of(com.google.cloud.Timestamp,com.google.cloud.Timestamp...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(Timestamp first, Timestamp[] other)"
  nameWithType: "ListValue.of(Timestamp first, Timestamp[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(Timestamp first, Timestamp[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of <code>Timestamp</code> values."
  syntax:
    content: "public static ListValue of(Timestamp first, Timestamp[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.Timestamp"
    - id: "other"
      type: "com.google.cloud.Timestamp[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob...)"
  id: "of(com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(Blob first, Blob[] other)"
  nameWithType: "ListValue.of(Blob first, Blob[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(Blob first, Blob[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of <code>Blob</code> values."
  syntax:
    content: "public static ListValue of(Blob first, Blob[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.datastore.Blob"
    - id: "other"
      type: "com.google.cloud.datastore.Blob[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>...)"
  id: "of(com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(FullEntity<?> first, FullEntity<?>[] other)"
  nameWithType: "ListValue.of(FullEntity<?> first, FullEntity<?>[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(FullEntity<?> first, FullEntity<?>[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of <code>FullEntity</code> values."
  syntax:
    content: "public static ListValue of(FullEntity<?> first, FullEntity<?>[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.datastore.FullEntity<?>"
    - id: "other"
      type: "com.google.cloud.datastore.FullEntity<?>[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.Key,com.google.cloud.datastore.Key...)"
  id: "of(com.google.cloud.datastore.Key,com.google.cloud.datastore.Key...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(Key first, Key[] other)"
  nameWithType: "ListValue.of(Key first, Key[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(Key first, Key[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of <code>Key</code> values."
  syntax:
    content: "public static ListValue of(Key first, Key[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.datastore.Key"
    - id: "other"
      type: "com.google.cloud.datastore.Key[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng...)"
  id: "of(com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(LatLng first, LatLng[] other)"
  nameWithType: "ListValue.of(LatLng first, LatLng[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(LatLng first, LatLng[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of <code>LatLng</code> values."
  syntax:
    content: "public static ListValue of(LatLng first, LatLng[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.datastore.LatLng"
    - id: "other"
      type: "com.google.cloud.datastore.LatLng[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  id: "of(com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(Value<?> first, Value<?>[] other)"
  nameWithType: "ListValue.of(Value<?> first, Value<?>[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(Value<?> first, Value<?>[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of <code>Value</code> objects."
  syntax:
    content: "public static ListValue of(Value<?> first, Value<?>[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.datastore.Value<?>"
    - id: "other"
      type: "com.google.cloud.datastore.Value<?>[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(double,double...)"
  id: "of(double,double...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(double first, double[] other)"
  nameWithType: "ListValue.of(double first, double[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(double first, double[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of double values."
  syntax:
    content: "public static ListValue of(double first, double[] other)"
    parameters:
    - id: "first"
      type: "double"
    - id: "other"
      type: "double[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(java.lang.String,java.lang.String...)"
  id: "of(java.lang.String,java.lang.String...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(String first, String[] other)"
  nameWithType: "ListValue.of(String first, String[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(String first, String[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of string values."
  syntax:
    content: "public static ListValue of(String first, String[] other)"
    parameters:
    - id: "first"
      type: "java.lang.String"
    - id: "other"
      type: "java.lang.String[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  id: "of(java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(List<? extends Value<?>> values)"
  nameWithType: "ListValue.of(List<? extends Value<?>> values)"
  fullName: "com.google.cloud.datastore.ListValue.of(List<? extends Value<?>> values)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a list of <code>Value</code> objects."
  syntax:
    content: "public static ListValue of(List<? extends Value<?>> values)"
    parameters:
    - id: "values"
      type: "java.util.List<? extends com.google.cloud.datastore.Value<?>>"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.of(long,long...)"
  id: "of(long,long...)"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "of(long first, long[] other)"
  nameWithType: "ListValue.of(long first, long[] other)"
  fullName: "com.google.cloud.datastore.ListValue.of(long first, long[] other)"
  overload: "com.google.cloud.datastore.ListValue.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Creates a <code>ListValue</code> object given a number of long values."
  syntax:
    content: "public static ListValue of(long first, long[] other)"
    parameters:
    - id: "first"
      type: "long"
    - id: "other"
      type: "long[]"
    return:
      type: "com.google.cloud.datastore.ListValue"
  javaType: "static method"
- uid: "com.google.cloud.datastore.ListValue.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.datastore.ListValue"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "ListValue.toBuilder()"
  fullName: "com.google.cloud.datastore.ListValue.toBuilder()"
  overload: "com.google.cloud.datastore.ListValue.toBuilder*"
  overridden: "com.google.cloud.datastore.Value.toBuilder()"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns a builder for the list value object."
  syntax:
    content: "public ListValue.Builder toBuilder()"
    return:
      type: "com.google.cloud.datastore.ListValue.Builder"
references:
- uid: "java.util.List<? extends com.google.cloud.datastore.Value<?>>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<? extends com/google/cloud/datastore/Value<?>>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "? extends com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "? extends com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.ListValue.ListValue*"
  name: "ListValue"
  nameWithType: "ListValue.ListValue"
  fullName: "com.google.cloud.datastore.ListValue.ListValue"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Value<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.Value<?>[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.ListValue.Builder"
  name: "ListValue.Builder"
  nameWithType: "ListValue.Builder"
  fullName: "com.google.cloud.datastore.ListValue.Builder"
- uid: "com.google.cloud.datastore.ListValue.toBuilder*"
  name: "toBuilder"
  nameWithType: "ListValue.toBuilder"
  fullName: "com.google.cloud.datastore.ListValue.toBuilder"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.ListValue.of*"
  name: "of"
  nameWithType: "ListValue.of"
  fullName: "com.google.cloud.datastore.ListValue.of"
  package: "com.google.cloud.datastore"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "java.lang.String[]"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String[].html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "long[]"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
    href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "double"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
- uid: "double[]"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
    href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "boolean[]"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
    href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.Timestamp"
  spec.java:
  - uid: "com.google.cloud.Timestamp"
    name: "Timestamp"
    fullName: "com.google.cloud.Timestamp"
    isExternal: false
- uid: "com.google.cloud.Timestamp[]"
  spec.java:
  - uid: "com.google.cloud.Timestamp"
    name: "Timestamp"
    fullName: "com.google.cloud.Timestamp"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.LatLng"
  name: "LatLng"
  nameWithType: "LatLng"
  fullName: "com.google.cloud.datastore.LatLng"
- uid: "com.google.cloud.datastore.LatLng[]"
  spec.java:
  - uid: "com.google.cloud.datastore.LatLng"
    name: "LatLng"
    fullName: "com.google.cloud.datastore.LatLng"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.cloud.datastore.Key"
- uid: "com.google.cloud.datastore.Key[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Key"
    name: "Key"
    fullName: "com.google.cloud.datastore.Key"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.FullEntity<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.FullEntity"
    name: "FullEntity"
    fullName: "com.google.cloud.datastore.FullEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.FullEntity<?>[]"
  spec.java:
  - uid: "com.google.cloud.datastore.FullEntity"
    name: "FullEntity"
    fullName: "com.google.cloud.datastore.FullEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.Blob"
  name: "Blob"
  nameWithType: "Blob"
  fullName: "com.google.cloud.datastore.Blob"
- uid: "com.google.cloud.datastore.Blob[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Blob"
    name: "Blob"
    fullName: "com.google.cloud.datastore.Blob"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.ListValue.newBuilder*"
  name: "newBuilder"
  nameWithType: "ListValue.newBuilder"
  fullName: "com.google.cloud.datastore.ListValue.newBuilder"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Value<java.util.List<? extends com.google.cloud.datastore.Value<?>>>"
  name: "Value<List<? extends Value<?>>>"
  nameWithType: "Value<List<? extends Value<?>>>"
  fullName: "com.google.cloud.datastore.Value<java.util.List<? extends com.google.cloud.datastore.Value<?>>>"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.cloud.datastore.Value.toBuilder()"
  name: "Value.toBuilder()"
  nameWithType: "Value.toBuilder()"
  fullName: "com.google.cloud.datastore.Value.toBuilder()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.datastore.Value.toString()"
  name: "Value.toString()"
  nameWithType: "Value.toString()"
  fullName: "com.google.cloud.datastore.Value.toString()"
- uid: "com.google.cloud.datastore.Value.getType()"
  name: "Value.getType()"
  nameWithType: "Value.getType()"
  fullName: "com.google.cloud.datastore.Value.getType()"
- uid: "com.google.cloud.datastore.Value.equals(java.lang.Object)"
  name: "Value.equals(Object)"
  nameWithType: "Value.equals(Object)"
  fullName: "com.google.cloud.datastore.Value.equals(java.lang.Object)"
- uid: "com.google.cloud.datastore.Value.excludeFromIndexes()"
  name: "Value.excludeFromIndexes()"
  nameWithType: "Value.excludeFromIndexes()"
  fullName: "com.google.cloud.datastore.Value.excludeFromIndexes()"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.datastore.Value.get()"
  name: "Value.get()"
  nameWithType: "Value.get()"
  fullName: "com.google.cloud.datastore.Value.get()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.Value.hashCode()"
  name: "Value.hashCode()"
  nameWithType: "Value.hashCode()"
  fullName: "com.google.cloud.datastore.Value.hashCode()"
- uid: "com.google.cloud.datastore.Value.fromPb(com.google.datastore.v1.Value)"
  name: "Value.fromPb(Value)"
  nameWithType: "Value.fromPb(Value)"
  fullName: "com.google.cloud.datastore.Value.fromPb(com.google.datastore.v1.Value)"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "? extends com.google.cloud.datastore.Value"
  name: "? extends Value"
  nameWithType: "? extends Value"
  fullName: "? extends com.google.cloud.datastore.Value"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "com.google.cloud.datastore.Value"
  name: "Value"
  nameWithType: "Value"
  fullName: "com.google.cloud.datastore.Value"
- uid: "?>[]"
  name: "?>[]"
  nameWithType: "?>[]"
  fullName: "?>[]"
- uid: "com.google.cloud.datastore.FullEntity"
  name: "FullEntity"
  nameWithType: "FullEntity"
  fullName: "com.google.cloud.datastore.FullEntity"
