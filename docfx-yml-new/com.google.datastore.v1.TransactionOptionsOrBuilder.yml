### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  id: "TransactionOptionsOrBuilder"
  parent: "com.google.datastore.v1"
  children:
  - "com.google.datastore.v1.TransactionOptionsOrBuilder.getModeCase()"
  - "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnly()"
  - "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnlyOrBuilder()"
  - "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWrite()"
  - "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWriteOrBuilder()"
  - "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadOnly()"
  - "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadWrite()"
  langs:
  - "java"
  name: "TransactionOptionsOrBuilder"
  nameWithType: "TransactionOptionsOrBuilder"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  type: "Interface"
  package: "com.google.datastore.v1"
  syntax:
    content: "public interface TransactionOptionsOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getModeCase()"
  id: "getModeCase()"
  parent: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  langs:
  - "java"
  name: "getModeCase()"
  nameWithType: "TransactionOptionsOrBuilder.getModeCase()"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getModeCase()"
  overload: "com.google.datastore.v1.TransactionOptionsOrBuilder.getModeCase*"
  type: "Method"
  package: "com.google.datastore.v1"
  syntax:
    content: "public abstract TransactionOptions.ModeCase getModeCase()"
    return:
      type: "com.google.datastore.v1.TransactionOptions.ModeCase"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnly()"
  id: "getReadOnly()"
  parent: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  langs:
  - "java"
  name: "getReadOnly()"
  nameWithType: "TransactionOptionsOrBuilder.getReadOnly()"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnly()"
  overload: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnly*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The transaction should only allow reads.\n \n\n <code>.google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;</code>"
  syntax:
    content: "public abstract TransactionOptions.ReadOnly getReadOnly()"
    return:
      type: "com.google.datastore.v1.TransactionOptions.ReadOnly"
      description: "The readOnly."
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnlyOrBuilder()"
  id: "getReadOnlyOrBuilder()"
  parent: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  langs:
  - "java"
  name: "getReadOnlyOrBuilder()"
  nameWithType: "TransactionOptionsOrBuilder.getReadOnlyOrBuilder()"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnlyOrBuilder()"
  overload: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnlyOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The transaction should only allow reads.\n \n\n <code>.google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;</code>"
  syntax:
    content: "public abstract TransactionOptions.ReadOnlyOrBuilder getReadOnlyOrBuilder()"
    return:
      type: "com.google.datastore.v1.TransactionOptions.ReadOnlyOrBuilder"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWrite()"
  id: "getReadWrite()"
  parent: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  langs:
  - "java"
  name: "getReadWrite()"
  nameWithType: "TransactionOptionsOrBuilder.getReadWrite()"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWrite()"
  overload: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWrite*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The transaction should allow both reads and writes.\n \n\n <code>.google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;</code>"
  syntax:
    content: "public abstract TransactionOptions.ReadWrite getReadWrite()"
    return:
      type: "com.google.datastore.v1.TransactionOptions.ReadWrite"
      description: "The readWrite."
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWriteOrBuilder()"
  id: "getReadWriteOrBuilder()"
  parent: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  langs:
  - "java"
  name: "getReadWriteOrBuilder()"
  nameWithType: "TransactionOptionsOrBuilder.getReadWriteOrBuilder()"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWriteOrBuilder()"
  overload: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWriteOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The transaction should allow both reads and writes.\n \n\n <code>.google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;</code>"
  syntax:
    content: "public abstract TransactionOptions.ReadWriteOrBuilder getReadWriteOrBuilder()"
    return:
      type: "com.google.datastore.v1.TransactionOptions.ReadWriteOrBuilder"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadOnly()"
  id: "hasReadOnly()"
  parent: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  langs:
  - "java"
  name: "hasReadOnly()"
  nameWithType: "TransactionOptionsOrBuilder.hasReadOnly()"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadOnly()"
  overload: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadOnly*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The transaction should only allow reads.\n \n\n <code>.google.datastore.v1.TransactionOptions.ReadOnly read_only = 2;</code>"
  syntax:
    content: "public abstract boolean hasReadOnly()"
    return:
      type: "boolean"
      description: "Whether the readOnly field is set."
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadWrite()"
  id: "hasReadWrite()"
  parent: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  langs:
  - "java"
  name: "hasReadWrite()"
  nameWithType: "TransactionOptionsOrBuilder.hasReadWrite()"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadWrite()"
  overload: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadWrite*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The transaction should allow both reads and writes.\n \n\n <code>.google.datastore.v1.TransactionOptions.ReadWrite read_write = 1;</code>"
  syntax:
    content: "public abstract boolean hasReadWrite()"
    return:
      type: "boolean"
      description: "Whether the readWrite field is set."
references:
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadWrite*"
  name: "hasReadWrite"
  nameWithType: "TransactionOptionsOrBuilder.hasReadWrite"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadWrite"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.TransactionOptions.ReadWrite"
  name: "TransactionOptions.ReadWrite"
  nameWithType: "TransactionOptions.ReadWrite"
  fullName: "com.google.datastore.v1.TransactionOptions.ReadWrite"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWrite*"
  name: "getReadWrite"
  nameWithType: "TransactionOptionsOrBuilder.getReadWrite"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWrite"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.TransactionOptions.ReadWriteOrBuilder"
  name: "TransactionOptions.ReadWriteOrBuilder"
  nameWithType: "TransactionOptions.ReadWriteOrBuilder"
  fullName: "com.google.datastore.v1.TransactionOptions.ReadWriteOrBuilder"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWriteOrBuilder*"
  name: "getReadWriteOrBuilder"
  nameWithType: "TransactionOptionsOrBuilder.getReadWriteOrBuilder"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadWriteOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadOnly*"
  name: "hasReadOnly"
  nameWithType: "TransactionOptionsOrBuilder.hasReadOnly"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.hasReadOnly"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.TransactionOptions.ReadOnly"
  name: "TransactionOptions.ReadOnly"
  nameWithType: "TransactionOptions.ReadOnly"
  fullName: "com.google.datastore.v1.TransactionOptions.ReadOnly"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnly*"
  name: "getReadOnly"
  nameWithType: "TransactionOptionsOrBuilder.getReadOnly"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnly"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.TransactionOptions.ReadOnlyOrBuilder"
  name: "TransactionOptions.ReadOnlyOrBuilder"
  nameWithType: "TransactionOptions.ReadOnlyOrBuilder"
  fullName: "com.google.datastore.v1.TransactionOptions.ReadOnlyOrBuilder"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnlyOrBuilder*"
  name: "getReadOnlyOrBuilder"
  nameWithType: "TransactionOptionsOrBuilder.getReadOnlyOrBuilder"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getReadOnlyOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.TransactionOptions.ModeCase"
  name: "TransactionOptions.ModeCase"
  nameWithType: "TransactionOptions.ModeCase"
  fullName: "com.google.datastore.v1.TransactionOptions.ModeCase"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder.getModeCase*"
  name: "getModeCase"
  nameWithType: "TransactionOptionsOrBuilder.getModeCase"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder.getModeCase"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
