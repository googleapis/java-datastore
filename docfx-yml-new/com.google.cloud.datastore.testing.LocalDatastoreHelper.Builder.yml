### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  id: "Builder"
  parent: "com.google.cloud.datastore.testing"
  children:
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.build()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setConsistency(double)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setDataDir(java.nio.file.Path)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setPort(int)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setProjectId(java.lang.String)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setStoreOnDisk(boolean)"
  langs:
  - "java"
  name: "LocalDatastoreHelper.Builder"
  nameWithType: "LocalDatastoreHelper.Builder"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  type: "Class"
  package: "com.google.cloud.datastore.testing"
  summary: "A builder for <code>LocalDatastoreHelper</code> objects."
  syntax:
    content: "public static class LocalDatastoreHelper.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "LocalDatastoreHelper.Builder.Builder()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.Builder()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "private Builder()"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.Builder(com.google.cloud.datastore.testing.LocalDatastoreHelper)"
  id: "Builder(com.google.cloud.datastore.testing.LocalDatastoreHelper)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  langs:
  - "java"
  name: "Builder(LocalDatastoreHelper helper)"
  nameWithType: "LocalDatastoreHelper.Builder.Builder(LocalDatastoreHelper helper)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.Builder(LocalDatastoreHelper helper)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "private Builder(LocalDatastoreHelper helper)"
    parameters:
    - id: "helper"
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "LocalDatastoreHelper.Builder.build()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.build()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.build*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Creates a <code>LocalDatastoreHelper</code> object."
  syntax:
    content: "public LocalDatastoreHelper build()"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setConsistency(double)"
  id: "setConsistency(double)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  langs:
  - "java"
  name: "setConsistency(double consistency)"
  nameWithType: "LocalDatastoreHelper.Builder.setConsistency(double consistency)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setConsistency(double consistency)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setConsistency*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "public LocalDatastoreHelper.Builder setConsistency(double consistency)"
    parameters:
    - id: "consistency"
      type: "double"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setDataDir(java.nio.file.Path)"
  id: "setDataDir(java.nio.file.Path)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  langs:
  - "java"
  name: "setDataDir(Path dataDir)"
  nameWithType: "LocalDatastoreHelper.Builder.setDataDir(Path dataDir)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setDataDir(Path dataDir)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setDataDir*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "public LocalDatastoreHelper.Builder setDataDir(Path dataDir)"
    parameters:
    - id: "dataDir"
      type: "java.nio.file.Path"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setPort(int)"
  id: "setPort(int)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  langs:
  - "java"
  name: "setPort(int port)"
  nameWithType: "LocalDatastoreHelper.Builder.setPort(int port)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setPort(int port)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setPort*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "public LocalDatastoreHelper.Builder setPort(int port)"
    parameters:
    - id: "port"
      type: "int"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setProjectId(java.lang.String)"
  id: "setProjectId(java.lang.String)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  langs:
  - "java"
  name: "setProjectId(String projectId)"
  nameWithType: "LocalDatastoreHelper.Builder.setProjectId(String projectId)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setProjectId(String projectId)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setProjectId*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "public LocalDatastoreHelper.Builder setProjectId(String projectId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setStoreOnDisk(boolean)"
  id: "setStoreOnDisk(boolean)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  langs:
  - "java"
  name: "setStoreOnDisk(boolean storeOnDisk)"
  nameWithType: "LocalDatastoreHelper.Builder.setStoreOnDisk(boolean storeOnDisk)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setStoreOnDisk(boolean storeOnDisk)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setStoreOnDisk*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "public LocalDatastoreHelper.Builder setStoreOnDisk(boolean storeOnDisk)"
    parameters:
    - id: "storeOnDisk"
      type: "boolean"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
references:
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.Builder*"
  name: "Builder"
  nameWithType: "LocalDatastoreHelper.Builder.Builder"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.Builder"
  package: "com.google.cloud.datastore.testing"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  name: "LocalDatastoreHelper"
  nameWithType: "LocalDatastoreHelper"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
- uid: "double"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setConsistency*"
  name: "setConsistency"
  nameWithType: "LocalDatastoreHelper.Builder.setConsistency"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setConsistency"
  package: "com.google.cloud.datastore.testing"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setPort*"
  name: "setPort"
  nameWithType: "LocalDatastoreHelper.Builder.setPort"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setPort"
  package: "com.google.cloud.datastore.testing"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setProjectId*"
  name: "setProjectId"
  nameWithType: "LocalDatastoreHelper.Builder.setProjectId"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setProjectId"
  package: "com.google.cloud.datastore.testing"
- uid: "java.nio.file.Path"
  href: "https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html"
  spec.java:
  - uid: "java.nio.file.Path"
    name: "Path"
    fullName: "java.nio.file.Path"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setDataDir*"
  name: "setDataDir"
  nameWithType: "LocalDatastoreHelper.Builder.setDataDir"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setDataDir"
  package: "com.google.cloud.datastore.testing"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setStoreOnDisk*"
  name: "setStoreOnDisk"
  nameWithType: "LocalDatastoreHelper.Builder.setStoreOnDisk"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.setStoreOnDisk"
  package: "com.google.cloud.datastore.testing"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.build*"
  name: "build"
  nameWithType: "LocalDatastoreHelper.Builder.build"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder.build"
  package: "com.google.cloud.datastore.testing"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
