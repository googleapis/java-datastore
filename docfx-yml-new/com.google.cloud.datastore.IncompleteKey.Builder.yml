### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.IncompleteKey.Builder"
  id: "Builder"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.IncompleteKey.Builder.build()"
  langs:
  - "java"
  name: "IncompleteKey.Builder"
  nameWithType: "IncompleteKey.Builder"
  fullName: "com.google.cloud.datastore.IncompleteKey.Builder"
  type: "Class"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static class IncompleteKey.Builder extends BaseKey.Builder<IncompleteKey.Builder>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.datastore.BaseKey.Builder"
  inheritedMembers:
  - "com.google.cloud.datastore.BaseKey.Builder.addAncestor(com.google.cloud.datastore.PathElement)"
  - "com.google.cloud.datastore.BaseKey.Builder.addAncestors(com.google.cloud.datastore.PathElement,com.google.cloud.datastore.PathElement...)"
  - "com.google.cloud.datastore.BaseKey.Builder.addAncestors(java.lang.Iterable<com.google.cloud.datastore.PathElement>)"
  - "com.google.cloud.datastore.BaseKey.Builder.build()"
  - "com.google.cloud.datastore.BaseKey.Builder.setDatabaseId(java.lang.String)"
  - "com.google.cloud.datastore.BaseKey.Builder.setKind(java.lang.String)"
  - "com.google.cloud.datastore.BaseKey.Builder.setNamespace(java.lang.String)"
  - "com.google.cloud.datastore.BaseKey.Builder.setProjectId(java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.IncompleteKey.Builder.Builder(com.google.cloud.datastore.IncompleteKey)"
  id: "Builder(com.google.cloud.datastore.IncompleteKey)"
  parent: "com.google.cloud.datastore.IncompleteKey.Builder"
  langs:
  - "java"
  name: "Builder(IncompleteKey copyFrom)"
  nameWithType: "IncompleteKey.Builder.Builder(IncompleteKey copyFrom)"
  fullName: "com.google.cloud.datastore.IncompleteKey.Builder.Builder(IncompleteKey copyFrom)"
  overload: "com.google.cloud.datastore.IncompleteKey.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "private Builder(IncompleteKey copyFrom)"
    parameters:
    - id: "copyFrom"
      type: "com.google.cloud.datastore.IncompleteKey"
- uid: "com.google.cloud.datastore.IncompleteKey.Builder.Builder(java.lang.String,java.lang.String)"
  id: "Builder(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.IncompleteKey.Builder"
  langs:
  - "java"
  name: "Builder(String projectId, String kind)"
  nameWithType: "IncompleteKey.Builder.Builder(String projectId, String kind)"
  fullName: "com.google.cloud.datastore.IncompleteKey.Builder.Builder(String projectId, String kind)"
  overload: "com.google.cloud.datastore.IncompleteKey.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "private Builder(String projectId, String kind)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.IncompleteKey.Builder.Builder(java.lang.String,java.lang.String,java.lang.String)"
  id: "Builder(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.IncompleteKey.Builder"
  langs:
  - "java"
  name: "Builder(String projectId, String kind, String databaseId)"
  nameWithType: "IncompleteKey.Builder.Builder(String projectId, String kind, String databaseId)"
  fullName: "com.google.cloud.datastore.IncompleteKey.Builder.Builder(String projectId, String kind, String databaseId)"
  overload: "com.google.cloud.datastore.IncompleteKey.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "private Builder(String projectId, String kind, String databaseId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
    - id: "databaseId"
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.IncompleteKey.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.datastore.IncompleteKey.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "IncompleteKey.Builder.build()"
  fullName: "com.google.cloud.datastore.IncompleteKey.Builder.build()"
  overload: "com.google.cloud.datastore.IncompleteKey.Builder.build*"
  overridden: "com.google.cloud.datastore.BaseKey.Builder.build()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public IncompleteKey build()"
    return:
      type: "com.google.cloud.datastore.IncompleteKey"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.IncompleteKey.Builder.Builder*"
  name: "Builder"
  nameWithType: "IncompleteKey.Builder.Builder"
  fullName: "com.google.cloud.datastore.IncompleteKey.Builder.Builder"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.IncompleteKey"
  name: "IncompleteKey"
  nameWithType: "IncompleteKey"
  fullName: "com.google.cloud.datastore.IncompleteKey"
- uid: "com.google.cloud.datastore.IncompleteKey.Builder.build*"
  name: "build"
  nameWithType: "IncompleteKey.Builder.build"
  fullName: "com.google.cloud.datastore.IncompleteKey.Builder.build"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.Builder<com.google.cloud.datastore.IncompleteKey.Builder>"
  name: "BaseKey.Builder<IncompleteKey.Builder>"
  nameWithType: "BaseKey.Builder<IncompleteKey.Builder>"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<com.google.cloud.datastore.IncompleteKey.Builder>"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setProjectId(java.lang.String)"
  name: "BaseKey.Builder.setProjectId(String)"
  nameWithType: "BaseKey.Builder.setProjectId(String)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.setProjectId(java.lang.String)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setKind(java.lang.String)"
  name: "BaseKey.Builder.setKind(String)"
  nameWithType: "BaseKey.Builder.setKind(String)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.setKind(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestors(java.lang.Iterable<com.google.cloud.datastore.PathElement>)"
  name: "BaseKey.Builder.addAncestors(Iterable<PathElement>)"
  nameWithType: "BaseKey.Builder.addAncestors(Iterable<PathElement>)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.addAncestors(java.lang.Iterable<com.google.cloud.datastore.PathElement>)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestor(com.google.cloud.datastore.PathElement)"
  name: "BaseKey.Builder.addAncestor(PathElement)"
  nameWithType: "BaseKey.Builder.addAncestor(PathElement)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.addAncestor(com.google.cloud.datastore.PathElement)"
- uid: "com.google.cloud.datastore.BaseKey.Builder.build()"
  name: "BaseKey.Builder.build()"
  nameWithType: "BaseKey.Builder.build()"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.build()"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setNamespace(java.lang.String)"
  name: "BaseKey.Builder.setNamespace(String)"
  nameWithType: "BaseKey.Builder.setNamespace(String)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.setNamespace(java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setDatabaseId(java.lang.String)"
  name: "BaseKey.Builder.setDatabaseId(String)"
  nameWithType: "BaseKey.Builder.setDatabaseId(String)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.setDatabaseId(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestors(com.google.cloud.datastore.PathElement,com.google.cloud.datastore.PathElement...)"
  name: "BaseKey.Builder.addAncestors(PathElement,PathElement)"
  nameWithType: "BaseKey.Builder.addAncestors(PathElement,PathElement)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.addAncestors(com.google.cloud.datastore.PathElement,com.google.cloud.datastore.PathElement...)"
- uid: "com.google.cloud.datastore.BaseKey.Builder"
  name: "BaseKey.Builder"
  nameWithType: "BaseKey.Builder"
  fullName: "com.google.cloud.datastore.BaseKey.Builder"
- uid: "com.google.cloud.datastore.PathElement>)"
  name: "PathElement>)"
  nameWithType: "PathElement>)"
  fullName: "com.google.cloud.datastore.PathElement>)"
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestors(java.lang.Iterable"
  name: "BaseKey.Builder.addAncestors(Iterable"
  nameWithType: "BaseKey.Builder.addAncestors(Iterable"
  fullName: "com.google.cloud.datastore.BaseKey.Builder.addAncestors(java.lang.Iterable"
