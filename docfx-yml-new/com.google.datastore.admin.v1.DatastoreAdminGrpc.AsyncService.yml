### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService"
  id: "AsyncService"
  parent: "com.google.datastore.admin.v1"
  children:
  - "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.createIndex(com.google.datastore.admin.v1.CreateIndexRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.deleteIndex(com.google.datastore.admin.v1.DeleteIndexRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.exportEntities(com.google.datastore.admin.v1.ExportEntitiesRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.getIndex(com.google.datastore.admin.v1.GetIndexRequest,io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.Index>)"
  - "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.importEntities(com.google.datastore.admin.v1.ImportEntitiesRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  - "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.listIndexes(com.google.datastore.admin.v1.ListIndexesRequest,io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.ListIndexesResponse>)"
  langs:
  - "java"
  name: "DatastoreAdminGrpc.AsyncService"
  nameWithType: "DatastoreAdminGrpc.AsyncService"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService"
  type: "Interface"
  package: "com.google.datastore.admin.v1"
  summary: "\n Google Cloud Datastore Admin API\n The Datastore Admin API provides several admin services for Cloud Datastore.\n Concepts: Project, namespace, kind, and entity as defined in the Google Cloud\n Datastore API.\n Operation: An Operation represents work being performed in the background.\n EntityFilter: Allows specifying a subset of entities in a project. This is\n specified as a combination of kinds and namespaces (either or both of which\n may be all).\n Export/Import Service:\n - The Export/Import service provides the ability to copy all or a subset of\n entities to/from Google Cloud Storage.\n - Exported data may be imported into Cloud Datastore for any Google Cloud\n Platform project. It is not restricted to the export source project. It is\n possible to export from one project and then import into another.\n - Exported data can also be loaded into Google BigQuery for analysis.\n - Exports and imports are performed asynchronously. An Operation resource is\n created for each export/import. The state (including any errors encountered)\n of the export/import may be queried via the Operation resource.\n Index Service:\n - The index service manages Cloud Datastore composite indexes.\n - Index creation and deletion are performed asynchronously.\n An Operation resource is created for each such asynchronous operation.\n The state of the operation (including any errors encountered)\n may be queried via the Operation resource.\n Operation Service:\n - The Operations collection provides a record of actions performed for the\n specified project (including any operations in progress). Operations are not\n created directly but through calls on other collections or resources.\n - An operation that is not yet done may be cancelled. The request to cancel\n is asynchronous and the operation may continue to run for some time after the\n request to cancel is made.\n - An operation that is done may be deleted so that it is no longer listed as\n part of the Operation collection.\n - ListOperations returns all pending operations, but not completed\n operations.\n - Operations are created by service DatastoreAdmin, but are accessed via\n service google.longrunning.Operations.\n "
  syntax:
    content: "public static interface DatastoreAdminGrpc.AsyncService"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.createIndex(com.google.datastore.admin.v1.CreateIndexRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "createIndex(com.google.datastore.admin.v1.CreateIndexRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService"
  langs:
  - "java"
  name: "createIndex(CreateIndexRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "DatastoreAdminGrpc.AsyncService.createIndex(CreateIndexRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.createIndex(CreateIndexRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.createIndex*"
  type: "Method"
  package: "com.google.datastore.admin.v1"
  summary: "\n Creates the specified index.\n A newly created index's initial state is <code>CREATING</code>. On completion of the\n returned <xref uid=\"\" data-throw-if-not-resolved=\"false\">google.longrunning.Operation</xref>, the\n state will be <code>READY</code>. If the index already exists, the call will return an\n <code>ALREADY_EXISTS</code> status.\n During index creation, the process could result in an error, in which\n case the index will move to the <code>ERROR</code> state. The process can be recovered\n by fixing the data that caused the error, removing the index with\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">delete</xref>, then\n re-creating the index with [create]\n [google.datastore.admin.v1.DatastoreAdmin.CreateIndex].\n Indexes with a single property cannot be created.\n "
  syntax:
    content: "public default void createIndex(CreateIndexRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.datastore.admin.v1.CreateIndexRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.deleteIndex(com.google.datastore.admin.v1.DeleteIndexRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "deleteIndex(com.google.datastore.admin.v1.DeleteIndexRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService"
  langs:
  - "java"
  name: "deleteIndex(DeleteIndexRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "DatastoreAdminGrpc.AsyncService.deleteIndex(DeleteIndexRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.deleteIndex(DeleteIndexRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.deleteIndex*"
  type: "Method"
  package: "com.google.datastore.admin.v1"
  summary: "\n Deletes an existing index.\n An index can only be deleted if it is in a <code>READY</code> or <code>ERROR</code> state. On\n successful execution of the request, the index will be in a <code>DELETING</code>\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">state</xref>. And on completion of the\n returned <xref uid=\"\" data-throw-if-not-resolved=\"false\">google.longrunning.Operation</xref>, the\n index will be removed.\n During index deletion, the process could result in an error, in which\n case the index will move to the <code>ERROR</code> state. The process can be recovered\n by fixing the data that caused the error, followed by calling\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">delete</xref> again.\n "
  syntax:
    content: "public default void deleteIndex(DeleteIndexRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.datastore.admin.v1.DeleteIndexRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.exportEntities(com.google.datastore.admin.v1.ExportEntitiesRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "exportEntities(com.google.datastore.admin.v1.ExportEntitiesRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService"
  langs:
  - "java"
  name: "exportEntities(ExportEntitiesRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "DatastoreAdminGrpc.AsyncService.exportEntities(ExportEntitiesRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.exportEntities(ExportEntitiesRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.exportEntities*"
  type: "Method"
  package: "com.google.datastore.admin.v1"
  summary: "\n Exports a copy of all or a subset of entities from Google Cloud Datastore\n to another storage system, such as Google Cloud Storage. Recent updates to\n entities may not be reflected in the export. The export occurs in the\n background and its progress can be monitored and managed via the\n Operation resource that is created. The output of an export may only be\n used once the associated operation is done. If an export operation is\n cancelled before completion it may leave partial data behind in Google\n Cloud Storage.\n "
  syntax:
    content: "public default void exportEntities(ExportEntitiesRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.datastore.admin.v1.ExportEntitiesRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.getIndex(com.google.datastore.admin.v1.GetIndexRequest,io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.Index>)"
  id: "getIndex(com.google.datastore.admin.v1.GetIndexRequest,io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.Index>)"
  parent: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService"
  langs:
  - "java"
  name: "getIndex(GetIndexRequest request, StreamObserver<Index> responseObserver)"
  nameWithType: "DatastoreAdminGrpc.AsyncService.getIndex(GetIndexRequest request, StreamObserver<Index> responseObserver)"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.getIndex(GetIndexRequest request, StreamObserver<Index> responseObserver)"
  overload: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.getIndex*"
  type: "Method"
  package: "com.google.datastore.admin.v1"
  summary: "\n Gets an index.\n "
  syntax:
    content: "public default void getIndex(GetIndexRequest request, StreamObserver<Index> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.datastore.admin.v1.GetIndexRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.Index>"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.importEntities(com.google.datastore.admin.v1.ImportEntitiesRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  id: "importEntities(com.google.datastore.admin.v1.ImportEntitiesRequest,io.grpc.stub.StreamObserver<com.google.longrunning.Operation>)"
  parent: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService"
  langs:
  - "java"
  name: "importEntities(ImportEntitiesRequest request, StreamObserver<Operation> responseObserver)"
  nameWithType: "DatastoreAdminGrpc.AsyncService.importEntities(ImportEntitiesRequest request, StreamObserver<Operation> responseObserver)"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.importEntities(ImportEntitiesRequest request, StreamObserver<Operation> responseObserver)"
  overload: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.importEntities*"
  type: "Method"
  package: "com.google.datastore.admin.v1"
  summary: "\n Imports entities into Google Cloud Datastore. Existing entities with the\n same key are overwritten. The import occurs in the background and its\n progress can be monitored and managed via the Operation resource that is\n created. If an ImportEntities operation is cancelled, it is possible\n that a subset of the data has already been imported to Cloud Datastore.\n "
  syntax:
    content: "public default void importEntities(ImportEntitiesRequest request, StreamObserver<Operation> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.datastore.admin.v1.ImportEntitiesRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.listIndexes(com.google.datastore.admin.v1.ListIndexesRequest,io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.ListIndexesResponse>)"
  id: "listIndexes(com.google.datastore.admin.v1.ListIndexesRequest,io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.ListIndexesResponse>)"
  parent: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService"
  langs:
  - "java"
  name: "listIndexes(ListIndexesRequest request, StreamObserver<ListIndexesResponse> responseObserver)"
  nameWithType: "DatastoreAdminGrpc.AsyncService.listIndexes(ListIndexesRequest request, StreamObserver<ListIndexesResponse> responseObserver)"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.listIndexes(ListIndexesRequest request, StreamObserver<ListIndexesResponse> responseObserver)"
  overload: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.listIndexes*"
  type: "Method"
  package: "com.google.datastore.admin.v1"
  summary: "\n Lists the indexes that match the specified filters.  Datastore uses an\n eventually consistent query to fetch the list of indexes and may\n occasionally return stale results.\n "
  syntax:
    content: "public default void listIndexes(ListIndexesRequest request, StreamObserver<ListIndexesResponse> responseObserver)"
    parameters:
    - id: "request"
      type: "com.google.datastore.admin.v1.ListIndexesRequest"
    - id: "responseObserver"
      type: "io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.ListIndexesResponse>"
references:
- uid: "com.google.datastore.admin.v1.ExportEntitiesRequest"
  name: "ExportEntitiesRequest"
  nameWithType: "ExportEntitiesRequest"
  fullName: "com.google.datastore.admin.v1.ExportEntitiesRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.longrunning.Operation>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.longrunning.Operation"
    name: "Operation"
    fullName: "com.google.longrunning.Operation"
    isExternal: true
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.exportEntities*"
  name: "exportEntities"
  nameWithType: "DatastoreAdminGrpc.AsyncService.exportEntities"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.exportEntities"
  package: "com.google.datastore.admin.v1"
- uid: "com.google.datastore.admin.v1.ImportEntitiesRequest"
  name: "ImportEntitiesRequest"
  nameWithType: "ImportEntitiesRequest"
  fullName: "com.google.datastore.admin.v1.ImportEntitiesRequest"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.importEntities*"
  name: "importEntities"
  nameWithType: "DatastoreAdminGrpc.AsyncService.importEntities"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.importEntities"
  package: "com.google.datastore.admin.v1"
- uid: "com.google.datastore.admin.v1.CreateIndexRequest"
  name: "CreateIndexRequest"
  nameWithType: "CreateIndexRequest"
  fullName: "com.google.datastore.admin.v1.CreateIndexRequest"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.createIndex*"
  name: "createIndex"
  nameWithType: "DatastoreAdminGrpc.AsyncService.createIndex"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.createIndex"
  package: "com.google.datastore.admin.v1"
- uid: "com.google.datastore.admin.v1.DeleteIndexRequest"
  name: "DeleteIndexRequest"
  nameWithType: "DeleteIndexRequest"
  fullName: "com.google.datastore.admin.v1.DeleteIndexRequest"
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.deleteIndex*"
  name: "deleteIndex"
  nameWithType: "DatastoreAdminGrpc.AsyncService.deleteIndex"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.deleteIndex"
  package: "com.google.datastore.admin.v1"
- uid: "com.google.datastore.admin.v1.GetIndexRequest"
  name: "GetIndexRequest"
  nameWithType: "GetIndexRequest"
  fullName: "com.google.datastore.admin.v1.GetIndexRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.Index>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.admin.v1.Index"
    name: "Index"
    fullName: "com.google.datastore.admin.v1.Index"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.getIndex*"
  name: "getIndex"
  nameWithType: "DatastoreAdminGrpc.AsyncService.getIndex"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.getIndex"
  package: "com.google.datastore.admin.v1"
- uid: "com.google.datastore.admin.v1.ListIndexesRequest"
  name: "ListIndexesRequest"
  nameWithType: "ListIndexesRequest"
  fullName: "com.google.datastore.admin.v1.ListIndexesRequest"
- uid: "io.grpc.stub.StreamObserver<com.google.datastore.admin.v1.ListIndexesResponse>"
  spec.java:
  - uid: "io.grpc.stub.StreamObserver"
    name: "StreamObserver"
    fullName: "io.grpc.stub.StreamObserver"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.admin.v1.ListIndexesResponse"
    name: "ListIndexesResponse"
    fullName: "com.google.datastore.admin.v1.ListIndexesResponse"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.listIndexes*"
  name: "listIndexes"
  nameWithType: "DatastoreAdminGrpc.AsyncService.listIndexes"
  fullName: "com.google.datastore.admin.v1.DatastoreAdminGrpc.AsyncService.listIndexes"
  package: "com.google.datastore.admin.v1"
- uid: "io.grpc.stub.StreamObserver"
  name: "StreamObserver"
  nameWithType: "StreamObserver"
  fullName: "io.grpc.stub.StreamObserver"
- uid: "com.google.longrunning.Operation"
  isExternal: true
  name: "Operation"
  nameWithType: "Operation"
  fullName: "com.google.longrunning.Operation"
- uid: "com.google.datastore.admin.v1.Index"
  name: "Index"
  nameWithType: "Index"
  fullName: "com.google.datastore.admin.v1.Index"
- uid: "com.google.datastore.admin.v1.ListIndexesResponse"
  name: "ListIndexesResponse"
  nameWithType: "ListIndexesResponse"
  fullName: "com.google.datastore.admin.v1.ListIndexesResponse"
