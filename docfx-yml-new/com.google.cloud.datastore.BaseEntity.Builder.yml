### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.BaseEntity.Builder"
  id: "Builder"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.BaseEntity.Builder.build()"
  - "com.google.cloud.datastore.BaseEntity.Builder.clear()"
  - "com.google.cloud.datastore.BaseEntity.Builder.key()"
  - "com.google.cloud.datastore.BaseEntity.Builder.remove(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,boolean)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,boolean,boolean,boolean...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.Timestamp)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.Timestamp,com.google.cloud.Timestamp,com.google.cloud.Timestamp...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Blob)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.FullEntity<?>)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Key,com.google.cloud.datastore.Key,com.google.cloud.datastore.Key...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.LatLng)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Value<?>)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,double)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,double,double,double...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,java.lang.String,java.lang.String,java.lang.String...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,long)"
  - "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,long,long,long...)"
  - "com.google.cloud.datastore.BaseEntity.Builder.setKey(K)"
  - "com.google.cloud.datastore.BaseEntity.Builder.setNull(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.Builder.setProperties()"
  - "com.google.cloud.datastore.BaseEntity.Builder.setProperties(java.util.Map<java.lang.String,com.google.cloud.datastore.Value<?>>)"
  langs:
  - "java"
  name: "BaseEntity.Builder<K,B>"
  nameWithType: "BaseEntity.Builder<K,B>"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>"
  type: "Class"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public abstract static class BaseEntity.Builder<K,B>"
    typeParameters:
    - id: "K"
    - id: "B"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "BaseEntity.Builder<K,B>.Builder()"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.Builder()"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Builder()"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.Builder(K)"
  id: "Builder(K)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "Builder(K key)"
  nameWithType: "BaseEntity.Builder<K,B>.Builder(K key)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.Builder(K key)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Builder(K key)"
    parameters:
    - id: "key"
      type: "K"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.Builder(K,com.google.cloud.datastore.BaseEntity<?>)"
  id: "Builder(K,com.google.cloud.datastore.BaseEntity<?>)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "Builder(K key, BaseEntity<?> entity)"
  nameWithType: "BaseEntity.Builder<K,B>.Builder(K key, BaseEntity<?> entity)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.Builder(K key, BaseEntity<?> entity)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Builder(K key, BaseEntity<?> entity)"
    parameters:
    - id: "key"
      type: "K"
    - id: "entity"
      type: "com.google.cloud.datastore.BaseEntity<?>"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.Builder(com.google.cloud.datastore.BaseEntity<K>)"
  id: "Builder(com.google.cloud.datastore.BaseEntity<K>)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "Builder(BaseEntity<K> entity)"
  nameWithType: "BaseEntity.Builder<K,B>.Builder(BaseEntity<K> entity)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.Builder(BaseEntity<K> entity)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Builder(BaseEntity<K> entity)"
    parameters:
    - id: "entity"
      type: "com.google.cloud.datastore.BaseEntity<K>"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "BaseEntity.Builder<K,B>.build()"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.build()"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.build*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public abstract BaseEntity<K> build()"
    return:
      type: "com.google.cloud.datastore.BaseEntity<K>"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.clear()"
  id: "clear()"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "clear()"
  nameWithType: "BaseEntity.Builder<K,B>.clear()"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.clear()"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.clear*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Clears all the properties."
  syntax:
    content: "public B clear()"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.key()"
  id: "key()"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "key()"
  nameWithType: "BaseEntity.Builder<K,B>.key()"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.key()"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.key*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "protected K key()"
    return:
      type: "K"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.remove(java.lang.String)"
  id: "remove(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "remove(String name)"
  nameWithType: "BaseEntity.Builder<K,B>.remove(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.remove(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.remove*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Removes a property with the given <code>name</code>."
  syntax:
    content: "public B remove(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,boolean)"
  id: "set(java.lang.String,boolean)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, boolean value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, boolean value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, boolean value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.BooleanValue\" data-throw-if-not-resolved=\"false\">BooleanValue</xref>."
  syntax:
    content: "public B set(String name, boolean value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "boolean"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,boolean,boolean,boolean...)"
  id: "set(java.lang.String,boolean,boolean,boolean...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, boolean first, boolean second, boolean[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, boolean first, boolean second, boolean[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, boolean first, boolean second, boolean[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.BooleanValue\" data-throw-if-not-resolved=\"false\">BooleanValue</xref>."
  syntax:
    content: "public B set(String name, boolean first, boolean second, boolean[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "boolean"
      description: "the first boolean in the list"
    - id: "second"
      type: "boolean"
      description: "the second boolean in the list"
    - id: "others"
      type: "boolean[]"
      description: "other booleans in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.Timestamp)"
  id: "set(java.lang.String,com.google.cloud.Timestamp)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, Timestamp value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, Timestamp value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, Timestamp value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.TimestampValue\" data-throw-if-not-resolved=\"false\">TimestampValue</xref>."
  syntax:
    content: "public B set(String name, Timestamp value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "com.google.cloud.Timestamp"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.Timestamp,com.google.cloud.Timestamp,com.google.cloud.Timestamp...)"
  id: "set(java.lang.String,com.google.cloud.Timestamp,com.google.cloud.Timestamp,com.google.cloud.Timestamp...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, Timestamp first, Timestamp second, Timestamp[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, Timestamp first, Timestamp second, Timestamp[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, Timestamp first, Timestamp second, Timestamp[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.TimestampValue\" data-throw-if-not-resolved=\"false\">TimestampValue</xref>."
  syntax:
    content: "public B set(String name, Timestamp first, Timestamp second, Timestamp[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "com.google.cloud.Timestamp"
      description: "the first <xref uid=\"com.google.cloud.Timestamp\" data-throw-if-not-resolved=\"false\">Timestamp</xref> in the list"
    - id: "second"
      type: "com.google.cloud.Timestamp"
      description: "the second <xref uid=\"com.google.cloud.Timestamp\" data-throw-if-not-resolved=\"false\">Timestamp</xref> in the list"
    - id: "others"
      type: "com.google.cloud.Timestamp[]"
      description: "other <xref uid=\"com.google.cloud.Timestamp\" data-throw-if-not-resolved=\"false\">Timestamp</xref>s in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Blob)"
  id: "set(java.lang.String,com.google.cloud.datastore.Blob)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, Blob value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, Blob value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, Blob value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.BlobValue\" data-throw-if-not-resolved=\"false\">BlobValue</xref>."
  syntax:
    content: "public B set(String name, Blob value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "com.google.cloud.datastore.Blob"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob...)"
  id: "set(java.lang.String,com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob,com.google.cloud.datastore.Blob...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, Blob first, Blob second, Blob[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, Blob first, Blob second, Blob[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, Blob first, Blob second, Blob[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.BlobValue\" data-throw-if-not-resolved=\"false\">BlobValue</xref>."
  syntax:
    content: "public B set(String name, Blob first, Blob second, Blob[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "com.google.cloud.datastore.Blob"
      description: "the first <xref uid=\"com.google.cloud.datastore.Blob\" data-throw-if-not-resolved=\"false\">Blob</xref> in the list"
    - id: "second"
      type: "com.google.cloud.datastore.Blob"
      description: "the second <xref uid=\"com.google.cloud.datastore.Blob\" data-throw-if-not-resolved=\"false\">Blob</xref> in the list"
    - id: "others"
      type: "com.google.cloud.datastore.Blob[]"
      description: "other <xref uid=\"com.google.cloud.datastore.Blob\" data-throw-if-not-resolved=\"false\">Blob</xref>s in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.FullEntity<?>)"
  id: "set(java.lang.String,com.google.cloud.datastore.FullEntity<?>)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, FullEntity<?> value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, FullEntity<?> value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, FullEntity<?> value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.EntityValue\" data-throw-if-not-resolved=\"false\">EntityValue</xref>."
  syntax:
    content: "public B set(String name, FullEntity<?> value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "com.google.cloud.datastore.FullEntity<?>"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>...)"
  id: "set(java.lang.String,com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>,com.google.cloud.datastore.FullEntity<?>...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, FullEntity<?> first, FullEntity<?> second, FullEntity<?>[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, FullEntity<?> first, FullEntity<?> second, FullEntity<?>[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, FullEntity<?> first, FullEntity<?> second, FullEntity<?>[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.EntityValue\" data-throw-if-not-resolved=\"false\">EntityValue</xref>."
  syntax:
    content: "public B set(String name, FullEntity<?> first, FullEntity<?> second, FullEntity<?>[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "com.google.cloud.datastore.FullEntity<?>"
      description: "the first <xref uid=\"com.google.cloud.datastore.FullEntity\" data-throw-if-not-resolved=\"false\">FullEntity</xref> in the list"
    - id: "second"
      type: "com.google.cloud.datastore.FullEntity<?>"
      description: "the second <xref uid=\"com.google.cloud.datastore.FullEntity\" data-throw-if-not-resolved=\"false\">FullEntity</xref> in the list"
    - id: "others"
      type: "com.google.cloud.datastore.FullEntity<?>[]"
      description: "other entities in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Key)"
  id: "set(java.lang.String,com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, Key value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, Key value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, Key value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.KeyValue\" data-throw-if-not-resolved=\"false\">KeyValue</xref>."
  syntax:
    content: "public B set(String name, Key value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "com.google.cloud.datastore.Key"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Key,com.google.cloud.datastore.Key,com.google.cloud.datastore.Key...)"
  id: "set(java.lang.String,com.google.cloud.datastore.Key,com.google.cloud.datastore.Key,com.google.cloud.datastore.Key...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, Key first, Key second, Key[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, Key first, Key second, Key[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, Key first, Key second, Key[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.KeyValue\" data-throw-if-not-resolved=\"false\">KeyValue</xref>."
  syntax:
    content: "public B set(String name, Key first, Key second, Key[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "com.google.cloud.datastore.Key"
      description: "the first <xref uid=\"com.google.cloud.datastore.Key\" data-throw-if-not-resolved=\"false\">Key</xref> in the list"
    - id: "second"
      type: "com.google.cloud.datastore.Key"
      description: "the second <xref uid=\"com.google.cloud.datastore.Key\" data-throw-if-not-resolved=\"false\">Key</xref> in the list"
    - id: "others"
      type: "com.google.cloud.datastore.Key[]"
      description: "other <xref uid=\"com.google.cloud.datastore.Key\" data-throw-if-not-resolved=\"false\">Key</xref>s in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.LatLng)"
  id: "set(java.lang.String,com.google.cloud.datastore.LatLng)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, LatLng value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, LatLng value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, LatLng value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.LatLng\" data-throw-if-not-resolved=\"false\">LatLng</xref>."
  syntax:
    content: "public B set(String name, LatLng value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "com.google.cloud.datastore.LatLng"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng...)"
  id: "set(java.lang.String,com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng,com.google.cloud.datastore.LatLng...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, LatLng first, LatLng second, LatLng[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, LatLng first, LatLng second, LatLng[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, LatLng first, LatLng second, LatLng[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.LatLng\" data-throw-if-not-resolved=\"false\">LatLng</xref>."
  syntax:
    content: "public B set(String name, LatLng first, LatLng second, LatLng[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "com.google.cloud.datastore.LatLng"
      description: "the first <xref uid=\"com.google.cloud.datastore.LatLng\" data-throw-if-not-resolved=\"false\">LatLng</xref> in the list"
    - id: "second"
      type: "com.google.cloud.datastore.LatLng"
      description: "the second <xref uid=\"com.google.cloud.datastore.LatLng\" data-throw-if-not-resolved=\"false\">LatLng</xref> in the list"
    - id: "others"
      type: "com.google.cloud.datastore.LatLng[]"
      description: "other <xref uid=\"com.google.cloud.datastore.LatLng\" data-throw-if-not-resolved=\"false\">LatLng</xref>s in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Value<?>)"
  id: "set(java.lang.String,com.google.cloud.datastore.Value<?>)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, Value<?> value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, Value<?> value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, Value<?> value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property."
  syntax:
    content: "public B set(String name, Value<?> value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "com.google.cloud.datastore.Value<?>"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  id: "set(java.lang.String,com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>,com.google.cloud.datastore.Value<?>...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, Value<?> first, Value<?> second, Value<?>[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, Value<?> first, Value<?> second, Value<?>[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, Value<?> first, Value<?> second, Value<?>[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.ListValue\" data-throw-if-not-resolved=\"false\">ListValue</xref>."
  syntax:
    content: "public B set(String name, Value<?> first, Value<?> second, Value<?>[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "com.google.cloud.datastore.Value<?>"
      description: "the first value in the list"
    - id: "second"
      type: "com.google.cloud.datastore.Value<?>"
      description: "the second value in the list"
    - id: "others"
      type: "com.google.cloud.datastore.Value<?>[]"
      description: "other values in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,double)"
  id: "set(java.lang.String,double)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, double value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, double value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, double value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.DoubleValue\" data-throw-if-not-resolved=\"false\">DoubleValue</xref>."
  syntax:
    content: "public B set(String name, double value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "double"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,double,double,double...)"
  id: "set(java.lang.String,double,double,double...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, double first, double second, double[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, double first, double second, double[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, double first, double second, double[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.DoubleValue\" data-throw-if-not-resolved=\"false\">DoubleValue</xref>."
  syntax:
    content: "public B set(String name, double first, double second, double[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "double"
      description: "the first double in the list"
    - id: "second"
      type: "double"
      description: "the second double in the list"
    - id: "others"
      type: "double[]"
      description: "other doubles in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,java.lang.String)"
  id: "set(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, String value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, String value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, String value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.StringValue\" data-throw-if-not-resolved=\"false\">StringValue</xref>."
  syntax:
    content: "public B set(String name, String value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "java.lang.String"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,java.lang.String,java.lang.String,java.lang.String...)"
  id: "set(java.lang.String,java.lang.String,java.lang.String,java.lang.String...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, String first, String second, String[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, String first, String second, String[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, String first, String second, String[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.StringValue\" data-throw-if-not-resolved=\"false\">StringValue</xref>."
  syntax:
    content: "public B set(String name, String first, String second, String[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "java.lang.String"
      description: "the first string in the list"
    - id: "second"
      type: "java.lang.String"
      description: "the second string in the list"
    - id: "others"
      type: "java.lang.String[]"
      description: "other strings in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  id: "set(java.lang.String,java.util.List<? extends com.google.cloud.datastore.Value<?>>)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, List<? extends Value<?>> values)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, List<? extends Value<?>> values)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, List<? extends Value<?>> values)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.ListValue\" data-throw-if-not-resolved=\"false\">ListValue</xref>."
  syntax:
    content: "public B set(String name, List<? extends Value<?>> values)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "values"
      type: "java.util.List<? extends com.google.cloud.datastore.Value<?>>"
      description: "list of values associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,long)"
  id: "set(java.lang.String,long)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, long value)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, long value)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, long value)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <xref uid=\"com.google.cloud.datastore.LongValue\" data-throw-if-not-resolved=\"false\">LongValue</xref>."
  syntax:
    content: "public B set(String name, long value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "value"
      type: "long"
      description: "value associated with the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set(java.lang.String,long,long,long...)"
  id: "set(java.lang.String,long,long,long...)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "set(String name, long first, long second, long[] others)"
  nameWithType: "BaseEntity.Builder<K,B>.set(String name, long first, long second, long[] others)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set(String name, long first, long second, long[] others)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a list property containing elements of type <xref uid=\"com.google.cloud.datastore.LongValue\" data-throw-if-not-resolved=\"false\">LongValue</xref>."
  syntax:
    content: "public B set(String name, long first, long second, long[] others)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    - id: "first"
      type: "long"
      description: "the first long in the list"
    - id: "second"
      type: "long"
      description: "the second long in the list"
    - id: "others"
      type: "long[]"
      description: "other longs in the list"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.setKey(K)"
  id: "setKey(K)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "setKey(K key)"
  nameWithType: "BaseEntity.Builder<K,B>.setKey(K key)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.setKey(K key)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.setKey*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets the key for the entity."
  syntax:
    content: "public B setKey(K key)"
    parameters:
    - id: "key"
      type: "K"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.setNull(java.lang.String)"
  id: "setNull(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "setNull(String name)"
  nameWithType: "BaseEntity.Builder<K,B>.setNull(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.setNull(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.setNull*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets a property of type <code>NullValue</code>."
  syntax:
    content: "public B setNull(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "name of the property"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.setProperties()"
  id: "setProperties()"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "setProperties()"
  nameWithType: "BaseEntity.Builder<K,B>.setProperties()"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.setProperties()"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.setProperties*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "protected Map<String,Value<?>> setProperties()"
    return:
      type: "java.util.Map<java.lang.String,com.google.cloud.datastore.Value<?>>"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.setProperties(java.util.Map<java.lang.String,com.google.cloud.datastore.Value<?>>)"
  id: "setProperties(java.util.Map<java.lang.String,com.google.cloud.datastore.Value<?>>)"
  parent: "com.google.cloud.datastore.BaseEntity.Builder"
  langs:
  - "java"
  name: "setProperties(Map<String,Value<?>> properties)"
  nameWithType: "BaseEntity.Builder<K,B>.setProperties(Map<String,Value<?>> properties)"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.setProperties(Map<String,Value<?>> properties)"
  overload: "com.google.cloud.datastore.BaseEntity.Builder.setProperties*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "protected B setProperties(Map<String,Value<?>> properties)"
    parameters:
    - id: "properties"
      type: "java.util.Map<java.lang.String,com.google.cloud.datastore.Value<?>>"
    return:
      type: "B"
references:
- uid: "com.google.cloud.datastore.BaseEntity.Builder.Builder*"
  name: "Builder"
  nameWithType: "BaseEntity.Builder<K,B>.Builder"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.Builder"
  package: "com.google.cloud.datastore"
- uid: "K"
  spec.java:
  - uid: "K"
    name: "K"
    fullName: "K"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity<K>"
  spec.java:
  - uid: "com.google.cloud.datastore.BaseEntity"
    name: "BaseEntity"
    fullName: "com.google.cloud.datastore.BaseEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "K"
    name: "K"
    fullName: "K"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.BaseEntity"
    name: "BaseEntity"
    fullName: "com.google.cloud.datastore.BaseEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.Builder.key*"
  name: "key"
  nameWithType: "BaseEntity.Builder<K,B>.key"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.key"
  package: "com.google.cloud.datastore"
- uid: "java.util.Map<java.lang.String,com.google.cloud.datastore.Value<?>>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Map<java/lang/String,com/google/cloud/datastore/Value<?>>.html"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.Builder.setProperties*"
  name: "setProperties"
  nameWithType: "BaseEntity.Builder<K,B>.setProperties"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.setProperties"
  package: "com.google.cloud.datastore"
- uid: "B"
  spec.java:
  - uid: "B"
    name: "B"
    fullName: "B"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.Builder.setKey*"
  name: "setKey"
  nameWithType: "BaseEntity.Builder<K,B>.setKey"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.setKey"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.clear*"
  name: "clear"
  nameWithType: "BaseEntity.Builder<K,B>.clear"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.clear"
  package: "com.google.cloud.datastore"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.remove*"
  name: "remove"
  nameWithType: "BaseEntity.Builder<K,B>.remove"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.remove"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Value<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.Builder.set*"
  name: "set"
  nameWithType: "BaseEntity.Builder<K,B>.set"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.set"
  package: "com.google.cloud.datastore"
- uid: "java.lang.String[]"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String[].html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "long[]"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
    href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "double"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
- uid: "double[]"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
    href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "boolean[]"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
    href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.Timestamp"
  spec.java:
  - uid: "com.google.cloud.Timestamp"
    name: "Timestamp"
    fullName: "com.google.cloud.Timestamp"
    isExternal: false
- uid: "com.google.cloud.Timestamp[]"
  spec.java:
  - uid: "com.google.cloud.Timestamp"
    name: "Timestamp"
    fullName: "com.google.cloud.Timestamp"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.LatLng"
  name: "LatLng"
  nameWithType: "LatLng"
  fullName: "com.google.cloud.datastore.LatLng"
- uid: "com.google.cloud.datastore.LatLng[]"
  spec.java:
  - uid: "com.google.cloud.datastore.LatLng"
    name: "LatLng"
    fullName: "com.google.cloud.datastore.LatLng"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.cloud.datastore.Key"
- uid: "com.google.cloud.datastore.Key[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Key"
    name: "Key"
    fullName: "com.google.cloud.datastore.Key"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.FullEntity<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.FullEntity"
    name: "FullEntity"
    fullName: "com.google.cloud.datastore.FullEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.FullEntity<?>[]"
  spec.java:
  - uid: "com.google.cloud.datastore.FullEntity"
    name: "FullEntity"
    fullName: "com.google.cloud.datastore.FullEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "java.util.List<? extends com.google.cloud.datastore.Value<?>>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<? extends com/google/cloud/datastore/Value<?>>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "? extends com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "? extends com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.Value<?>[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.Blob"
  name: "Blob"
  nameWithType: "Blob"
  fullName: "com.google.cloud.datastore.Blob"
- uid: "com.google.cloud.datastore.Blob[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Blob"
    name: "Blob"
    fullName: "com.google.cloud.datastore.Blob"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.Builder.setNull*"
  name: "setNull"
  nameWithType: "BaseEntity.Builder<K,B>.setNull"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.setNull"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity.Builder.build*"
  name: "build"
  nameWithType: "BaseEntity.Builder<K,B>.build"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>.build"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.datastore.BaseEntity"
  name: "BaseEntity"
  nameWithType: "BaseEntity"
  fullName: "com.google.cloud.datastore.BaseEntity"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "java.util.Map"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,com.google.cloud.datastore.Value"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String,com/google/cloud/datastore/Value.html"
  name: "String,Value"
  nameWithType: "String,Value"
  fullName: "java.lang.String,com.google.cloud.datastore.Value"
- uid: "com.google.cloud.datastore.Value"
  name: "Value"
  nameWithType: "Value"
  fullName: "com.google.cloud.datastore.Value"
- uid: "com.google.cloud.datastore.FullEntity"
  name: "FullEntity"
  nameWithType: "FullEntity"
  fullName: "com.google.cloud.datastore.FullEntity"
- uid: "?>[]"
  name: "?>[]"
  nameWithType: "?>[]"
  fullName: "?>[]"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "? extends com.google.cloud.datastore.Value"
  name: "? extends Value"
  nameWithType: "? extends Value"
  fullName: "? extends com.google.cloud.datastore.Value"
