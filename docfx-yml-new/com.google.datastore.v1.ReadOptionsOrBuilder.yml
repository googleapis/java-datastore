### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder"
  id: "ReadOptionsOrBuilder"
  parent: "com.google.datastore.v1"
  children:
  - "com.google.datastore.v1.ReadOptionsOrBuilder.getConsistencyTypeCase()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransaction()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransactionOrBuilder()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistency()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistencyValue()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTime()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTimeOrBuilder()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.getTransaction()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.hasNewTransaction()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadConsistency()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadTime()"
  - "com.google.datastore.v1.ReadOptionsOrBuilder.hasTransaction()"
  langs:
  - "java"
  name: "ReadOptionsOrBuilder"
  nameWithType: "ReadOptionsOrBuilder"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder"
  type: "Interface"
  package: "com.google.datastore.v1"
  syntax:
    content: "public interface ReadOptionsOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getConsistencyTypeCase()"
  id: "getConsistencyTypeCase()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "getConsistencyTypeCase()"
  nameWithType: "ReadOptionsOrBuilder.getConsistencyTypeCase()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getConsistencyTypeCase()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.getConsistencyTypeCase*"
  type: "Method"
  package: "com.google.datastore.v1"
  syntax:
    content: "public abstract ReadOptions.ConsistencyTypeCase getConsistencyTypeCase()"
    return:
      type: "com.google.datastore.v1.ReadOptions.ConsistencyTypeCase"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransaction()"
  id: "getNewTransaction()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "getNewTransaction()"
  nameWithType: "ReadOptionsOrBuilder.getNewTransaction()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransaction()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransaction*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Options for beginning a new transaction for this request.\n\n The new transaction identifier will be returned in the corresponding\n response as either\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">LookupResponse.transaction</xref>\n or\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">RunQueryResponse.transaction</xref>.\n \n\n <code>.google.datastore.v1.TransactionOptions new_transaction = 3;</code>"
  syntax:
    content: "public abstract TransactionOptions getNewTransaction()"
    return:
      type: "com.google.datastore.v1.TransactionOptions"
      description: "The newTransaction."
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransactionOrBuilder()"
  id: "getNewTransactionOrBuilder()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "getNewTransactionOrBuilder()"
  nameWithType: "ReadOptionsOrBuilder.getNewTransactionOrBuilder()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransactionOrBuilder()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransactionOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Options for beginning a new transaction for this request.\n\n The new transaction identifier will be returned in the corresponding\n response as either\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">LookupResponse.transaction</xref>\n or\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">RunQueryResponse.transaction</xref>.\n \n\n <code>.google.datastore.v1.TransactionOptions new_transaction = 3;</code>"
  syntax:
    content: "public abstract TransactionOptionsOrBuilder getNewTransactionOrBuilder()"
    return:
      type: "com.google.datastore.v1.TransactionOptionsOrBuilder"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistency()"
  id: "getReadConsistency()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "getReadConsistency()"
  nameWithType: "ReadOptionsOrBuilder.getReadConsistency()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistency()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistency*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The non-transactional read consistency to use.\n \n\n <code>.google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;</code>"
  syntax:
    content: "public abstract ReadOptions.ReadConsistency getReadConsistency()"
    return:
      type: "com.google.datastore.v1.ReadOptions.ReadConsistency"
      description: "The readConsistency."
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistencyValue()"
  id: "getReadConsistencyValue()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "getReadConsistencyValue()"
  nameWithType: "ReadOptionsOrBuilder.getReadConsistencyValue()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistencyValue()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistencyValue*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The non-transactional read consistency to use.\n \n\n <code>.google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;</code>"
  syntax:
    content: "public abstract int getReadConsistencyValue()"
    return:
      type: "int"
      description: "The enum numeric value on the wire for readConsistency."
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTime()"
  id: "getReadTime()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "getReadTime()"
  nameWithType: "ReadOptionsOrBuilder.getReadTime()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTime()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTime*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Reads entities as they were at the given time. This value is only\n supported for Cloud Firestore in Datastore mode.\n\n This must be a microsecond precision timestamp within the past one hour,\n or if Point-in-Time Recovery is enabled, can additionally be a whole\n minute timestamp within the past 7 days.\n \n\n <code>.google.protobuf.Timestamp read_time = 4;</code>"
  syntax:
    content: "public abstract Timestamp getReadTime()"
    return:
      type: "com.google.protobuf.Timestamp"
      description: "The readTime."
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTimeOrBuilder()"
  id: "getReadTimeOrBuilder()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "getReadTimeOrBuilder()"
  nameWithType: "ReadOptionsOrBuilder.getReadTimeOrBuilder()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTimeOrBuilder()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTimeOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Reads entities as they were at the given time. This value is only\n supported for Cloud Firestore in Datastore mode.\n\n This must be a microsecond precision timestamp within the past one hour,\n or if Point-in-Time Recovery is enabled, can additionally be a whole\n minute timestamp within the past 7 days.\n \n\n <code>.google.protobuf.Timestamp read_time = 4;</code>"
  syntax:
    content: "public abstract TimestampOrBuilder getReadTimeOrBuilder()"
    return:
      type: "com.google.protobuf.TimestampOrBuilder"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getTransaction()"
  id: "getTransaction()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "getTransaction()"
  nameWithType: "ReadOptionsOrBuilder.getTransaction()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getTransaction()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.getTransaction*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The identifier of the transaction in which to read. A\n transaction identifier is returned by a call to\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">Datastore.BeginTransaction</xref>.\n \n\n <code>bytes transaction = 2;</code>"
  syntax:
    content: "public abstract ByteString getTransaction()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The transaction."
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.hasNewTransaction()"
  id: "hasNewTransaction()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "hasNewTransaction()"
  nameWithType: "ReadOptionsOrBuilder.hasNewTransaction()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.hasNewTransaction()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.hasNewTransaction*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Options for beginning a new transaction for this request.\n\n The new transaction identifier will be returned in the corresponding\n response as either\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">LookupResponse.transaction</xref>\n or\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">RunQueryResponse.transaction</xref>.\n \n\n <code>.google.datastore.v1.TransactionOptions new_transaction = 3;</code>"
  syntax:
    content: "public abstract boolean hasNewTransaction()"
    return:
      type: "boolean"
      description: "Whether the newTransaction field is set."
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadConsistency()"
  id: "hasReadConsistency()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "hasReadConsistency()"
  nameWithType: "ReadOptionsOrBuilder.hasReadConsistency()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadConsistency()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadConsistency*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The non-transactional read consistency to use.\n \n\n <code>.google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;</code>"
  syntax:
    content: "public abstract boolean hasReadConsistency()"
    return:
      type: "boolean"
      description: "Whether the readConsistency field is set."
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadTime()"
  id: "hasReadTime()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "hasReadTime()"
  nameWithType: "ReadOptionsOrBuilder.hasReadTime()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadTime()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadTime*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Reads entities as they were at the given time. This value is only\n supported for Cloud Firestore in Datastore mode.\n\n This must be a microsecond precision timestamp within the past one hour,\n or if Point-in-Time Recovery is enabled, can additionally be a whole\n minute timestamp within the past 7 days.\n \n\n <code>.google.protobuf.Timestamp read_time = 4;</code>"
  syntax:
    content: "public abstract boolean hasReadTime()"
    return:
      type: "boolean"
      description: "Whether the readTime field is set."
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.hasTransaction()"
  id: "hasTransaction()"
  parent: "com.google.datastore.v1.ReadOptionsOrBuilder"
  langs:
  - "java"
  name: "hasTransaction()"
  nameWithType: "ReadOptionsOrBuilder.hasTransaction()"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.hasTransaction()"
  overload: "com.google.datastore.v1.ReadOptionsOrBuilder.hasTransaction*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The identifier of the transaction in which to read. A\n transaction identifier is returned by a call to\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">Datastore.BeginTransaction</xref>.\n \n\n <code>bytes transaction = 2;</code>"
  syntax:
    content: "public abstract boolean hasTransaction()"
    return:
      type: "boolean"
      description: "Whether the transaction field is set."
references:
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadConsistency*"
  name: "hasReadConsistency"
  nameWithType: "ReadOptionsOrBuilder.hasReadConsistency"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadConsistency"
  package: "com.google.datastore.v1"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistencyValue*"
  name: "getReadConsistencyValue"
  nameWithType: "ReadOptionsOrBuilder.getReadConsistencyValue"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistencyValue"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.ReadOptions.ReadConsistency"
  name: "ReadOptions.ReadConsistency"
  nameWithType: "ReadOptions.ReadConsistency"
  fullName: "com.google.datastore.v1.ReadOptions.ReadConsistency"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistency*"
  name: "getReadConsistency"
  nameWithType: "ReadOptionsOrBuilder.getReadConsistency"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadConsistency"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.hasTransaction*"
  name: "hasTransaction"
  nameWithType: "ReadOptionsOrBuilder.hasTransaction"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.hasTransaction"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.ByteString"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
    isExternal: true
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getTransaction*"
  name: "getTransaction"
  nameWithType: "ReadOptionsOrBuilder.getTransaction"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getTransaction"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.hasNewTransaction*"
  name: "hasNewTransaction"
  nameWithType: "ReadOptionsOrBuilder.hasNewTransaction"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.hasNewTransaction"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.TransactionOptions"
  name: "TransactionOptions"
  nameWithType: "TransactionOptions"
  fullName: "com.google.datastore.v1.TransactionOptions"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransaction*"
  name: "getNewTransaction"
  nameWithType: "ReadOptionsOrBuilder.getNewTransaction"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransaction"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.TransactionOptionsOrBuilder"
  name: "TransactionOptionsOrBuilder"
  nameWithType: "TransactionOptionsOrBuilder"
  fullName: "com.google.datastore.v1.TransactionOptionsOrBuilder"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransactionOrBuilder*"
  name: "getNewTransactionOrBuilder"
  nameWithType: "ReadOptionsOrBuilder.getNewTransactionOrBuilder"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getNewTransactionOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadTime*"
  name: "hasReadTime"
  nameWithType: "ReadOptionsOrBuilder.hasReadTime"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.hasReadTime"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.Timestamp"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Timestamp"
    name: "Timestamp"
    fullName: "com.google.protobuf.Timestamp"
    isExternal: true
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTime*"
  name: "getReadTime"
  nameWithType: "ReadOptionsOrBuilder.getReadTime"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTime"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.TimestampOrBuilder"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.TimestampOrBuilder"
    name: "TimestampOrBuilder"
    fullName: "com.google.protobuf.TimestampOrBuilder"
    isExternal: true
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTimeOrBuilder*"
  name: "getReadTimeOrBuilder"
  nameWithType: "ReadOptionsOrBuilder.getReadTimeOrBuilder"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getReadTimeOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.ReadOptions.ConsistencyTypeCase"
  name: "ReadOptions.ConsistencyTypeCase"
  nameWithType: "ReadOptions.ConsistencyTypeCase"
  fullName: "com.google.datastore.v1.ReadOptions.ConsistencyTypeCase"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder.getConsistencyTypeCase*"
  name: "getConsistencyTypeCase"
  nameWithType: "ReadOptionsOrBuilder.getConsistencyTypeCase"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder.getConsistencyTypeCase"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
