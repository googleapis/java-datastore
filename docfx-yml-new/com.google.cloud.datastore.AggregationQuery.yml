### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.AggregationQuery"
  id: "AggregationQuery"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.AggregationQuery.Builder"
  - "com.google.cloud.datastore.AggregationQuery.Mode"
  - "com.google.cloud.datastore.AggregationQuery.getAggregations()"
  - "com.google.cloud.datastore.AggregationQuery.getMode()"
  - "com.google.cloud.datastore.AggregationQuery.getNestedGqlQuery()"
  - "com.google.cloud.datastore.AggregationQuery.getNestedStructuredQuery()"
  langs:
  - "java"
  name: "AggregationQuery"
  nameWithType: "AggregationQuery"
  fullName: "com.google.cloud.datastore.AggregationQuery"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "An implementation of a Google Cloud Datastore Query that returns <xref uid=\"com.google.cloud.datastore.AggregationResults\" data-throw-if-not-resolved=\"false\">AggregationResults</xref>, It\n can be constructed by providing a nested query (<xref uid=\"com.google.cloud.datastore.StructuredQuery\" data-throw-if-not-resolved=\"false\">StructuredQuery</xref> or <xref uid=\"com.google.cloud.datastore.GqlQuery\" data-throw-if-not-resolved=\"false\">GqlQuery</xref>) to\n run the aggregations on and a set of <xref uid=\"com.google.cloud.datastore.aggregation.Aggregation\" data-throw-if-not-resolved=\"false\">Aggregation</xref>.\n\n <p><xref uid=\"com.google.cloud.datastore.StructuredQuery\" data-throw-if-not-resolved=\"false\">StructuredQuery</xref> example:\n\n <pre class=\"prettyprint lang-java\"><code>\n EntityQuery selectAllQuery = Query.newEntityQueryBuilder()\n    .setKind(\"Task\")\n    .build();\n AggregationQuery aggregationQuery = Query.newAggregationQueryBuilder()\n    .addAggregation(count().as(\"total_count\"))\n    .over(selectAllQuery)\n    .build();\n AggregationResults aggregationResults = datastore.runAggregation(aggregationQuery);\n for (AggregationResult aggregationResult : aggregationResults) {\n     System.out.println(aggregationResult.get(\"total_count\"));\n }\n </code></pre>\n\n <p><xref uid=\"com.google.cloud.datastore.GqlQuery\" data-throw-if-not-resolved=\"false\">GqlQuery</xref> example:\n\n <pre class=\"prettyprint lang-java\"><code>\n GqlQuery<?> selectAllGqlQuery = Query.newGqlQueryBuilder(\n         \"AGGREGATE COUNT(*) AS total_count, COUNT_UP_TO(100) AS count_upto_100 OVER(SELECT * FROM Task)\"\n     )\n     .setAllowLiteral(true)\n     .build();\n AggregationQuery aggregationQuery = Query.newAggregationQueryBuilder()\n     .over(selectAllGqlQuery)\n     .build();\n AggregationResults aggregationResults = datastore.runAggregation(aggregationQuery);\n for (AggregationResult aggregationResult : aggregationResults) {\n   System.out.println(aggregationResult.get(\"total_count\"));\n   System.out.println(aggregationResult.get(\"count_upto_100\"));\n }\n </code></pre>\nSee Also: <a href=\"https://cloud.google.com/appengine/docs/java/datastore/queries\">Datastore  queries</a>\n"
  syntax:
    content: "public class AggregationQuery extends Query<AggregationResults>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.datastore.Query"
  inheritedMembers:
  - "com.google.cloud.datastore.Query.<V>newGqlQueryBuilder(com.google.cloud.datastore.Query.ResultType<V>,java.lang.String)"
  - "com.google.cloud.datastore.Query.getNamespace()"
  - "com.google.cloud.datastore.Query.newAggregationQueryBuilder()"
  - "com.google.cloud.datastore.Query.newEntityQueryBuilder()"
  - "com.google.cloud.datastore.Query.newGqlQueryBuilder(java.lang.String)"
  - "com.google.cloud.datastore.Query.newKeyQueryBuilder()"
  - "com.google.cloud.datastore.Query.newProjectionEntityQueryBuilder()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.AggregationQuery.AggregationQuery(java.lang.String,com.google.cloud.datastore.GqlQuery<?>)"
  id: "AggregationQuery(java.lang.String,com.google.cloud.datastore.GqlQuery<?>)"
  parent: "com.google.cloud.datastore.AggregationQuery"
  langs:
  - "java"
  name: "AggregationQuery(String namespace, GqlQuery<?> gqlQuery)"
  nameWithType: "AggregationQuery.AggregationQuery(String namespace, GqlQuery<?> gqlQuery)"
  fullName: "com.google.cloud.datastore.AggregationQuery.AggregationQuery(String namespace, GqlQuery<?> gqlQuery)"
  overload: "com.google.cloud.datastore.AggregationQuery.AggregationQuery*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " AggregationQuery(String namespace, GqlQuery<?> gqlQuery)"
    parameters:
    - id: "namespace"
      type: "java.lang.String"
    - id: "gqlQuery"
      type: "com.google.cloud.datastore.GqlQuery<?>"
- uid: "com.google.cloud.datastore.AggregationQuery.AggregationQuery(java.lang.String,java.util.Set<com.google.cloud.datastore.aggregation.Aggregation>,com.google.cloud.datastore.StructuredQuery<?>)"
  id: "AggregationQuery(java.lang.String,java.util.Set<com.google.cloud.datastore.aggregation.Aggregation>,com.google.cloud.datastore.StructuredQuery<?>)"
  parent: "com.google.cloud.datastore.AggregationQuery"
  langs:
  - "java"
  name: "AggregationQuery(String namespace, Set<Aggregation> aggregations, StructuredQuery<?> nestedQuery)"
  nameWithType: "AggregationQuery.AggregationQuery(String namespace, Set<Aggregation> aggregations, StructuredQuery<?> nestedQuery)"
  fullName: "com.google.cloud.datastore.AggregationQuery.AggregationQuery(String namespace, Set<Aggregation> aggregations, StructuredQuery<?> nestedQuery)"
  overload: "com.google.cloud.datastore.AggregationQuery.AggregationQuery*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " AggregationQuery(String namespace, Set<Aggregation> aggregations, StructuredQuery<?> nestedQuery)"
    parameters:
    - id: "namespace"
      type: "java.lang.String"
    - id: "aggregations"
      type: "java.util.Set<com.google.cloud.datastore.aggregation.Aggregation>"
    - id: "nestedQuery"
      type: "com.google.cloud.datastore.StructuredQuery<?>"
- uid: "com.google.cloud.datastore.AggregationQuery.getAggregations()"
  id: "getAggregations()"
  parent: "com.google.cloud.datastore.AggregationQuery"
  langs:
  - "java"
  name: "getAggregations()"
  nameWithType: "AggregationQuery.getAggregations()"
  fullName: "com.google.cloud.datastore.AggregationQuery.getAggregations()"
  overload: "com.google.cloud.datastore.AggregationQuery.getAggregations*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the <xref uid=\"com.google.cloud.datastore.aggregation.Aggregation\" data-throw-if-not-resolved=\"false\">Aggregation</xref>(s) for this Query."
  syntax:
    content: "public Set<Aggregation> getAggregations()"
    return:
      type: "java.util.Set<com.google.cloud.datastore.aggregation.Aggregation>"
- uid: "com.google.cloud.datastore.AggregationQuery.getMode()"
  id: "getMode()"
  parent: "com.google.cloud.datastore.AggregationQuery"
  langs:
  - "java"
  name: "getMode()"
  nameWithType: "AggregationQuery.getMode()"
  fullName: "com.google.cloud.datastore.AggregationQuery.getMode()"
  overload: "com.google.cloud.datastore.AggregationQuery.getMode*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Mode</xref> for this query."
  syntax:
    content: "public AggregationQuery.Mode getMode()"
    return:
      type: "com.google.cloud.datastore.AggregationQuery.Mode"
- uid: "com.google.cloud.datastore.AggregationQuery.getNestedGqlQuery()"
  id: "getNestedGqlQuery()"
  parent: "com.google.cloud.datastore.AggregationQuery"
  langs:
  - "java"
  name: "getNestedGqlQuery()"
  nameWithType: "AggregationQuery.getNestedGqlQuery()"
  fullName: "com.google.cloud.datastore.AggregationQuery.getNestedGqlQuery()"
  overload: "com.google.cloud.datastore.AggregationQuery.getNestedGqlQuery*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the underlying <xref uid=\"com.google.cloud.datastore.GqlQuery\" data-throw-if-not-resolved=\"false\">for this Query</xref>. Returns null if created with <xref uid=\"com.google.cloud.datastore.StructuredQuery\" data-throw-if-not-resolved=\"false\">StructuredQuery</xref>"
  syntax:
    content: "public GqlQuery<?> getNestedGqlQuery()"
    return:
      type: "com.google.cloud.datastore.GqlQuery<?>"
- uid: "com.google.cloud.datastore.AggregationQuery.getNestedStructuredQuery()"
  id: "getNestedStructuredQuery()"
  parent: "com.google.cloud.datastore.AggregationQuery"
  langs:
  - "java"
  name: "getNestedStructuredQuery()"
  nameWithType: "AggregationQuery.getNestedStructuredQuery()"
  fullName: "com.google.cloud.datastore.AggregationQuery.getNestedStructuredQuery()"
  overload: "com.google.cloud.datastore.AggregationQuery.getNestedStructuredQuery*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the underlying <xref uid=\"com.google.cloud.datastore.StructuredQuery\" data-throw-if-not-resolved=\"false\">for this Query</xref>. Returns null if created with\n <xref uid=\"com.google.cloud.datastore.GqlQuery\" data-throw-if-not-resolved=\"false\">GqlQuery</xref>"
  syntax:
    content: "public StructuredQuery<?> getNestedStructuredQuery()"
    return:
      type: "com.google.cloud.datastore.StructuredQuery<?>"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "java.util.Set<com.google.cloud.datastore.aggregation.Aggregation>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Set<com/google/cloud/datastore/aggregation/Aggregation>.html"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.aggregation.Aggregation"
    name: "Aggregation"
    fullName: "com.google.cloud.datastore.aggregation.Aggregation"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.StructuredQuery"
    name: "StructuredQuery"
    fullName: "com.google.cloud.datastore.StructuredQuery"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.AggregationQuery.AggregationQuery*"
  name: "AggregationQuery"
  nameWithType: "AggregationQuery.AggregationQuery"
  fullName: "com.google.cloud.datastore.AggregationQuery.AggregationQuery"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.GqlQuery<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.GqlQuery"
    name: "GqlQuery"
    fullName: "com.google.cloud.datastore.GqlQuery"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.AggregationQuery.getAggregations*"
  name: "getAggregations"
  nameWithType: "AggregationQuery.getAggregations"
  fullName: "com.google.cloud.datastore.AggregationQuery.getAggregations"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.AggregationQuery.getNestedStructuredQuery*"
  name: "getNestedStructuredQuery"
  nameWithType: "AggregationQuery.getNestedStructuredQuery"
  fullName: "com.google.cloud.datastore.AggregationQuery.getNestedStructuredQuery"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.AggregationQuery.getNestedGqlQuery*"
  name: "getNestedGqlQuery"
  nameWithType: "AggregationQuery.getNestedGqlQuery"
  fullName: "com.google.cloud.datastore.AggregationQuery.getNestedGqlQuery"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.AggregationQuery.Mode"
  name: "AggregationQuery.Mode"
  nameWithType: "AggregationQuery.Mode"
  fullName: "com.google.cloud.datastore.AggregationQuery.Mode"
- uid: "com.google.cloud.datastore.AggregationQuery.getMode*"
  name: "getMode"
  nameWithType: "AggregationQuery.getMode"
  fullName: "com.google.cloud.datastore.AggregationQuery.getMode"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Query<com.google.cloud.datastore.AggregationResults>"
  name: "Query<AggregationResults>"
  nameWithType: "Query<AggregationResults>"
  fullName: "com.google.cloud.datastore.Query<com.google.cloud.datastore.AggregationResults>"
- uid: "com.google.cloud.datastore.Query.newAggregationQueryBuilder()"
  name: "Query.newAggregationQueryBuilder()"
  nameWithType: "Query.newAggregationQueryBuilder()"
  fullName: "com.google.cloud.datastore.Query.newAggregationQueryBuilder()"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.datastore.Query.newProjectionEntityQueryBuilder()"
  name: "Query.newProjectionEntityQueryBuilder()"
  nameWithType: "Query.newProjectionEntityQueryBuilder()"
  fullName: "com.google.cloud.datastore.Query.newProjectionEntityQueryBuilder()"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.datastore.Query.newKeyQueryBuilder()"
  name: "Query.newKeyQueryBuilder()"
  nameWithType: "Query.newKeyQueryBuilder()"
  fullName: "com.google.cloud.datastore.Query.newKeyQueryBuilder()"
- uid: "com.google.cloud.datastore.Query.<V>newGqlQueryBuilder(com.google.cloud.datastore.Query.ResultType<V>,java.lang.String)"
  name: "Query.<V>newGqlQueryBuilder(Query.ResultType<V>,String)"
  nameWithType: "Query.<V>newGqlQueryBuilder(Query.ResultType<V>,String)"
  fullName: "com.google.cloud.datastore.Query.<V>newGqlQueryBuilder(com.google.cloud.datastore.Query.ResultType<V>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.google.cloud.datastore.Query.newEntityQueryBuilder()"
  name: "Query.newEntityQueryBuilder()"
  nameWithType: "Query.newEntityQueryBuilder()"
  fullName: "com.google.cloud.datastore.Query.newEntityQueryBuilder()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.Query.getNamespace()"
  name: "Query.getNamespace()"
  nameWithType: "Query.getNamespace()"
  fullName: "com.google.cloud.datastore.Query.getNamespace()"
- uid: "com.google.cloud.datastore.Query.newGqlQueryBuilder(java.lang.String)"
  name: "Query.newGqlQueryBuilder(String)"
  nameWithType: "Query.newGqlQueryBuilder(String)"
  fullName: "com.google.cloud.datastore.Query.newGqlQueryBuilder(java.lang.String)"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder"
  name: "AggregationQuery.Builder"
  nameWithType: "AggregationQuery.Builder"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder"
- uid: "java.util.Set"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
- uid: "com.google.cloud.datastore.aggregation.Aggregation"
  name: "Aggregation"
  nameWithType: "Aggregation"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation"
- uid: "com.google.cloud.datastore.StructuredQuery"
  name: "StructuredQuery"
  nameWithType: "StructuredQuery"
  fullName: "com.google.cloud.datastore.StructuredQuery"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "com.google.cloud.datastore.GqlQuery"
  name: "GqlQuery"
  nameWithType: "GqlQuery"
  fullName: "com.google.cloud.datastore.GqlQuery"
- uid: "com.google.cloud.datastore.Query"
  name: "Query"
  nameWithType: "Query"
  fullName: "com.google.cloud.datastore.Query"
- uid: "com.google.cloud.datastore.AggregationResults"
  name: "AggregationResults"
  nameWithType: "AggregationResults"
  fullName: "com.google.cloud.datastore.AggregationResults"
- uid: "com.google.cloud.datastore.Query."
  name: "Query."
  nameWithType: "Query."
  fullName: "com.google.cloud.datastore.Query."
- uid: "V>newGqlQueryBuilder(com.google.cloud.datastore.Query.ResultType"
  name: "V>newGqlQueryBuilder(Query.ResultType"
  nameWithType: "V>newGqlQueryBuilder(Query.ResultType"
  fullName: "V>newGqlQueryBuilder(com.google.cloud.datastore.Query.ResultType"
- uid: "V>,java.lang.String)"
  name: "V>,String)"
  nameWithType: "V>,String)"
  fullName: "V>,java.lang.String)"
