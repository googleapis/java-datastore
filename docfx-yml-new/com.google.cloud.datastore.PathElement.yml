### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.PathElement"
  id: "PathElement"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.PathElement.equals(java.lang.Object)"
  - "com.google.cloud.datastore.PathElement.getId()"
  - "com.google.cloud.datastore.PathElement.getKind()"
  - "com.google.cloud.datastore.PathElement.getName()"
  - "com.google.cloud.datastore.PathElement.getNameOrId()"
  - "com.google.cloud.datastore.PathElement.hasId()"
  - "com.google.cloud.datastore.PathElement.hasName()"
  - "com.google.cloud.datastore.PathElement.hashCode()"
  - "com.google.cloud.datastore.PathElement.of(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.PathElement.of(java.lang.String,long)"
  - "com.google.cloud.datastore.PathElement.toString()"
  langs:
  - "java"
  name: "PathElement"
  nameWithType: "PathElement"
  fullName: "com.google.cloud.datastore.PathElement"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "Represents a single element in a key's path."
  syntax:
    content: "public final class PathElement implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.PathElement.PathElement(java.lang.String,java.lang.String,java.lang.Long)"
  id: "PathElement(java.lang.String,java.lang.String,java.lang.Long)"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "PathElement(String kind, String name, Long id)"
  nameWithType: "PathElement.PathElement(String kind, String name, Long id)"
  fullName: "com.google.cloud.datastore.PathElement.PathElement(String kind, String name, Long id)"
  overload: "com.google.cloud.datastore.PathElement.PathElement*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "private PathElement(String kind, String name, Long id)"
    parameters:
    - id: "kind"
      type: "java.lang.String"
    - id: "name"
      type: "java.lang.String"
    - id: "id"
      type: "java.lang.Long"
- uid: "com.google.cloud.datastore.PathElement.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "PathElement.equals(Object obj)"
  fullName: "com.google.cloud.datastore.PathElement.equals(Object obj)"
  overload: "com.google.cloud.datastore.PathElement.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.PathElement.getId()"
  id: "getId()"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "PathElement.getId()"
  fullName: "com.google.cloud.datastore.PathElement.getId()"
  overload: "com.google.cloud.datastore.PathElement.getId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the ID of this path element."
  syntax:
    content: "public Long getId()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.datastore.PathElement.getKind()"
  id: "getKind()"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "getKind()"
  nameWithType: "PathElement.getKind()"
  fullName: "com.google.cloud.datastore.PathElement.getKind()"
  overload: "com.google.cloud.datastore.PathElement.getKind*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the kind of this path element."
  syntax:
    content: "public String getKind()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.PathElement.getName()"
  id: "getName()"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "PathElement.getName()"
  fullName: "com.google.cloud.datastore.PathElement.getName()"
  overload: "com.google.cloud.datastore.PathElement.getName*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the name of this path element."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.PathElement.getNameOrId()"
  id: "getNameOrId()"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "getNameOrId()"
  nameWithType: "PathElement.getNameOrId()"
  fullName: "com.google.cloud.datastore.PathElement.getNameOrId()"
  overload: "com.google.cloud.datastore.PathElement.getNameOrId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the path element's ID (as <xref uid=\"java.lang.Long\" data-throw-if-not-resolved=\"false\">Long</xref>) or name (as <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>). Never <code>\n null</code>."
  syntax:
    content: "public Object getNameOrId()"
    return:
      type: "java.lang.Object"
- uid: "com.google.cloud.datastore.PathElement.hasId()"
  id: "hasId()"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "hasId()"
  nameWithType: "PathElement.hasId()"
  fullName: "com.google.cloud.datastore.PathElement.hasId()"
  overload: "com.google.cloud.datastore.PathElement.hasId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean hasId()"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.PathElement.hasName()"
  id: "hasName()"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "hasName()"
  nameWithType: "PathElement.hasName()"
  fullName: "com.google.cloud.datastore.PathElement.hasName()"
  overload: "com.google.cloud.datastore.PathElement.hasName*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean hasName()"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.PathElement.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "PathElement.hashCode()"
  fullName: "com.google.cloud.datastore.PathElement.hashCode()"
  overload: "com.google.cloud.datastore.PathElement.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.datastore.PathElement.of(java.lang.String,java.lang.String)"
  id: "of(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "of(String kind, String name)"
  nameWithType: "PathElement.of(String kind, String name)"
  fullName: "com.google.cloud.datastore.PathElement.of(String kind, String name)"
  overload: "com.google.cloud.datastore.PathElement.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static PathElement of(String kind, String name)"
    parameters:
    - id: "kind"
      type: "java.lang.String"
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.PathElement"
  javaType: "static method"
- uid: "com.google.cloud.datastore.PathElement.of(java.lang.String,long)"
  id: "of(java.lang.String,long)"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "of(String kind, long id)"
  nameWithType: "PathElement.of(String kind, long id)"
  fullName: "com.google.cloud.datastore.PathElement.of(String kind, long id)"
  overload: "com.google.cloud.datastore.PathElement.of*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static PathElement of(String kind, long id)"
    parameters:
    - id: "kind"
      type: "java.lang.String"
    - id: "id"
      type: "long"
    return:
      type: "com.google.cloud.datastore.PathElement"
  javaType: "static method"
- uid: "com.google.cloud.datastore.PathElement.toString()"
  id: "toString()"
  parent: "com.google.cloud.datastore.PathElement"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "PathElement.toString()"
  fullName: "com.google.cloud.datastore.PathElement.toString()"
  overload: "com.google.cloud.datastore.PathElement.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "java.lang.Long"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html"
- uid: "com.google.cloud.datastore.PathElement.PathElement*"
  name: "PathElement"
  nameWithType: "PathElement.PathElement"
  fullName: "com.google.cloud.datastore.PathElement.PathElement"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.PathElement.getKind*"
  name: "getKind"
  nameWithType: "PathElement.getKind"
  fullName: "com.google.cloud.datastore.PathElement.getKind"
  package: "com.google.cloud.datastore"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.PathElement.hasId*"
  name: "hasId"
  nameWithType: "PathElement.hasId"
  fullName: "com.google.cloud.datastore.PathElement.hasId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.PathElement.getId*"
  name: "getId"
  nameWithType: "PathElement.getId"
  fullName: "com.google.cloud.datastore.PathElement.getId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.PathElement.hasName*"
  name: "hasName"
  nameWithType: "PathElement.hasName"
  fullName: "com.google.cloud.datastore.PathElement.hasName"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.PathElement.getName*"
  name: "getName"
  nameWithType: "PathElement.getName"
  fullName: "com.google.cloud.datastore.PathElement.getName"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "com.google.cloud.datastore.PathElement.getNameOrId*"
  name: "getNameOrId"
  nameWithType: "PathElement.getNameOrId"
  fullName: "com.google.cloud.datastore.PathElement.getNameOrId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.PathElement.toString*"
  name: "toString"
  nameWithType: "PathElement.toString"
  fullName: "com.google.cloud.datastore.PathElement.toString"
  package: "com.google.cloud.datastore"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.datastore.PathElement.hashCode*"
  name: "hashCode"
  nameWithType: "PathElement.hashCode"
  fullName: "com.google.cloud.datastore.PathElement.hashCode"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.PathElement.equals*"
  name: "equals"
  nameWithType: "PathElement.equals"
  fullName: "com.google.cloud.datastore.PathElement.equals"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.PathElement.of*"
  name: "of"
  nameWithType: "PathElement.of"
  fullName: "com.google.cloud.datastore.PathElement.of"
  package: "com.google.cloud.datastore"
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "java.io.Serializable"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
