### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.AggregationQuery.Builder"
  id: "Builder"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.AggregationQuery.Builder.Builder()"
  - "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation(com.google.cloud.datastore.aggregation.Aggregation)"
  - "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation(com.google.cloud.datastore.aggregation.AggregationBuilder<?>)"
  - "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations(com.google.cloud.datastore.aggregation.Aggregation...)"
  - "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations(com.google.cloud.datastore.aggregation.AggregationBuilder<?>...)"
  - "com.google.cloud.datastore.AggregationQuery.Builder.build()"
  - "com.google.cloud.datastore.AggregationQuery.Builder.over(com.google.cloud.datastore.GqlQuery<?>)"
  - "com.google.cloud.datastore.AggregationQuery.Builder.over(com.google.cloud.datastore.StructuredQuery<?>)"
  - "com.google.cloud.datastore.AggregationQuery.Builder.setNamespace(java.lang.String)"
  langs:
  - "java"
  name: "AggregationQuery.Builder"
  nameWithType: "AggregationQuery.Builder"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder"
  type: "Class"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static class AggregationQuery.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "AggregationQuery.Builder.Builder()"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.Builder()"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation(com.google.cloud.datastore.aggregation.Aggregation)"
  id: "addAggregation(com.google.cloud.datastore.aggregation.Aggregation)"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "addAggregation(Aggregation aggregation)"
  nameWithType: "AggregationQuery.Builder.addAggregation(Aggregation aggregation)"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation(Aggregation aggregation)"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public AggregationQuery.Builder addAggregation(Aggregation aggregation)"
    parameters:
    - id: "aggregation"
      type: "com.google.cloud.datastore.aggregation.Aggregation"
    return:
      type: "com.google.cloud.datastore.AggregationQuery.Builder"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation(com.google.cloud.datastore.aggregation.AggregationBuilder<?>)"
  id: "addAggregation(com.google.cloud.datastore.aggregation.AggregationBuilder<?>)"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "addAggregation(AggregationBuilder<?> aggregationBuilder)"
  nameWithType: "AggregationQuery.Builder.addAggregation(AggregationBuilder<?> aggregationBuilder)"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation(AggregationBuilder<?> aggregationBuilder)"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public AggregationQuery.Builder addAggregation(AggregationBuilder<?> aggregationBuilder)"
    parameters:
    - id: "aggregationBuilder"
      type: "com.google.cloud.datastore.aggregation.AggregationBuilder<?>"
    return:
      type: "com.google.cloud.datastore.AggregationQuery.Builder"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations(com.google.cloud.datastore.aggregation.Aggregation...)"
  id: "addAggregations(com.google.cloud.datastore.aggregation.Aggregation...)"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "addAggregations(Aggregation[] aggregations)"
  nameWithType: "AggregationQuery.Builder.addAggregations(Aggregation[] aggregations)"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations(Aggregation[] aggregations)"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public AggregationQuery.Builder addAggregations(Aggregation[] aggregations)"
    parameters:
    - id: "aggregations"
      type: "com.google.cloud.datastore.aggregation.Aggregation[]"
    return:
      type: "com.google.cloud.datastore.AggregationQuery.Builder"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations(com.google.cloud.datastore.aggregation.AggregationBuilder<?>...)"
  id: "addAggregations(com.google.cloud.datastore.aggregation.AggregationBuilder<?>...)"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "addAggregations(AggregationBuilder<?>[] aggregationBuilders)"
  nameWithType: "AggregationQuery.Builder.addAggregations(AggregationBuilder<?>[] aggregationBuilders)"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations(AggregationBuilder<?>[] aggregationBuilders)"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public AggregationQuery.Builder addAggregations(AggregationBuilder<?>[] aggregationBuilders)"
    parameters:
    - id: "aggregationBuilders"
      type: "com.google.cloud.datastore.aggregation.AggregationBuilder<?>[]"
    return:
      type: "com.google.cloud.datastore.AggregationQuery.Builder"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "AggregationQuery.Builder.build()"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.build()"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.build*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public AggregationQuery build()"
    return:
      type: "com.google.cloud.datastore.AggregationQuery"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.over(com.google.cloud.datastore.GqlQuery<?>)"
  id: "over(com.google.cloud.datastore.GqlQuery<?>)"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "over(GqlQuery<?> nestedQuery)"
  nameWithType: "AggregationQuery.Builder.over(GqlQuery<?> nestedQuery)"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.over(GqlQuery<?> nestedQuery)"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.over*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public AggregationQuery.Builder over(GqlQuery<?> nestedQuery)"
    parameters:
    - id: "nestedQuery"
      type: "com.google.cloud.datastore.GqlQuery<?>"
    return:
      type: "com.google.cloud.datastore.AggregationQuery.Builder"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.over(com.google.cloud.datastore.StructuredQuery<?>)"
  id: "over(com.google.cloud.datastore.StructuredQuery<?>)"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "over(StructuredQuery<?> nestedQuery)"
  nameWithType: "AggregationQuery.Builder.over(StructuredQuery<?> nestedQuery)"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.over(StructuredQuery<?> nestedQuery)"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.over*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public AggregationQuery.Builder over(StructuredQuery<?> nestedQuery)"
    parameters:
    - id: "nestedQuery"
      type: "com.google.cloud.datastore.StructuredQuery<?>"
    return:
      type: "com.google.cloud.datastore.AggregationQuery.Builder"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.setNamespace(java.lang.String)"
  id: "setNamespace(java.lang.String)"
  parent: "com.google.cloud.datastore.AggregationQuery.Builder"
  langs:
  - "java"
  name: "setNamespace(String namespace)"
  nameWithType: "AggregationQuery.Builder.setNamespace(String namespace)"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.setNamespace(String namespace)"
  overload: "com.google.cloud.datastore.AggregationQuery.Builder.setNamespace*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public AggregationQuery.Builder setNamespace(String namespace)"
    parameters:
    - id: "namespace"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.AggregationQuery.Builder"
references:
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.Builder*"
  name: "Builder"
  nameWithType: "AggregationQuery.Builder.Builder"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.Builder"
  package: "com.google.cloud.datastore"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.setNamespace*"
  name: "setNamespace"
  nameWithType: "AggregationQuery.Builder.setNamespace"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.setNamespace"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.aggregation.AggregationBuilder<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.aggregation.AggregationBuilder"
    name: "AggregationBuilder"
    fullName: "com.google.cloud.datastore.aggregation.AggregationBuilder"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation*"
  name: "addAggregation"
  nameWithType: "AggregationQuery.Builder.addAggregation"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregation"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.aggregation.Aggregation"
  name: "Aggregation"
  nameWithType: "Aggregation"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation"
- uid: "com.google.cloud.datastore.aggregation.AggregationBuilder<?>[]"
  spec.java:
  - uid: "com.google.cloud.datastore.aggregation.AggregationBuilder"
    name: "AggregationBuilder"
    fullName: "com.google.cloud.datastore.aggregation.AggregationBuilder"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations*"
  name: "addAggregations"
  nameWithType: "AggregationQuery.Builder.addAggregations"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.addAggregations"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.aggregation.Aggregation[]"
  spec.java:
  - uid: "com.google.cloud.datastore.aggregation.Aggregation"
    name: "Aggregation"
    fullName: "com.google.cloud.datastore.aggregation.Aggregation"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.StructuredQuery"
    name: "StructuredQuery"
    fullName: "com.google.cloud.datastore.StructuredQuery"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.over*"
  name: "over"
  nameWithType: "AggregationQuery.Builder.over"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.over"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.GqlQuery<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.GqlQuery"
    name: "GqlQuery"
    fullName: "com.google.cloud.datastore.GqlQuery"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.AggregationQuery"
  name: "AggregationQuery"
  nameWithType: "AggregationQuery"
  fullName: "com.google.cloud.datastore.AggregationQuery"
- uid: "com.google.cloud.datastore.AggregationQuery.Builder.build*"
  name: "build"
  nameWithType: "AggregationQuery.Builder.build"
  fullName: "com.google.cloud.datastore.AggregationQuery.Builder.build"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.datastore.aggregation.AggregationBuilder"
  name: "AggregationBuilder"
  nameWithType: "AggregationBuilder"
  fullName: "com.google.cloud.datastore.aggregation.AggregationBuilder"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "?>[]"
  name: "?>[]"
  nameWithType: "?>[]"
  fullName: "?>[]"
- uid: "com.google.cloud.datastore.StructuredQuery"
  name: "StructuredQuery"
  nameWithType: "StructuredQuery"
  fullName: "com.google.cloud.datastore.StructuredQuery"
- uid: "com.google.cloud.datastore.GqlQuery"
  name: "GqlQuery"
  nameWithType: "GqlQuery"
  fullName: "com.google.cloud.datastore.GqlQuery"
