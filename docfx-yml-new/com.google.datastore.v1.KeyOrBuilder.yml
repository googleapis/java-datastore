### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.KeyOrBuilder"
  id: "KeyOrBuilder"
  parent: "com.google.datastore.v1"
  children:
  - "com.google.datastore.v1.KeyOrBuilder.getPartitionId()"
  - "com.google.datastore.v1.KeyOrBuilder.getPartitionIdOrBuilder()"
  - "com.google.datastore.v1.KeyOrBuilder.getPath(int)"
  - "com.google.datastore.v1.KeyOrBuilder.getPathCount()"
  - "com.google.datastore.v1.KeyOrBuilder.getPathList()"
  - "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilder(int)"
  - "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilderList()"
  - "com.google.datastore.v1.KeyOrBuilder.hasPartitionId()"
  langs:
  - "java"
  name: "KeyOrBuilder"
  nameWithType: "KeyOrBuilder"
  fullName: "com.google.datastore.v1.KeyOrBuilder"
  type: "Interface"
  package: "com.google.datastore.v1"
  syntax:
    content: "public interface KeyOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPartitionId()"
  id: "getPartitionId()"
  parent: "com.google.datastore.v1.KeyOrBuilder"
  langs:
  - "java"
  name: "getPartitionId()"
  nameWithType: "KeyOrBuilder.getPartitionId()"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPartitionId()"
  overload: "com.google.datastore.v1.KeyOrBuilder.getPartitionId*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Entities are partitioned into subsets, currently identified by a project\n ID and namespace ID.\n Queries are scoped to a single partition.\n \n\n <code>.google.datastore.v1.PartitionId partition_id = 1;</code>"
  syntax:
    content: "public abstract PartitionId getPartitionId()"
    return:
      type: "com.google.datastore.v1.PartitionId"
      description: "The partitionId."
- uid: "com.google.datastore.v1.KeyOrBuilder.getPartitionIdOrBuilder()"
  id: "getPartitionIdOrBuilder()"
  parent: "com.google.datastore.v1.KeyOrBuilder"
  langs:
  - "java"
  name: "getPartitionIdOrBuilder()"
  nameWithType: "KeyOrBuilder.getPartitionIdOrBuilder()"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPartitionIdOrBuilder()"
  overload: "com.google.datastore.v1.KeyOrBuilder.getPartitionIdOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Entities are partitioned into subsets, currently identified by a project\n ID and namespace ID.\n Queries are scoped to a single partition.\n \n\n <code>.google.datastore.v1.PartitionId partition_id = 1;</code>"
  syntax:
    content: "public abstract PartitionIdOrBuilder getPartitionIdOrBuilder()"
    return:
      type: "com.google.datastore.v1.PartitionIdOrBuilder"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPath(int)"
  id: "getPath(int)"
  parent: "com.google.datastore.v1.KeyOrBuilder"
  langs:
  - "java"
  name: "getPath(int index)"
  nameWithType: "KeyOrBuilder.getPath(int index)"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPath(int index)"
  overload: "com.google.datastore.v1.KeyOrBuilder.getPath*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity path.\n An entity path consists of one or more elements composed of a kind and a\n string or numerical identifier, which identify entities. The first\n element identifies a _root entity_, the second element identifies\n a _child_ of the root entity, the third element identifies a child of the\n second entity, and so forth. The entities identified by all prefixes of\n the path are called the element's _ancestors_.\n\n An entity path is always fully complete: *all* of the entity's ancestors\n are required to be in the path along with the entity identifier itself.\n The only exception is that in some documented cases, the identifier in the\n last path element (for the entity) itself may be omitted. For example,\n the last path element of the key of <code>Mutation.insert</code> may have no\n identifier.\n\n A path can never be empty, and a path can have at most 100 elements.\n \n\n <code>repeated .google.datastore.v1.Key.PathElement path = 2;</code>"
  syntax:
    content: "public abstract Key.PathElement getPath(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.datastore.v1.Key.PathElement"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPathCount()"
  id: "getPathCount()"
  parent: "com.google.datastore.v1.KeyOrBuilder"
  langs:
  - "java"
  name: "getPathCount()"
  nameWithType: "KeyOrBuilder.getPathCount()"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPathCount()"
  overload: "com.google.datastore.v1.KeyOrBuilder.getPathCount*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity path.\n An entity path consists of one or more elements composed of a kind and a\n string or numerical identifier, which identify entities. The first\n element identifies a _root entity_, the second element identifies\n a _child_ of the root entity, the third element identifies a child of the\n second entity, and so forth. The entities identified by all prefixes of\n the path are called the element's _ancestors_.\n\n An entity path is always fully complete: *all* of the entity's ancestors\n are required to be in the path along with the entity identifier itself.\n The only exception is that in some documented cases, the identifier in the\n last path element (for the entity) itself may be omitted. For example,\n the last path element of the key of <code>Mutation.insert</code> may have no\n identifier.\n\n A path can never be empty, and a path can have at most 100 elements.\n \n\n <code>repeated .google.datastore.v1.Key.PathElement path = 2;</code>"
  syntax:
    content: "public abstract int getPathCount()"
    return:
      type: "int"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPathList()"
  id: "getPathList()"
  parent: "com.google.datastore.v1.KeyOrBuilder"
  langs:
  - "java"
  name: "getPathList()"
  nameWithType: "KeyOrBuilder.getPathList()"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPathList()"
  overload: "com.google.datastore.v1.KeyOrBuilder.getPathList*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity path.\n An entity path consists of one or more elements composed of a kind and a\n string or numerical identifier, which identify entities. The first\n element identifies a _root entity_, the second element identifies\n a _child_ of the root entity, the third element identifies a child of the\n second entity, and so forth. The entities identified by all prefixes of\n the path are called the element's _ancestors_.\n\n An entity path is always fully complete: *all* of the entity's ancestors\n are required to be in the path along with the entity identifier itself.\n The only exception is that in some documented cases, the identifier in the\n last path element (for the entity) itself may be omitted. For example,\n the last path element of the key of <code>Mutation.insert</code> may have no\n identifier.\n\n A path can never be empty, and a path can have at most 100 elements.\n \n\n <code>repeated .google.datastore.v1.Key.PathElement path = 2;</code>"
  syntax:
    content: "public abstract List<Key.PathElement> getPathList()"
    return:
      type: "java.util.List<com.google.datastore.v1.Key.PathElement>"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilder(int)"
  id: "getPathOrBuilder(int)"
  parent: "com.google.datastore.v1.KeyOrBuilder"
  langs:
  - "java"
  name: "getPathOrBuilder(int index)"
  nameWithType: "KeyOrBuilder.getPathOrBuilder(int index)"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilder(int index)"
  overload: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity path.\n An entity path consists of one or more elements composed of a kind and a\n string or numerical identifier, which identify entities. The first\n element identifies a _root entity_, the second element identifies\n a _child_ of the root entity, the third element identifies a child of the\n second entity, and so forth. The entities identified by all prefixes of\n the path are called the element's _ancestors_.\n\n An entity path is always fully complete: *all* of the entity's ancestors\n are required to be in the path along with the entity identifier itself.\n The only exception is that in some documented cases, the identifier in the\n last path element (for the entity) itself may be omitted. For example,\n the last path element of the key of <code>Mutation.insert</code> may have no\n identifier.\n\n A path can never be empty, and a path can have at most 100 elements.\n \n\n <code>repeated .google.datastore.v1.Key.PathElement path = 2;</code>"
  syntax:
    content: "public abstract Key.PathElementOrBuilder getPathOrBuilder(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.datastore.v1.Key.PathElementOrBuilder"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilderList()"
  id: "getPathOrBuilderList()"
  parent: "com.google.datastore.v1.KeyOrBuilder"
  langs:
  - "java"
  name: "getPathOrBuilderList()"
  nameWithType: "KeyOrBuilder.getPathOrBuilderList()"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilderList()"
  overload: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilderList*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity path.\n An entity path consists of one or more elements composed of a kind and a\n string or numerical identifier, which identify entities. The first\n element identifies a _root entity_, the second element identifies\n a _child_ of the root entity, the third element identifies a child of the\n second entity, and so forth. The entities identified by all prefixes of\n the path are called the element's _ancestors_.\n\n An entity path is always fully complete: *all* of the entity's ancestors\n are required to be in the path along with the entity identifier itself.\n The only exception is that in some documented cases, the identifier in the\n last path element (for the entity) itself may be omitted. For example,\n the last path element of the key of <code>Mutation.insert</code> may have no\n identifier.\n\n A path can never be empty, and a path can have at most 100 elements.\n \n\n <code>repeated .google.datastore.v1.Key.PathElement path = 2;</code>"
  syntax:
    content: "public abstract List<? extends Key.PathElementOrBuilder> getPathOrBuilderList()"
    return:
      type: "java.util.List<? extends com.google.datastore.v1.Key.PathElementOrBuilder>"
- uid: "com.google.datastore.v1.KeyOrBuilder.hasPartitionId()"
  id: "hasPartitionId()"
  parent: "com.google.datastore.v1.KeyOrBuilder"
  langs:
  - "java"
  name: "hasPartitionId()"
  nameWithType: "KeyOrBuilder.hasPartitionId()"
  fullName: "com.google.datastore.v1.KeyOrBuilder.hasPartitionId()"
  overload: "com.google.datastore.v1.KeyOrBuilder.hasPartitionId*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Entities are partitioned into subsets, currently identified by a project\n ID and namespace ID.\n Queries are scoped to a single partition.\n \n\n <code>.google.datastore.v1.PartitionId partition_id = 1;</code>"
  syntax:
    content: "public abstract boolean hasPartitionId()"
    return:
      type: "boolean"
      description: "Whether the partitionId field is set."
references:
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.KeyOrBuilder.hasPartitionId*"
  name: "hasPartitionId"
  nameWithType: "KeyOrBuilder.hasPartitionId"
  fullName: "com.google.datastore.v1.KeyOrBuilder.hasPartitionId"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.PartitionId"
  name: "PartitionId"
  nameWithType: "PartitionId"
  fullName: "com.google.datastore.v1.PartitionId"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPartitionId*"
  name: "getPartitionId"
  nameWithType: "KeyOrBuilder.getPartitionId"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPartitionId"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.PartitionIdOrBuilder"
  name: "PartitionIdOrBuilder"
  nameWithType: "PartitionIdOrBuilder"
  fullName: "com.google.datastore.v1.PartitionIdOrBuilder"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPartitionIdOrBuilder*"
  name: "getPartitionIdOrBuilder"
  nameWithType: "KeyOrBuilder.getPartitionIdOrBuilder"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPartitionIdOrBuilder"
  package: "com.google.datastore.v1"
- uid: "java.util.List<com.google.datastore.v1.Key.PathElement>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/datastore/v1/Key/PathElement>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.v1.Key.PathElement"
    name: "PathElement"
    fullName: "com.google.datastore.v1.Key.PathElement"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.KeyOrBuilder.getPathList*"
  name: "getPathList"
  nameWithType: "KeyOrBuilder.getPathList"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPathList"
  package: "com.google.datastore.v1"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.datastore.v1.Key.PathElement"
  name: "Key.PathElement"
  nameWithType: "Key.PathElement"
  fullName: "com.google.datastore.v1.Key.PathElement"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPath*"
  name: "getPath"
  nameWithType: "KeyOrBuilder.getPath"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPath"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPathCount*"
  name: "getPathCount"
  nameWithType: "KeyOrBuilder.getPathCount"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPathCount"
  package: "com.google.datastore.v1"
- uid: "java.util.List<? extends com.google.datastore.v1.Key.PathElementOrBuilder>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<? extends com/google/datastore/v1/Key/PathElementOrBuilder>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "? extends com.google.datastore.v1.Key.PathElementOrBuilder"
    name: "PathElementOrBuilder"
    fullName: "? extends com.google.datastore.v1.Key.PathElementOrBuilder"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilderList*"
  name: "getPathOrBuilderList"
  nameWithType: "KeyOrBuilder.getPathOrBuilderList"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilderList"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.Key.PathElementOrBuilder"
  name: "Key.PathElementOrBuilder"
  nameWithType: "Key.PathElementOrBuilder"
  fullName: "com.google.datastore.v1.Key.PathElementOrBuilder"
- uid: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilder*"
  name: "getPathOrBuilder"
  nameWithType: "KeyOrBuilder.getPathOrBuilder"
  fullName: "com.google.datastore.v1.KeyOrBuilder.getPathOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "? extends com.google.datastore.v1.Key.PathElementOrBuilder"
  name: "? extends Key.PathElementOrBuilder"
  nameWithType: "? extends Key.PathElementOrBuilder"
  fullName: "? extends com.google.datastore.v1.Key.PathElementOrBuilder"
