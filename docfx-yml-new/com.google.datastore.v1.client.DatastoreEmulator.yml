### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.client.DatastoreEmulator"
  id: "DatastoreEmulator"
  parent: "com.google.datastore.v1.client"
  children:
  - "com.google.datastore.v1.client.DatastoreEmulator.clear()"
  - "com.google.datastore.v1.client.DatastoreEmulator.getProjectDirectory()"
  - "com.google.datastore.v1.client.DatastoreEmulator.start()"
  - "com.google.datastore.v1.client.DatastoreEmulator.start(java.lang.String,java.lang.String,java.lang.String...)"
  - "com.google.datastore.v1.client.DatastoreEmulator.stop()"
  - "com.google.datastore.v1.client.DatastoreEmulator.stopEmulatorInternal()"
  langs:
  - "java"
  name: "DatastoreEmulator"
  nameWithType: "DatastoreEmulator"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator"
  type: "Class"
  package: "com.google.datastore.v1.client"
  summary: "An extension to <xref uid=\"com.google.datastore.v1.client.Datastore\" data-throw-if-not-resolved=\"false\">Datastore</xref> that provides lifecycle management for a datastore emulator.\n\n <p>In order to use the emulator for a JUnit 4 test you might do something like this:\n\n \n public class MyTest {\n\n   static DatastoreEmulator datastore;\n\n   @BeforeClass\n   public static void startEmulator() throws DatastoreEmulatorException {\n     DatastoreOptions options = new DatastoreOptions.Builder()\n         .localHost(\"localhost:8080\")\n         .projectId(\"my-project-id\")\n         .build();\n     datastore = DatastoreEmulatorFactory.get().create(options);\n     datastore.start(\"/usr/local/cloud-datastore-emulator\", \"my-project-id\");\n   }\n\n   @Before\n   public void setUp() throws DatastoreEmulatorException {\n     datastore.clear();\n   }\n\n   @AfterClass\n   public static void stopEmulator() throws DatastoreEmulatorException {\n     datastore.stop();\n   }\n\n   @Test\n   public void testFoo1() { }\n\n   @Test\n   public void testFoo2() { }\n\n }\n "
  syntax:
    content: "public class DatastoreEmulator extends Datastore"
  inheritance:
  - "java.lang.Object"
  - "com.google.datastore.v1.client.Datastore"
  inheritedMembers:
  - "com.google.datastore.v1.client.Datastore.allocateIds(com.google.datastore.v1.AllocateIdsRequest)"
  - "com.google.datastore.v1.client.Datastore.beginTransaction(com.google.datastore.v1.BeginTransactionRequest)"
  - "com.google.datastore.v1.client.Datastore.commit(com.google.datastore.v1.CommitRequest)"
  - "com.google.datastore.v1.client.Datastore.getRpcCount()"
  - "com.google.datastore.v1.client.Datastore.lookup(com.google.datastore.v1.LookupRequest)"
  - "com.google.datastore.v1.client.Datastore.reserveIds(com.google.datastore.v1.ReserveIdsRequest)"
  - "com.google.datastore.v1.client.Datastore.resetRpcCount()"
  - "com.google.datastore.v1.client.Datastore.rollback(com.google.datastore.v1.RollbackRequest)"
  - "com.google.datastore.v1.client.Datastore.runAggregationQuery(com.google.datastore.v1.RunAggregationQueryRequest)"
  - "com.google.datastore.v1.client.Datastore.runQuery(com.google.datastore.v1.RunQueryRequest)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.DatastoreEmulator(com.google.datastore.v1.client.RemoteRpc,java.lang.String,com.google.datastore.v1.client.DatastoreEmulatorOptions)"
  id: "DatastoreEmulator(com.google.datastore.v1.client.RemoteRpc,java.lang.String,com.google.datastore.v1.client.DatastoreEmulatorOptions)"
  parent: "com.google.datastore.v1.client.DatastoreEmulator"
  langs:
  - "java"
  name: "DatastoreEmulator(RemoteRpc rpc, String localHost, DatastoreEmulatorOptions options)"
  nameWithType: "DatastoreEmulator.DatastoreEmulator(RemoteRpc rpc, String localHost, DatastoreEmulatorOptions options)"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.DatastoreEmulator(RemoteRpc rpc, String localHost, DatastoreEmulatorOptions options)"
  overload: "com.google.datastore.v1.client.DatastoreEmulator.DatastoreEmulator*"
  type: "Constructor"
  package: "com.google.datastore.v1.client"
  syntax:
    content: " DatastoreEmulator(RemoteRpc rpc, String localHost, DatastoreEmulatorOptions options)"
    parameters:
    - id: "rpc"
      type: "com.google.datastore.v1.client.RemoteRpc"
    - id: "localHost"
      type: "java.lang.String"
    - id: "options"
      type: "com.google.datastore.v1.client.DatastoreEmulatorOptions"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.clear()"
  id: "clear()"
  parent: "com.google.datastore.v1.client.DatastoreEmulator"
  langs:
  - "java"
  name: "clear()"
  nameWithType: "DatastoreEmulator.clear()"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.clear()"
  overload: "com.google.datastore.v1.client.DatastoreEmulator.clear*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Clears all data in the emulator."
  syntax:
    content: "public void clear()"
  exceptions:
  - type: "com.google.datastore.v1.client.DatastoreEmulatorException"
    description: "if the clear fails"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.getProjectDirectory()"
  id: "getProjectDirectory()"
  parent: "com.google.datastore.v1.client.DatastoreEmulator"
  langs:
  - "java"
  name: "getProjectDirectory()"
  nameWithType: "DatastoreEmulator.getProjectDirectory()"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.getProjectDirectory()"
  overload: "com.google.datastore.v1.client.DatastoreEmulator.getProjectDirectory*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public synchronized File getProjectDirectory()"
    return:
      type: "java.io.File"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.start()"
  id: "start()"
  parent: "com.google.datastore.v1.client.DatastoreEmulator"
  langs:
  - "java"
  name: "start()"
  nameWithType: "DatastoreEmulator.start()"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.start()"
  overload: "com.google.datastore.v1.client.DatastoreEmulator.start*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public synchronized void start()"
  exceptions:
  - type: "com.google.datastore.v1.client.DatastoreEmulatorException"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.start(java.lang.String,java.lang.String,java.lang.String...)"
  id: "start(java.lang.String,java.lang.String,java.lang.String...)"
  parent: "com.google.datastore.v1.client.DatastoreEmulator"
  langs:
  - "java"
  name: "start(String emulatorDir, String projectId, String[] commandLineOptions)"
  nameWithType: "DatastoreEmulator.start(String emulatorDir, String projectId, String[] commandLineOptions)"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.start(String emulatorDir, String projectId, String[] commandLineOptions)"
  overload: "com.google.datastore.v1.client.DatastoreEmulator.start*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "\n<strong>Deprecated.</strong> <em>prefer setting options in the emulator options and calling {#start()}.</em>\n\nStarts the emulator. It is the caller's responsibility to call <xref uid=\"com.google.datastore.v1.client.DatastoreEmulator.stop*\" data-throw-if-not-resolved=\"false\">#stop</xref>. Note that\n receiving an exception does not indicate that the server did not start. We recommend calling\n <xref uid=\"com.google.datastore.v1.client.DatastoreEmulator.stop*\" data-throw-if-not-resolved=\"false\">#stop</xref> to ensure the server is not running regardless of the result of this method."
  syntax:
    content: "public synchronized void start(String emulatorDir, String projectId, String[] commandLineOptions)"
    parameters:
    - id: "emulatorDir"
      type: "java.lang.String"
      description: "The path to the emulator directory, e.g. /usr/local/cloud-datastore-emulator"
    - id: "projectId"
      type: "java.lang.String"
      description: "The project ID"
    - id: "commandLineOptions"
      type: "java.lang.String[]"
      description: "Command line options to pass to the emulator on startup"
  exceptions:
  - type: "com.google.datastore.v1.client.DatastoreEmulatorException"
    description: "If <xref uid=\"#start\" data-throw-if-not-resolved=\"false\">#start</xref> has already been called or the server does\n     not start successfully."
  status: "deprecated"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.stop()"
  id: "stop()"
  parent: "com.google.datastore.v1.client.DatastoreEmulator"
  langs:
  - "java"
  name: "stop()"
  nameWithType: "DatastoreEmulator.stop()"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.stop()"
  overload: "com.google.datastore.v1.client.DatastoreEmulator.stop*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Stops the emulator. Multiple calls are allowed."
  syntax:
    content: "public synchronized void stop()"
  exceptions:
  - type: "com.google.datastore.v1.client.DatastoreEmulatorException"
    description: "if the emulator cannot be stopped"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.stopEmulatorInternal()"
  id: "stopEmulatorInternal()"
  parent: "com.google.datastore.v1.client.DatastoreEmulator"
  langs:
  - "java"
  name: "stopEmulatorInternal()"
  nameWithType: "DatastoreEmulator.stopEmulatorInternal()"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.stopEmulatorInternal()"
  overload: "com.google.datastore.v1.client.DatastoreEmulator.stopEmulatorInternal*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "protected void stopEmulatorInternal()"
  exceptions:
  - type: "com.google.datastore.v1.client.DatastoreEmulatorException"
references:
- uid: "com.google.datastore.v1.client.RemoteRpc"
  spec.java:
  - uid: "com.google.datastore.v1.client.RemoteRpc"
    name: "RemoteRpc"
    fullName: "com.google.datastore.v1.client.RemoteRpc"
    isExternal: false
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.datastore.v1.client.DatastoreEmulatorOptions"
  name: "DatastoreEmulatorOptions"
  nameWithType: "DatastoreEmulatorOptions"
  fullName: "com.google.datastore.v1.client.DatastoreEmulatorOptions"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.DatastoreEmulator*"
  name: "DatastoreEmulator"
  nameWithType: "DatastoreEmulator.DatastoreEmulator"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.DatastoreEmulator"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreEmulatorException"
  name: "DatastoreEmulatorException"
  nameWithType: "DatastoreEmulatorException"
  fullName: "com.google.datastore.v1.client.DatastoreEmulatorException"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.clear*"
  name: "clear"
  nameWithType: "DatastoreEmulator.clear"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.clear"
  package: "com.google.datastore.v1.client"
- uid: "java.lang.String[]"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String[].html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreEmulator.start*"
  name: "start"
  nameWithType: "DatastoreEmulator.start"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.start"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.stop*"
  name: "stop"
  nameWithType: "DatastoreEmulator.stop"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.stop"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.stopEmulatorInternal*"
  name: "stopEmulatorInternal"
  nameWithType: "DatastoreEmulator.stopEmulatorInternal"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.stopEmulatorInternal"
  package: "com.google.datastore.v1.client"
- uid: "java.io.File"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/File.html"
  spec.java:
  - uid: "java.io.File"
    name: "File"
    fullName: "java.io.File"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/io/File.html"
- uid: "com.google.datastore.v1.client.DatastoreEmulator.getProjectDirectory*"
  name: "getProjectDirectory"
  nameWithType: "DatastoreEmulator.getProjectDirectory"
  fullName: "com.google.datastore.v1.client.DatastoreEmulator.getProjectDirectory"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.Datastore"
  name: "Datastore"
  nameWithType: "Datastore"
  fullName: "com.google.datastore.v1.client.Datastore"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.google.datastore.v1.client.Datastore.rollback(com.google.datastore.v1.RollbackRequest)"
  name: "Datastore.rollback(RollbackRequest)"
  nameWithType: "Datastore.rollback(RollbackRequest)"
  fullName: "com.google.datastore.v1.client.Datastore.rollback(com.google.datastore.v1.RollbackRequest)"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.datastore.v1.client.Datastore.getRpcCount()"
  name: "Datastore.getRpcCount()"
  nameWithType: "Datastore.getRpcCount()"
  fullName: "com.google.datastore.v1.client.Datastore.getRpcCount()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.datastore.v1.client.Datastore.commit(com.google.datastore.v1.CommitRequest)"
  name: "Datastore.commit(CommitRequest)"
  nameWithType: "Datastore.commit(CommitRequest)"
  fullName: "com.google.datastore.v1.client.Datastore.commit(com.google.datastore.v1.CommitRequest)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.datastore.v1.client.Datastore.beginTransaction(com.google.datastore.v1.BeginTransactionRequest)"
  name: "Datastore.beginTransaction(BeginTransactionRequest)"
  nameWithType: "Datastore.beginTransaction(BeginTransactionRequest)"
  fullName: "com.google.datastore.v1.client.Datastore.beginTransaction(com.google.datastore.v1.BeginTransactionRequest)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.datastore.v1.client.Datastore.reserveIds(com.google.datastore.v1.ReserveIdsRequest)"
  name: "Datastore.reserveIds(ReserveIdsRequest)"
  nameWithType: "Datastore.reserveIds(ReserveIdsRequest)"
  fullName: "com.google.datastore.v1.client.Datastore.reserveIds(com.google.datastore.v1.ReserveIdsRequest)"
- uid: "com.google.datastore.v1.client.Datastore.runQuery(com.google.datastore.v1.RunQueryRequest)"
  name: "Datastore.runQuery(RunQueryRequest)"
  nameWithType: "Datastore.runQuery(RunQueryRequest)"
  fullName: "com.google.datastore.v1.client.Datastore.runQuery(com.google.datastore.v1.RunQueryRequest)"
- uid: "com.google.datastore.v1.client.Datastore.lookup(com.google.datastore.v1.LookupRequest)"
  name: "Datastore.lookup(LookupRequest)"
  nameWithType: "Datastore.lookup(LookupRequest)"
  fullName: "com.google.datastore.v1.client.Datastore.lookup(com.google.datastore.v1.LookupRequest)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.datastore.v1.client.Datastore.resetRpcCount()"
  name: "Datastore.resetRpcCount()"
  nameWithType: "Datastore.resetRpcCount()"
  fullName: "com.google.datastore.v1.client.Datastore.resetRpcCount()"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.google.datastore.v1.client.Datastore.allocateIds(com.google.datastore.v1.AllocateIdsRequest)"
  name: "Datastore.allocateIds(AllocateIdsRequest)"
  nameWithType: "Datastore.allocateIds(AllocateIdsRequest)"
  fullName: "com.google.datastore.v1.client.Datastore.allocateIds(com.google.datastore.v1.AllocateIdsRequest)"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.datastore.v1.client.Datastore.runAggregationQuery(com.google.datastore.v1.RunAggregationQueryRequest)"
  name: "Datastore.runAggregationQuery(RunAggregationQueryRequest)"
  nameWithType: "Datastore.runAggregationQuery(RunAggregationQueryRequest)"
  fullName: "com.google.datastore.v1.client.Datastore.runAggregationQuery(com.google.datastore.v1.RunAggregationQueryRequest)"
