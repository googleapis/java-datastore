### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.execution.QueryExecutor"
  id: "QueryExecutor"
  parent: "com.google.cloud.datastore.execution"
  children:
  - "com.google.cloud.datastore.execution.QueryExecutor.execute(INPUT,com.google.cloud.datastore.ReadOption...)"
  langs:
  - "java"
  name: "QueryExecutor<INPUT,OUTPUT>"
  nameWithType: "QueryExecutor<INPUT,OUTPUT>"
  fullName: "com.google.cloud.datastore.execution.QueryExecutor<INPUT,OUTPUT>"
  type: "Interface"
  package: "com.google.cloud.datastore.execution"
  summary: "An internal functional interface whose implementation has the responsibility to execute a <xref uid=\"com.google.datastore.v1.Query\" data-throw-if-not-resolved=\"false\">Query</xref> and returns the result. This class will have the responsibility to orchestrate between\n <xref uid=\"com.google.cloud.datastore.execution.request.ProtoPreparer\" data-throw-if-not-resolved=\"false\">com.google.cloud.datastore.execution.request.ProtoPreparer</xref>, <xref uid=\"com.google.cloud.datastore.spi.v1.DatastoreRpc\" data-throw-if-not-resolved=\"false\">com.google.cloud.datastore.spi.v1.DatastoreRpc</xref> and <xref uid=\"com.google.cloud.datastore.execution.response.ResponseTransformer\" data-throw-if-not-resolved=\"false\">com.google.cloud.datastore.execution.response.ResponseTransformer</xref> layers."
  syntax:
    content: "public interface QueryExecutor<INPUT,OUTPUT>"
    typeParameters:
    - id: "INPUT"
    - id: "OUTPUT"
- uid: "com.google.cloud.datastore.execution.QueryExecutor.execute(INPUT,com.google.cloud.datastore.ReadOption...)"
  id: "execute(INPUT,com.google.cloud.datastore.ReadOption...)"
  parent: "com.google.cloud.datastore.execution.QueryExecutor"
  langs:
  - "java"
  name: "execute(INPUT query, ReadOption[] readOptions)"
  nameWithType: "QueryExecutor<INPUT,OUTPUT>.execute(INPUT query, ReadOption[] readOptions)"
  fullName: "com.google.cloud.datastore.execution.QueryExecutor<INPUT,OUTPUT>.execute(INPUT query, ReadOption[] readOptions)"
  overload: "com.google.cloud.datastore.execution.QueryExecutor.execute*"
  type: "Method"
  package: "com.google.cloud.datastore.execution"
  syntax:
    content: "public abstract OUTPUT execute(INPUT query, ReadOption[] readOptions)"
    parameters:
    - id: "query"
      type: "INPUT"
      description: "A <xref uid=\"com.google.datastore.v1.Query\" data-throw-if-not-resolved=\"false\">Query</xref> to execute."
    - id: "readOptions"
      type: "com.google.cloud.datastore.ReadOption[]"
      description: "Optional <xref uid=\"com.google.cloud.datastore.ReadOption\" data-throw-if-not-resolved=\"false\">ReadOption</xref>s to be used when executing <xref uid=\"com.google.datastore.v1.Query\" data-throw-if-not-resolved=\"false\">Query</xref>."
    return:
      type: "OUTPUT"
references:
- uid: "INPUT"
  spec.java:
  - uid: "INPUT"
    name: "INPUT"
    fullName: "INPUT"
    isExternal: false
- uid: "com.google.cloud.datastore.ReadOption[]"
  spec.java:
  - uid: "com.google.cloud.datastore.ReadOption"
    name: "ReadOption"
    fullName: "com.google.cloud.datastore.ReadOption"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "OUTPUT"
  spec.java:
  - uid: "OUTPUT"
    name: "OUTPUT"
    fullName: "OUTPUT"
    isExternal: false
- uid: "com.google.cloud.datastore.execution.QueryExecutor.execute*"
  name: "execute"
  nameWithType: "QueryExecutor<INPUT,OUTPUT>.execute"
  fullName: "com.google.cloud.datastore.execution.QueryExecutor<INPUT,OUTPUT>.execute"
  package: "com.google.cloud.datastore.execution"
