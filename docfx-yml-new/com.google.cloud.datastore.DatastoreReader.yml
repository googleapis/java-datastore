### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.DatastoreReader"
  id: "DatastoreReader"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.DatastoreReader.<T>run(com.google.cloud.datastore.Query<T>)"
  - "com.google.cloud.datastore.DatastoreReader.fetch(com.google.cloud.datastore.Key...)"
  - "com.google.cloud.datastore.DatastoreReader.get(com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.DatastoreReader.get(com.google.cloud.datastore.Key...)"
  - "com.google.cloud.datastore.DatastoreReader.runAggregation(com.google.cloud.datastore.AggregationQuery)"
  langs:
  - "java"
  name: "DatastoreReader"
  nameWithType: "DatastoreReader"
  fullName: "com.google.cloud.datastore.DatastoreReader"
  type: "Interface"
  package: "com.google.cloud.datastore"
  summary: "An interface to represent Google Cloud Datastore read operations."
  syntax:
    content: "public interface DatastoreReader"
- uid: "com.google.cloud.datastore.DatastoreReader.<T>run(com.google.cloud.datastore.Query<T>)"
  id: "<T>run(com.google.cloud.datastore.Query<T>)"
  parent: "com.google.cloud.datastore.DatastoreReader"
  langs:
  - "java"
  name: "<T>run(Query<T> query)"
  nameWithType: "DatastoreReader.<T>run(Query<T> query)"
  fullName: "com.google.cloud.datastore.DatastoreReader.<T>run(Query<T> query)"
  overload: "com.google.cloud.datastore.DatastoreReader.run*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Submits a <xref uid=\"com.google.cloud.datastore.Query\" data-throw-if-not-resolved=\"false\">Query</xref> and returns its result."
  syntax:
    content: "public abstract QueryResults<T> <T>run(Query<T> query)"
    parameters:
    - id: "query"
      type: "com.google.cloud.datastore.Query<T>"
    return:
      type: "com.google.cloud.datastore.QueryResults<T>"
- uid: "com.google.cloud.datastore.DatastoreReader.fetch(com.google.cloud.datastore.Key...)"
  id: "fetch(com.google.cloud.datastore.Key...)"
  parent: "com.google.cloud.datastore.DatastoreReader"
  langs:
  - "java"
  name: "fetch(Key[] keys)"
  nameWithType: "DatastoreReader.fetch(Key[] keys)"
  fullName: "com.google.cloud.datastore.DatastoreReader.fetch(Key[] keys)"
  overload: "com.google.cloud.datastore.DatastoreReader.fetch*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns a list with a value for each given key (ordered by input). <code>null</code> values are\n returned for nonexistent keys. When possible prefer using <xref uid=\"com.google.cloud.datastore.DatastoreReader.get*\" data-throw-if-not-resolved=\"false\">#get(Key...)</xref> to avoid eagerly\n loading the results."
  syntax:
    content: "public abstract List<Entity> fetch(Key[] keys)"
    parameters:
    - id: "keys"
      type: "com.google.cloud.datastore.Key[]"
    return:
      type: "java.util.List<com.google.cloud.datastore.Entity>"
- uid: "com.google.cloud.datastore.DatastoreReader.get(com.google.cloud.datastore.Key)"
  id: "get(com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.DatastoreReader"
  langs:
  - "java"
  name: "get(Key key)"
  nameWithType: "DatastoreReader.get(Key key)"
  fullName: "com.google.cloud.datastore.DatastoreReader.get(Key key)"
  overload: "com.google.cloud.datastore.DatastoreReader.get*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns an <xref uid=\"com.google.cloud.datastore.Entity\" data-throw-if-not-resolved=\"false\">Entity</xref> for the given <xref uid=\"com.google.cloud.datastore.Key\" data-throw-if-not-resolved=\"false\">Key</xref> or <code>null</code> if it doesn't exist."
  syntax:
    content: "public abstract Entity get(Key key)"
    parameters:
    - id: "key"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.Entity"
- uid: "com.google.cloud.datastore.DatastoreReader.get(com.google.cloud.datastore.Key...)"
  id: "get(com.google.cloud.datastore.Key...)"
  parent: "com.google.cloud.datastore.DatastoreReader"
  langs:
  - "java"
  name: "get(Key[] keys)"
  nameWithType: "DatastoreReader.get(Key[] keys)"
  fullName: "com.google.cloud.datastore.DatastoreReader.get(Key[] keys)"
  overload: "com.google.cloud.datastore.DatastoreReader.get*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns an <xref uid=\"com.google.cloud.datastore.Entity\" data-throw-if-not-resolved=\"false\">Entity</xref> for each given <xref uid=\"com.google.cloud.datastore.Key\" data-throw-if-not-resolved=\"false\">Key</xref> that exists in the Datastore. The order of\n the result is unspecified. Results are loaded lazily, so it is possible to get a <code>\n DatastoreException</code> from the returned <code>Iterator</code>'s <xref uid=\"java.util.Iterator.hasNext\" data-throw-if-not-resolved=\"false\">hasNext</xref> or\n <xref uid=\"java.util.Iterator.next\" data-throw-if-not-resolved=\"false\">next</xref> methods.\nSee Also: <xref uid=\"com.google.cloud.datastore.DatastoreReader.get(com.google.cloud.datastore.Key)\" data-throw-if-not-resolved=\"false\">#get(Key)</xref>\n"
  syntax:
    content: "public abstract Iterator<Entity> get(Key[] keys)"
    parameters:
    - id: "keys"
      type: "com.google.cloud.datastore.Key[]"
    return:
      type: "java.util.Iterator<com.google.cloud.datastore.Entity>"
- uid: "com.google.cloud.datastore.DatastoreReader.runAggregation(com.google.cloud.datastore.AggregationQuery)"
  id: "runAggregation(com.google.cloud.datastore.AggregationQuery)"
  parent: "com.google.cloud.datastore.DatastoreReader"
  langs:
  - "java"
  name: "runAggregation(AggregationQuery query)"
  nameWithType: "DatastoreReader.runAggregation(AggregationQuery query)"
  fullName: "com.google.cloud.datastore.DatastoreReader.runAggregation(AggregationQuery query)"
  overload: "com.google.cloud.datastore.DatastoreReader.runAggregation*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Submits a <xref uid=\"com.google.cloud.datastore.AggregationQuery\" data-throw-if-not-resolved=\"false\">AggregationQuery</xref> and returns <xref uid=\"com.google.cloud.datastore.AggregationResults\" data-throw-if-not-resolved=\"false\">AggregationResults</xref>."
  syntax:
    content: "public default AggregationResults runAggregation(AggregationQuery query)"
    parameters:
    - id: "query"
      type: "com.google.cloud.datastore.AggregationQuery"
    return:
      type: "com.google.cloud.datastore.AggregationResults"
references:
- uid: "com.google.cloud.datastore.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.cloud.datastore.Key"
- uid: "com.google.cloud.datastore.Entity"
  name: "Entity"
  nameWithType: "Entity"
  fullName: "com.google.cloud.datastore.Entity"
- uid: "com.google.cloud.datastore.DatastoreReader.get*"
  name: "get"
  nameWithType: "DatastoreReader.get"
  fullName: "com.google.cloud.datastore.DatastoreReader.get"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key[]"
  spec.java:
  - uid: "com.google.cloud.datastore.Key"
    name: "Key"
    fullName: "com.google.cloud.datastore.Key"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "java.util.Iterator<com.google.cloud.datastore.Entity>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Iterator<com/google/cloud/datastore/Entity>.html"
  spec.java:
  - uid: "java.util.Iterator"
    name: "Iterator"
    fullName: "java.util.Iterator"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.Entity"
    name: "Entity"
    fullName: "com.google.cloud.datastore.Entity"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "java.util.List<com.google.cloud.datastore.Entity>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/cloud/datastore/Entity>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.Entity"
    name: "Entity"
    fullName: "com.google.cloud.datastore.Entity"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.DatastoreReader.fetch*"
  name: "fetch"
  nameWithType: "DatastoreReader.fetch"
  fullName: "com.google.cloud.datastore.DatastoreReader.fetch"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Query<T>"
  spec.java:
  - uid: "com.google.cloud.datastore.Query"
    name: "Query"
    fullName: "com.google.cloud.datastore.Query"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "T"
    name: "T"
    fullName: "T"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.QueryResults<T>"
  spec.java:
  - uid: "com.google.cloud.datastore.QueryResults"
    name: "QueryResults"
    fullName: "com.google.cloud.datastore.QueryResults"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "T"
    name: "T"
    fullName: "T"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.DatastoreReader.run*"
  name: "<T>run"
  nameWithType: "DatastoreReader.<T>run"
  fullName: "com.google.cloud.datastore.DatastoreReader.<T>run"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.AggregationQuery"
  name: "AggregationQuery"
  nameWithType: "AggregationQuery"
  fullName: "com.google.cloud.datastore.AggregationQuery"
- uid: "com.google.cloud.datastore.AggregationResults"
  name: "AggregationResults"
  nameWithType: "AggregationResults"
  fullName: "com.google.cloud.datastore.AggregationResults"
- uid: "com.google.cloud.datastore.DatastoreReader.runAggregation*"
  name: "runAggregation"
  nameWithType: "DatastoreReader.runAggregation"
  fullName: "com.google.cloud.datastore.DatastoreReader.runAggregation"
  package: "com.google.cloud.datastore"
- uid: "java.util.Iterator"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html"
  name: "Iterator"
  nameWithType: "Iterator"
  fullName: "java.util.Iterator"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.datastore.Query"
  name: "Query"
  nameWithType: "Query"
  fullName: "com.google.cloud.datastore.Query"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "com.google.cloud.datastore.QueryResults"
  name: "QueryResults"
  nameWithType: "QueryResults"
  fullName: "com.google.cloud.datastore.QueryResults"
