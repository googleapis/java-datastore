### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  id: "CompositeFilter"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.StructuredQuery.CompositeFilter.and(com.google.cloud.datastore.StructuredQuery.Filter,com.google.cloud.datastore.StructuredQuery.Filter...)"
  - "com.google.cloud.datastore.StructuredQuery.CompositeFilter.equals(java.lang.Object)"
  - "com.google.cloud.datastore.StructuredQuery.CompositeFilter.hashCode()"
  - "com.google.cloud.datastore.StructuredQuery.CompositeFilter.or(com.google.cloud.datastore.StructuredQuery.Filter,com.google.cloud.datastore.StructuredQuery.Filter...)"
  - "com.google.cloud.datastore.StructuredQuery.CompositeFilter.toString()"
  langs:
  - "java"
  name: "StructuredQuery.CompositeFilter"
  nameWithType: "StructuredQuery.CompositeFilter"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "A class representing a filter composed of a combination of other filters."
  syntax:
    content: "public static final class StructuredQuery.CompositeFilter extends StructuredQuery.Filter"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.datastore.StructuredQuery.Filter"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.CompositeFilter(com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator,com.google.cloud.datastore.StructuredQuery.Filter,com.google.cloud.datastore.StructuredQuery.Filter...)"
  id: "CompositeFilter(com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator,com.google.cloud.datastore.StructuredQuery.Filter,com.google.cloud.datastore.StructuredQuery.Filter...)"
  parent: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  langs:
  - "java"
  name: "CompositeFilter(StructuredQuery.CompositeFilter.Operator operator, StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  nameWithType: "StructuredQuery.CompositeFilter.CompositeFilter(StructuredQuery.CompositeFilter.Operator operator, StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.CompositeFilter(StructuredQuery.CompositeFilter.Operator operator, StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  overload: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.CompositeFilter*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "private CompositeFilter(StructuredQuery.CompositeFilter.Operator operator, StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
    parameters:
    - id: "operator"
      type: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator"
    - id: "first"
      type: "com.google.cloud.datastore.StructuredQuery.Filter"
    - id: "other"
      type: "com.google.cloud.datastore.StructuredQuery.Filter[]"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.CompositeFilter(com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator,com.google.common.collect.ImmutableList<com.google.cloud.datastore.StructuredQuery.Filter>)"
  id: "CompositeFilter(com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator,com.google.common.collect.ImmutableList<com.google.cloud.datastore.StructuredQuery.Filter>)"
  parent: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  langs:
  - "java"
  name: "CompositeFilter(StructuredQuery.CompositeFilter.Operator operator, ImmutableList<StructuredQuery.Filter> filters)"
  nameWithType: "StructuredQuery.CompositeFilter.CompositeFilter(StructuredQuery.CompositeFilter.Operator operator, ImmutableList<StructuredQuery.Filter> filters)"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.CompositeFilter(StructuredQuery.CompositeFilter.Operator operator, ImmutableList<StructuredQuery.Filter> filters)"
  overload: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.CompositeFilter*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "private CompositeFilter(StructuredQuery.CompositeFilter.Operator operator, ImmutableList<StructuredQuery.Filter> filters)"
    parameters:
    - id: "operator"
      type: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator"
    - id: "filters"
      type: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.StructuredQuery.Filter>"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.and(com.google.cloud.datastore.StructuredQuery.Filter,com.google.cloud.datastore.StructuredQuery.Filter...)"
  id: "and(com.google.cloud.datastore.StructuredQuery.Filter,com.google.cloud.datastore.StructuredQuery.Filter...)"
  parent: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  langs:
  - "java"
  name: "and(StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  nameWithType: "StructuredQuery.CompositeFilter.and(StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.and(StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  overload: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.and*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.CompositeFilter and(StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.datastore.StructuredQuery.Filter"
    - id: "other"
      type: "com.google.cloud.datastore.StructuredQuery.Filter[]"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "StructuredQuery.CompositeFilter.equals(Object obj)"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.equals(Object obj)"
  overload: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "StructuredQuery.CompositeFilter.hashCode()"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.hashCode()"
  overload: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.or(com.google.cloud.datastore.StructuredQuery.Filter,com.google.cloud.datastore.StructuredQuery.Filter...)"
  id: "or(com.google.cloud.datastore.StructuredQuery.Filter,com.google.cloud.datastore.StructuredQuery.Filter...)"
  parent: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  langs:
  - "java"
  name: "or(StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  nameWithType: "StructuredQuery.CompositeFilter.or(StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.or(StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
  overload: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.or*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.CompositeFilter or(StructuredQuery.Filter first, StructuredQuery.Filter[] other)"
    parameters:
    - id: "first"
      type: "com.google.cloud.datastore.StructuredQuery.Filter"
    - id: "other"
      type: "com.google.cloud.datastore.StructuredQuery.Filter[]"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.toString()"
  id: "toString()"
  parent: "com.google.cloud.datastore.StructuredQuery.CompositeFilter"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "StructuredQuery.CompositeFilter.toString()"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.toString()"
  overload: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator"
  spec.java:
  - uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator"
    name: "Operator"
    fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.Operator"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery.Filter"
  name: "StructuredQuery.Filter"
  nameWithType: "StructuredQuery.Filter"
  fullName: "com.google.cloud.datastore.StructuredQuery.Filter"
- uid: "com.google.cloud.datastore.StructuredQuery.Filter[]"
  spec.java:
  - uid: "com.google.cloud.datastore.StructuredQuery.Filter"
    name: "Filter"
    fullName: "com.google.cloud.datastore.StructuredQuery.Filter"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.CompositeFilter*"
  name: "CompositeFilter"
  nameWithType: "StructuredQuery.CompositeFilter.CompositeFilter"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.CompositeFilter"
  package: "com.google.cloud.datastore"
- uid: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.StructuredQuery.Filter>"
  spec.java:
  - uid: "com.google.common.collect.ImmutableList"
    name: "ImmutableList"
    fullName: "com.google.common.collect.ImmutableList"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.StructuredQuery.Filter"
    name: "Filter"
    fullName: "com.google.cloud.datastore.StructuredQuery.Filter"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.toString*"
  name: "toString"
  nameWithType: "StructuredQuery.CompositeFilter.toString"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.toString"
  package: "com.google.cloud.datastore"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.hashCode*"
  name: "hashCode"
  nameWithType: "StructuredQuery.CompositeFilter.hashCode"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.hashCode"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.equals*"
  name: "equals"
  nameWithType: "StructuredQuery.CompositeFilter.equals"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.equals"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.and*"
  name: "and"
  nameWithType: "StructuredQuery.CompositeFilter.and"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.and"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.or*"
  name: "or"
  nameWithType: "StructuredQuery.CompositeFilter.or"
  fullName: "com.google.cloud.datastore.StructuredQuery.CompositeFilter.or"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.common.collect.ImmutableList"
  name: "ImmutableList"
  nameWithType: "ImmutableList"
  fullName: "com.google.common.collect.ImmutableList"
