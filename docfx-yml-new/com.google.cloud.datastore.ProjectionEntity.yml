### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.ProjectionEntity"
  id: "ProjectionEntity"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.ProjectionEntity.Builder"
  - "com.google.cloud.datastore.ProjectionEntity.getBlob(java.lang.String)"
  - "com.google.cloud.datastore.ProjectionEntity.getTimestamp(java.lang.String)"
  - "com.google.cloud.datastore.ProjectionEntity.newBuilder(com.google.cloud.datastore.ProjectionEntity)"
  langs:
  - "java"
  name: "ProjectionEntity"
  nameWithType: "ProjectionEntity"
  fullName: "com.google.cloud.datastore.ProjectionEntity"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "A projection entity is a result of a Google Cloud Datastore projection query. A projection entity\n holds one or more properties, represented by a name (as <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>) and a value (as <xref uid=\"com.google.datastore.v1.Value\" data-throw-if-not-resolved=\"false\">Value</xref>), and may have a <xref uid=\"com.google.cloud.datastore.Key\" data-throw-if-not-resolved=\"false\">Key</xref>.\nSee Also: <a href=\"https://cloud.google.com/datastore/docs/concepts/entities\">Google Cloud Datastore  Entities, Properties, and Keys</a>, <a href=\"https://cloud.google.com/datastore/docs/concepts/projectionqueries\">Google Cloud  Datastore projection queries</a>\n"
  syntax:
    content: "public final class ProjectionEntity extends BaseEntity<Key>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.datastore.BaseEntity"
  inheritedMembers:
  - "com.google.cloud.datastore.BaseEntity.<K>getEntity(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.<T>getList(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.<V>getValue(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.contains(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.equals(java.lang.Object)"
  - "com.google.cloud.datastore.BaseEntity.getBlob(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getBoolean(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getDouble(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getKey()"
  - "com.google.cloud.datastore.BaseEntity.getKey(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getLatLng(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getLong(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getNames()"
  - "com.google.cloud.datastore.BaseEntity.getProperties()"
  - "com.google.cloud.datastore.BaseEntity.getString(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getTimestamp(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.hasKey()"
  - "com.google.cloud.datastore.BaseEntity.hashCode()"
  - "com.google.cloud.datastore.BaseEntity.isNull(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.ProjectionEntity.ProjectionEntity(com.google.cloud.datastore.ProjectionEntity.Builder)"
  id: "ProjectionEntity(com.google.cloud.datastore.ProjectionEntity.Builder)"
  parent: "com.google.cloud.datastore.ProjectionEntity"
  langs:
  - "java"
  name: "ProjectionEntity(ProjectionEntity.Builder builder)"
  nameWithType: "ProjectionEntity.ProjectionEntity(ProjectionEntity.Builder builder)"
  fullName: "com.google.cloud.datastore.ProjectionEntity.ProjectionEntity(ProjectionEntity.Builder builder)"
  overload: "com.google.cloud.datastore.ProjectionEntity.ProjectionEntity*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " ProjectionEntity(ProjectionEntity.Builder builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.datastore.ProjectionEntity.Builder"
- uid: "com.google.cloud.datastore.ProjectionEntity.getBlob(java.lang.String)"
  id: "getBlob(java.lang.String)"
  parent: "com.google.cloud.datastore.ProjectionEntity"
  langs:
  - "java"
  name: "getBlob(String name)"
  nameWithType: "ProjectionEntity.getBlob(String name)"
  fullName: "com.google.cloud.datastore.ProjectionEntity.getBlob(String name)"
  overload: "com.google.cloud.datastore.ProjectionEntity.getBlob*"
  overridden: "com.google.cloud.datastore.BaseEntity.getBlob(java.lang.String)"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a blob."
  syntax:
    content: "public Blob getBlob(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Blob"
- uid: "com.google.cloud.datastore.ProjectionEntity.getTimestamp(java.lang.String)"
  id: "getTimestamp(java.lang.String)"
  parent: "com.google.cloud.datastore.ProjectionEntity"
  langs:
  - "java"
  name: "getTimestamp(String name)"
  nameWithType: "ProjectionEntity.getTimestamp(String name)"
  fullName: "com.google.cloud.datastore.ProjectionEntity.getTimestamp(String name)"
  overload: "com.google.cloud.datastore.ProjectionEntity.getTimestamp*"
  overridden: "com.google.cloud.datastore.BaseEntity.getTimestamp(java.lang.String)"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a Timestamp."
  syntax:
    content: "public Timestamp getTimestamp(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.Timestamp"
- uid: "com.google.cloud.datastore.ProjectionEntity.newBuilder(com.google.cloud.datastore.ProjectionEntity)"
  id: "newBuilder(com.google.cloud.datastore.ProjectionEntity)"
  parent: "com.google.cloud.datastore.ProjectionEntity"
  langs:
  - "java"
  name: "newBuilder(ProjectionEntity copyFrom)"
  nameWithType: "ProjectionEntity.newBuilder(ProjectionEntity copyFrom)"
  fullName: "com.google.cloud.datastore.ProjectionEntity.newBuilder(ProjectionEntity copyFrom)"
  overload: "com.google.cloud.datastore.ProjectionEntity.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static ProjectionEntity.Builder newBuilder(ProjectionEntity copyFrom)"
    parameters:
    - id: "copyFrom"
      type: "com.google.cloud.datastore.ProjectionEntity"
    return:
      type: "com.google.cloud.datastore.ProjectionEntity.Builder"
  javaType: "static method"
references:
- uid: "com.google.cloud.datastore.ProjectionEntity.Builder"
  name: "ProjectionEntity.Builder"
  nameWithType: "ProjectionEntity.Builder"
  fullName: "com.google.cloud.datastore.ProjectionEntity.Builder"
- uid: "com.google.cloud.datastore.ProjectionEntity.ProjectionEntity*"
  name: "ProjectionEntity"
  nameWithType: "ProjectionEntity.ProjectionEntity"
  fullName: "com.google.cloud.datastore.ProjectionEntity.ProjectionEntity"
  package: "com.google.cloud.datastore"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.Timestamp"
  spec.java:
  - uid: "com.google.cloud.Timestamp"
    name: "Timestamp"
    fullName: "com.google.cloud.Timestamp"
    isExternal: false
- uid: "com.google.cloud.datastore.ProjectionEntity.getTimestamp*"
  name: "getTimestamp"
  nameWithType: "ProjectionEntity.getTimestamp"
  fullName: "com.google.cloud.datastore.ProjectionEntity.getTimestamp"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Blob"
  name: "Blob"
  nameWithType: "Blob"
  fullName: "com.google.cloud.datastore.Blob"
- uid: "com.google.cloud.datastore.ProjectionEntity.getBlob*"
  name: "getBlob"
  nameWithType: "ProjectionEntity.getBlob"
  fullName: "com.google.cloud.datastore.ProjectionEntity.getBlob"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.ProjectionEntity.newBuilder*"
  name: "newBuilder"
  nameWithType: "ProjectionEntity.newBuilder"
  fullName: "com.google.cloud.datastore.ProjectionEntity.newBuilder"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity<com.google.cloud.datastore.Key>"
  name: "BaseEntity<Key>"
  nameWithType: "BaseEntity<Key>"
  fullName: "com.google.cloud.datastore.BaseEntity<com.google.cloud.datastore.Key>"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.datastore.BaseEntity.getKey()"
  name: "BaseEntity.getKey()"
  nameWithType: "BaseEntity.getKey()"
  fullName: "com.google.cloud.datastore.BaseEntity.getKey()"
- uid: "com.google.cloud.datastore.BaseEntity.<V>getValue(java.lang.String)"
  name: "BaseEntity.<V>getValue(String)"
  nameWithType: "BaseEntity.<V>getValue(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.<V>getValue(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity.<K>getEntity(java.lang.String)"
  name: "BaseEntity.<K>getEntity(String)"
  nameWithType: "BaseEntity.<K>getEntity(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.<K>getEntity(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity.hasKey()"
  name: "BaseEntity.hasKey()"
  nameWithType: "BaseEntity.hasKey()"
  fullName: "com.google.cloud.datastore.BaseEntity.hasKey()"
- uid: "com.google.cloud.datastore.BaseEntity.toString()"
  name: "BaseEntity.toString()"
  nameWithType: "BaseEntity.toString()"
  fullName: "com.google.cloud.datastore.BaseEntity.toString()"
- uid: "com.google.cloud.datastore.BaseEntity.getBlob(java.lang.String)"
  name: "BaseEntity.getBlob(String)"
  nameWithType: "BaseEntity.getBlob(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.getBlob(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity.getLatLng(java.lang.String)"
  name: "BaseEntity.getLatLng(String)"
  nameWithType: "BaseEntity.getLatLng(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.getLatLng(java.lang.String)"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.datastore.BaseEntity.contains(java.lang.String)"
  name: "BaseEntity.contains(String)"
  nameWithType: "BaseEntity.contains(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.contains(java.lang.String)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.google.cloud.datastore.BaseEntity.hashCode()"
  name: "BaseEntity.hashCode()"
  nameWithType: "BaseEntity.hashCode()"
  fullName: "com.google.cloud.datastore.BaseEntity.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.BaseEntity.getKey(java.lang.String)"
  name: "BaseEntity.getKey(String)"
  nameWithType: "BaseEntity.getKey(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.getKey(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity.getDouble(java.lang.String)"
  name: "BaseEntity.getDouble(String)"
  nameWithType: "BaseEntity.getDouble(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.getDouble(java.lang.String)"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.google.cloud.datastore.BaseEntity.getLong(java.lang.String)"
  name: "BaseEntity.getLong(String)"
  nameWithType: "BaseEntity.getLong(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.getLong(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity.getString(java.lang.String)"
  name: "BaseEntity.getString(String)"
  nameWithType: "BaseEntity.getString(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.getString(java.lang.String)"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.google.cloud.datastore.BaseEntity.getProperties()"
  name: "BaseEntity.getProperties()"
  nameWithType: "BaseEntity.getProperties()"
  fullName: "com.google.cloud.datastore.BaseEntity.getProperties()"
- uid: "com.google.cloud.datastore.BaseEntity.equals(java.lang.Object)"
  name: "BaseEntity.equals(Object)"
  nameWithType: "BaseEntity.equals(Object)"
  fullName: "com.google.cloud.datastore.BaseEntity.equals(java.lang.Object)"
- uid: "com.google.cloud.datastore.BaseEntity.getBoolean(java.lang.String)"
  name: "BaseEntity.getBoolean(String)"
  nameWithType: "BaseEntity.getBoolean(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.getBoolean(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity.getNames()"
  name: "BaseEntity.getNames()"
  nameWithType: "BaseEntity.getNames()"
  fullName: "com.google.cloud.datastore.BaseEntity.getNames()"
- uid: "com.google.cloud.datastore.BaseEntity.<T>getList(java.lang.String)"
  name: "BaseEntity.<T>getList(String)"
  nameWithType: "BaseEntity.<T>getList(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.<T>getList(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity.isNull(java.lang.String)"
  name: "BaseEntity.isNull(String)"
  nameWithType: "BaseEntity.isNull(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.isNull(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity.getTimestamp(java.lang.String)"
  name: "BaseEntity.getTimestamp(String)"
  nameWithType: "BaseEntity.getTimestamp(String)"
  fullName: "com.google.cloud.datastore.BaseEntity.getTimestamp(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity"
  name: "BaseEntity"
  nameWithType: "BaseEntity"
  fullName: "com.google.cloud.datastore.BaseEntity"
- uid: "com.google.cloud.datastore.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.cloud.datastore.Key"
- uid: "V>getValue(java.lang.String)"
  name: "V>getValue(String)"
  nameWithType: "V>getValue(String)"
  fullName: "V>getValue(java.lang.String)"
- uid: "com.google.cloud.datastore.BaseEntity."
  name: "BaseEntity."
  nameWithType: "BaseEntity."
  fullName: "com.google.cloud.datastore.BaseEntity."
- uid: "K>getEntity(java.lang.String)"
  name: "K>getEntity(String)"
  nameWithType: "K>getEntity(String)"
  fullName: "K>getEntity(java.lang.String)"
- uid: "T>getList(java.lang.String)"
  name: "T>getList(String)"
  nameWithType: "T>getList(String)"
  fullName: "T>getList(java.lang.String)"
