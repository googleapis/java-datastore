### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.aggregation.Aggregation"
  id: "Aggregation"
  parent: "com.google.cloud.datastore.aggregation"
  children:
  - "com.google.cloud.datastore.aggregation.Aggregation.Aggregation(java.lang.String)"
  - "com.google.cloud.datastore.aggregation.Aggregation.aggregationBuilder()"
  - "com.google.cloud.datastore.aggregation.Aggregation.avg(java.lang.String)"
  - "com.google.cloud.datastore.aggregation.Aggregation.count()"
  - "com.google.cloud.datastore.aggregation.Aggregation.getAlias()"
  - "com.google.cloud.datastore.aggregation.Aggregation.sum(java.lang.String)"
  - "com.google.cloud.datastore.aggregation.Aggregation.toPb()"
  langs:
  - "java"
  name: "Aggregation"
  nameWithType: "Aggregation"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation"
  type: "Class"
  package: "com.google.cloud.datastore.aggregation"
  summary: "Represents a Google Cloud Datastore Aggregation which is used with an <xref uid=\"com.google.datastore.v1.AggregationQuery\" data-throw-if-not-resolved=\"false\">AggregationQuery</xref>."
  syntax:
    content: "public abstract class Aggregation"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.Aggregation(java.lang.String)"
  id: "Aggregation(java.lang.String)"
  parent: "com.google.cloud.datastore.aggregation.Aggregation"
  langs:
  - "java"
  name: "Aggregation(String alias)"
  nameWithType: "Aggregation.Aggregation(String alias)"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.Aggregation(String alias)"
  overload: "com.google.cloud.datastore.aggregation.Aggregation.Aggregation*"
  type: "Constructor"
  package: "com.google.cloud.datastore.aggregation"
  syntax:
    content: "public Aggregation(String alias)"
    parameters:
    - id: "alias"
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.aggregationBuilder()"
  id: "aggregationBuilder()"
  parent: "com.google.cloud.datastore.aggregation.Aggregation"
  langs:
  - "java"
  name: "aggregationBuilder()"
  nameWithType: "Aggregation.aggregationBuilder()"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.aggregationBuilder()"
  overload: "com.google.cloud.datastore.aggregation.Aggregation.aggregationBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore.aggregation"
  syntax:
    content: "protected AggregationQuery.Aggregation.Builder aggregationBuilder()"
    return:
      type: "com.google.datastore.v1.AggregationQuery.Aggregation.Builder"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.avg(java.lang.String)"
  id: "avg(java.lang.String)"
  parent: "com.google.cloud.datastore.aggregation.Aggregation"
  langs:
  - "java"
  name: "avg(String propertyReference)"
  nameWithType: "Aggregation.avg(String propertyReference)"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.avg(String propertyReference)"
  overload: "com.google.cloud.datastore.aggregation.Aggregation.avg*"
  type: "Method"
  package: "com.google.cloud.datastore.aggregation"
  summary: "Returns a <xref uid=\"com.google.cloud.datastore.aggregation.AvgAggregation\" data-throw-if-not-resolved=\"false\">AvgAggregation</xref> builder."
  syntax:
    content: "public static AvgAggregation.Builder avg(String propertyReference)"
    parameters:
    - id: "propertyReference"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.aggregation.AvgAggregation.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.count()"
  id: "count()"
  parent: "com.google.cloud.datastore.aggregation.Aggregation"
  langs:
  - "java"
  name: "count()"
  nameWithType: "Aggregation.count()"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.count()"
  overload: "com.google.cloud.datastore.aggregation.Aggregation.count*"
  type: "Method"
  package: "com.google.cloud.datastore.aggregation"
  summary: "Returns a <xref uid=\"com.google.cloud.datastore.aggregation.CountAggregation\" data-throw-if-not-resolved=\"false\">CountAggregation</xref> builder."
  syntax:
    content: "public static CountAggregation.Builder count()"
    return:
      type: "com.google.cloud.datastore.aggregation.CountAggregation.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.getAlias()"
  id: "getAlias()"
  parent: "com.google.cloud.datastore.aggregation.Aggregation"
  langs:
  - "java"
  name: "getAlias()"
  nameWithType: "Aggregation.getAlias()"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.getAlias()"
  overload: "com.google.cloud.datastore.aggregation.Aggregation.getAlias*"
  type: "Method"
  package: "com.google.cloud.datastore.aggregation"
  summary: "Returns the alias for this aggregation."
  syntax:
    content: "public String getAlias()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.sum(java.lang.String)"
  id: "sum(java.lang.String)"
  parent: "com.google.cloud.datastore.aggregation.Aggregation"
  langs:
  - "java"
  name: "sum(String propertyReference)"
  nameWithType: "Aggregation.sum(String propertyReference)"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.sum(String propertyReference)"
  overload: "com.google.cloud.datastore.aggregation.Aggregation.sum*"
  type: "Method"
  package: "com.google.cloud.datastore.aggregation"
  summary: "Returns a <xref uid=\"com.google.cloud.datastore.aggregation.SumAggregation\" data-throw-if-not-resolved=\"false\">SumAggregation</xref> builder."
  syntax:
    content: "public static SumAggregation.Builder sum(String propertyReference)"
    parameters:
    - id: "propertyReference"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.aggregation.SumAggregation.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.toPb()"
  id: "toPb()"
  parent: "com.google.cloud.datastore.aggregation.Aggregation"
  langs:
  - "java"
  name: "toPb()"
  nameWithType: "Aggregation.toPb()"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.toPb()"
  overload: "com.google.cloud.datastore.aggregation.Aggregation.toPb*"
  type: "Method"
  package: "com.google.cloud.datastore.aggregation"
  syntax:
    content: "public abstract AggregationQuery.Aggregation toPb()"
    return:
      type: "com.google.datastore.v1.AggregationQuery.Aggregation"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.Aggregation*"
  name: "Aggregation"
  nameWithType: "Aggregation.Aggregation"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.Aggregation"
  package: "com.google.cloud.datastore.aggregation"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.getAlias*"
  name: "getAlias"
  nameWithType: "Aggregation.getAlias"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.getAlias"
  package: "com.google.cloud.datastore.aggregation"
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation"
  name: "AggregationQuery.Aggregation"
  nameWithType: "AggregationQuery.Aggregation"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.toPb*"
  name: "toPb"
  nameWithType: "Aggregation.toPb"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.toPb"
  package: "com.google.cloud.datastore.aggregation"
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation.Builder"
  name: "AggregationQuery.Aggregation.Builder"
  nameWithType: "AggregationQuery.Aggregation.Builder"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation.Builder"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.aggregationBuilder*"
  name: "aggregationBuilder"
  nameWithType: "Aggregation.aggregationBuilder"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.aggregationBuilder"
  package: "com.google.cloud.datastore.aggregation"
- uid: "com.google.cloud.datastore.aggregation.CountAggregation.Builder"
  name: "CountAggregation.Builder"
  nameWithType: "CountAggregation.Builder"
  fullName: "com.google.cloud.datastore.aggregation.CountAggregation.Builder"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.count*"
  name: "count"
  nameWithType: "Aggregation.count"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.count"
  package: "com.google.cloud.datastore.aggregation"
- uid: "com.google.cloud.datastore.aggregation.SumAggregation.Builder"
  name: "SumAggregation.Builder"
  nameWithType: "SumAggregation.Builder"
  fullName: "com.google.cloud.datastore.aggregation.SumAggregation.Builder"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.sum*"
  name: "sum"
  nameWithType: "Aggregation.sum"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.sum"
  package: "com.google.cloud.datastore.aggregation"
- uid: "com.google.cloud.datastore.aggregation.AvgAggregation.Builder"
  name: "AvgAggregation.Builder"
  nameWithType: "AvgAggregation.Builder"
  fullName: "com.google.cloud.datastore.aggregation.AvgAggregation.Builder"
- uid: "com.google.cloud.datastore.aggregation.Aggregation.avg*"
  name: "avg"
  nameWithType: "Aggregation.avg"
  fullName: "com.google.cloud.datastore.aggregation.Aggregation.avg"
  package: "com.google.cloud.datastore.aggregation"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
