### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.BaseKey"
  id: "BaseKey"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.BaseKey.Builder"
  - "com.google.cloud.datastore.BaseKey.equals(java.lang.Object)"
  - "com.google.cloud.datastore.BaseKey.getAncestors()"
  - "com.google.cloud.datastore.BaseKey.getDatabaseId()"
  - "com.google.cloud.datastore.BaseKey.getKind()"
  - "com.google.cloud.datastore.BaseKey.getNamespace()"
  - "com.google.cloud.datastore.BaseKey.getProjectId()"
  - "com.google.cloud.datastore.BaseKey.hashCode()"
  - "com.google.cloud.datastore.BaseKey.toString()"
  langs:
  - "java"
  name: "BaseKey"
  nameWithType: "BaseKey"
  fullName: "com.google.cloud.datastore.BaseKey"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "Base class for keys."
  syntax:
    content: "public abstract class BaseKey implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.BaseKey.BaseKey(java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  id: "BaseKey(java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "BaseKey(String projectId, String namespace, ImmutableList<PathElement> path)"
  nameWithType: "BaseKey.BaseKey(String projectId, String namespace, ImmutableList<PathElement> path)"
  fullName: "com.google.cloud.datastore.BaseKey.BaseKey(String projectId, String namespace, ImmutableList<PathElement> path)"
  overload: "com.google.cloud.datastore.BaseKey.BaseKey*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " BaseKey(String projectId, String namespace, ImmutableList<PathElement> path)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "namespace"
      type: "java.lang.String"
    - id: "path"
      type: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
- uid: "com.google.cloud.datastore.BaseKey.BaseKey(java.lang.String,java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  id: "BaseKey(java.lang.String,java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "BaseKey(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  nameWithType: "BaseKey.BaseKey(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  fullName: "com.google.cloud.datastore.BaseKey.BaseKey(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  overload: "com.google.cloud.datastore.BaseKey.BaseKey*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " BaseKey(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "namespace"
      type: "java.lang.String"
    - id: "databaseId"
      type: "java.lang.String"
    - id: "path"
      type: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
- uid: "com.google.cloud.datastore.BaseKey.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "BaseKey.equals(Object obj)"
  fullName: "com.google.cloud.datastore.BaseKey.equals(Object obj)"
  overload: "com.google.cloud.datastore.BaseKey.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.BaseKey.getAncestors()"
  id: "getAncestors()"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "getAncestors()"
  nameWithType: "BaseKey.getAncestors()"
  fullName: "com.google.cloud.datastore.BaseKey.getAncestors()"
  overload: "com.google.cloud.datastore.BaseKey.getAncestors*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns an immutable list with the key's ancestors."
  syntax:
    content: "public List<PathElement> getAncestors()"
    return:
      type: "java.util.List<com.google.cloud.datastore.PathElement>"
- uid: "com.google.cloud.datastore.BaseKey.getDatabaseId()"
  id: "getDatabaseId()"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "getDatabaseId()"
  nameWithType: "BaseKey.getDatabaseId()"
  fullName: "com.google.cloud.datastore.BaseKey.getDatabaseId()"
  overload: "com.google.cloud.datastore.BaseKey.getDatabaseId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public String getDatabaseId()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.BaseKey.getKind()"
  id: "getKind()"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "getKind()"
  nameWithType: "BaseKey.getKind()"
  fullName: "com.google.cloud.datastore.BaseKey.getKind()"
  overload: "com.google.cloud.datastore.BaseKey.getKind*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the key's kind."
  syntax:
    content: "public String getKind()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.BaseKey.getNamespace()"
  id: "getNamespace()"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "getNamespace()"
  nameWithType: "BaseKey.getNamespace()"
  fullName: "com.google.cloud.datastore.BaseKey.getNamespace()"
  overload: "com.google.cloud.datastore.BaseKey.getNamespace*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the key's namespace or <code>null</code> if not provided."
  syntax:
    content: "public String getNamespace()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.BaseKey.getProjectId()"
  id: "getProjectId()"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "getProjectId()"
  nameWithType: "BaseKey.getProjectId()"
  fullName: "com.google.cloud.datastore.BaseKey.getProjectId()"
  overload: "com.google.cloud.datastore.BaseKey.getProjectId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the key's projectId."
  syntax:
    content: "public String getProjectId()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.BaseKey.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "BaseKey.hashCode()"
  fullName: "com.google.cloud.datastore.BaseKey.hashCode()"
  overload: "com.google.cloud.datastore.BaseKey.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.datastore.BaseKey.toString()"
  id: "toString()"
  parent: "com.google.cloud.datastore.BaseKey"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "BaseKey.toString()"
  fullName: "com.google.cloud.datastore.BaseKey.toString()"
  overload: "com.google.cloud.datastore.BaseKey.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
  spec.java:
  - uid: "com.google.common.collect.ImmutableList"
    name: "ImmutableList"
    fullName: "com.google.common.collect.ImmutableList"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.PathElement"
    name: "PathElement"
    fullName: "com.google.cloud.datastore.PathElement"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseKey.BaseKey*"
  name: "BaseKey"
  nameWithType: "BaseKey.BaseKey"
  fullName: "com.google.cloud.datastore.BaseKey.BaseKey"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.getProjectId*"
  name: "getProjectId"
  nameWithType: "BaseKey.getProjectId"
  fullName: "com.google.cloud.datastore.BaseKey.getProjectId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.getNamespace*"
  name: "getNamespace"
  nameWithType: "BaseKey.getNamespace"
  fullName: "com.google.cloud.datastore.BaseKey.getNamespace"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.getDatabaseId*"
  name: "getDatabaseId"
  nameWithType: "BaseKey.getDatabaseId"
  fullName: "com.google.cloud.datastore.BaseKey.getDatabaseId"
  package: "com.google.cloud.datastore"
- uid: "java.util.List<com.google.cloud.datastore.PathElement>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/cloud/datastore/PathElement>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.PathElement"
    name: "PathElement"
    fullName: "com.google.cloud.datastore.PathElement"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseKey.getAncestors*"
  name: "getAncestors"
  nameWithType: "BaseKey.getAncestors"
  fullName: "com.google.cloud.datastore.BaseKey.getAncestors"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.getKind*"
  name: "getKind"
  nameWithType: "BaseKey.getKind"
  fullName: "com.google.cloud.datastore.BaseKey.getKind"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.toString*"
  name: "toString"
  nameWithType: "BaseKey.toString"
  fullName: "com.google.cloud.datastore.BaseKey.toString"
  package: "com.google.cloud.datastore"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseKey.hashCode*"
  name: "hashCode"
  nameWithType: "BaseKey.hashCode"
  fullName: "com.google.cloud.datastore.BaseKey.hashCode"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseKey.equals*"
  name: "equals"
  nameWithType: "BaseKey.equals"
  fullName: "com.google.cloud.datastore.BaseKey.equals"
  package: "com.google.cloud.datastore"
- uid: "java.io.Serializable"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.datastore.BaseKey.Builder"
  name: "BaseKey.Builder<B>"
  nameWithType: "BaseKey.Builder<B>"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>"
- uid: "com.google.cloud.datastore.PathElement"
  name: "PathElement"
  nameWithType: "PathElement"
  fullName: "com.google.cloud.datastore.PathElement"
- uid: "com.google.common.collect.ImmutableList"
  name: "ImmutableList"
  nameWithType: "ImmutableList"
  fullName: "com.google.common.collect.ImmutableList"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
