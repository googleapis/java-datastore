### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.client.DatastoreHelper"
  id: "DatastoreHelper"
  parent: "com.google.datastore.v1.client"
  children:
  - "com.google.datastore.v1.client.DatastoreHelper.KEY_PROPERTY_NAME"
  - "com.google.datastore.v1.client.DatastoreHelper.LOCAL_HOST_ENV_VAR"
  - "com.google.datastore.v1.client.DatastoreHelper.PRIVATE_KEY_FILE_ENV_VAR"
  - "com.google.datastore.v1.client.DatastoreHelper.PROJECT_ID_ENV_VAR"
  - "com.google.datastore.v1.client.DatastoreHelper.SCATTER_PROPERTY_NAME"
  - "com.google.datastore.v1.client.DatastoreHelper.SERVICE_ACCOUNT_ENV_VAR"
  - "com.google.datastore.v1.client.DatastoreHelper.getBoolean(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.getByteString(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.getDatastoreFromEnv()"
  - "com.google.datastore.v1.client.DatastoreHelper.getDouble(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.getEntity(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.getKey(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.getKeyComparator()"
  - "com.google.datastore.v1.client.DatastoreHelper.getList(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.getLong(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.getOptionsFromEnv()"
  - "com.google.datastore.v1.client.DatastoreHelper.getProjectIdFromComputeEngine()"
  - "com.google.datastore.v1.client.DatastoreHelper.getQuerySplitter()"
  - "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(java.lang.String,java.lang.String)"
  - "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(java.lang.String,java.lang.String,java.util.Collection<java.lang.String>)"
  - "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(java.lang.String,java.security.PrivateKey,java.util.Collection<java.lang.String>)"
  - "com.google.datastore.v1.client.DatastoreHelper.getString(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.getTimestamp(com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeAncestorFilter(com.google.datastore.v1.Key)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter(com.google.datastore.v1.Filter...)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter(java.lang.Iterable<com.google.datastore.v1.Filter>)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeDelete(com.google.datastore.v1.Key)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeFilter(java.lang.String,com.google.datastore.v1.PropertyFilter.Operator,com.google.datastore.v1.Value)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeFilter(java.lang.String,com.google.datastore.v1.PropertyFilter.Operator,com.google.datastore.v1.Value.Builder)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeInsert(com.google.datastore.v1.Entity)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeKey(java.lang.Object...)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeOrder(java.lang.String,com.google.datastore.v1.PropertyOrder.Direction)"
  - "com.google.datastore.v1.client.DatastoreHelper.makePropertyReference(java.lang.String)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeUpdate(com.google.datastore.v1.Entity)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeUpsert(com.google.datastore.v1.Entity)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(boolean)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Entity)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Entity.Builder)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Key)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Key.Builder)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Value,com.google.datastore.v1.Value,com.google.datastore.v1.Value...)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Value.Builder,com.google.datastore.v1.Value.Builder,com.google.datastore.v1.Value.Builder...)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.protobuf.ByteString)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.type.LatLng)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.type.LatLng.Builder)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(double)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(java.lang.Iterable<com.google.datastore.v1.Value>)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(java.lang.String)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(java.util.Date)"
  - "com.google.datastore.v1.client.DatastoreHelper.makeValue(long)"
  - "com.google.datastore.v1.client.DatastoreHelper.toDate(com.google.datastore.v1.Value)"
  langs:
  - "java"
  name: "DatastoreHelper"
  nameWithType: "DatastoreHelper"
  fullName: "com.google.datastore.v1.client.DatastoreHelper"
  type: "Class"
  package: "com.google.datastore.v1.client"
  summary: "Helper methods for <xref uid=\"com.google.datastore.v1.client.Datastore\" data-throw-if-not-resolved=\"false\">Datastore</xref>."
  syntax:
    content: "public final class DatastoreHelper"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.datastore.v1.client.DatastoreHelper.DatastoreHelper()"
  id: "DatastoreHelper()"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "DatastoreHelper()"
  nameWithType: "DatastoreHelper.DatastoreHelper()"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.DatastoreHelper()"
  overload: "com.google.datastore.v1.client.DatastoreHelper.DatastoreHelper*"
  type: "Constructor"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "private DatastoreHelper()"
- uid: "com.google.datastore.v1.client.DatastoreHelper.KEY_PROPERTY_NAME"
  id: "KEY_PROPERTY_NAME"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "KEY_PROPERTY_NAME"
  nameWithType: "DatastoreHelper.KEY_PROPERTY_NAME"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.KEY_PROPERTY_NAME"
  type: "Field"
  package: "com.google.datastore.v1.client"
  summary: "The property used in the Datastore to get the key of the entity. *"
  syntax:
    content: "public static final String KEY_PROPERTY_NAME"
    return:
      type: "java.lang.String"
  javaType: "static field"
- uid: "com.google.datastore.v1.client.DatastoreHelper.LOCAL_HOST_ENV_VAR"
  id: "LOCAL_HOST_ENV_VAR"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "LOCAL_HOST_ENV_VAR"
  nameWithType: "DatastoreHelper.LOCAL_HOST_ENV_VAR"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.LOCAL_HOST_ENV_VAR"
  type: "Field"
  package: "com.google.datastore.v1.client"
  summary: "Name of the environment variable used to set the local host."
  syntax:
    content: "public static final String LOCAL_HOST_ENV_VAR"
    return:
      type: "java.lang.String"
  javaType: "static field"
- uid: "com.google.datastore.v1.client.DatastoreHelper.PRIVATE_KEY_FILE_ENV_VAR"
  id: "PRIVATE_KEY_FILE_ENV_VAR"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "PRIVATE_KEY_FILE_ENV_VAR"
  nameWithType: "DatastoreHelper.PRIVATE_KEY_FILE_ENV_VAR"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.PRIVATE_KEY_FILE_ENV_VAR"
  type: "Field"
  package: "com.google.datastore.v1.client"
  summary: "Name of the environment variable used to set the private key file."
  syntax:
    content: "public static final String PRIVATE_KEY_FILE_ENV_VAR"
    return:
      type: "java.lang.String"
  javaType: "static field"
- uid: "com.google.datastore.v1.client.DatastoreHelper.PROJECT_ID_ENV_VAR"
  id: "PROJECT_ID_ENV_VAR"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "PROJECT_ID_ENV_VAR"
  nameWithType: "DatastoreHelper.PROJECT_ID_ENV_VAR"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.PROJECT_ID_ENV_VAR"
  type: "Field"
  package: "com.google.datastore.v1.client"
  summary: "Name of the environment variable used to set the project ID."
  syntax:
    content: "public static final String PROJECT_ID_ENV_VAR"
    return:
      type: "java.lang.String"
  javaType: "static field"
- uid: "com.google.datastore.v1.client.DatastoreHelper.SCATTER_PROPERTY_NAME"
  id: "SCATTER_PROPERTY_NAME"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "SCATTER_PROPERTY_NAME"
  nameWithType: "DatastoreHelper.SCATTER_PROPERTY_NAME"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.SCATTER_PROPERTY_NAME"
  type: "Field"
  package: "com.google.datastore.v1.client"
  summary: "The property used in the Datastore to give us a random distribution. *"
  syntax:
    content: "public static final String SCATTER_PROPERTY_NAME"
    return:
      type: "java.lang.String"
  javaType: "static field"
- uid: "com.google.datastore.v1.client.DatastoreHelper.SERVICE_ACCOUNT_ENV_VAR"
  id: "SERVICE_ACCOUNT_ENV_VAR"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "SERVICE_ACCOUNT_ENV_VAR"
  nameWithType: "DatastoreHelper.SERVICE_ACCOUNT_ENV_VAR"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.SERVICE_ACCOUNT_ENV_VAR"
  type: "Field"
  package: "com.google.datastore.v1.client"
  summary: "Name of the environment variable used to set the service account."
  syntax:
    content: "public static final String SERVICE_ACCOUNT_ENV_VAR"
    return:
      type: "java.lang.String"
  javaType: "static field"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getBoolean(com.google.datastore.v1.Value)"
  id: "getBoolean(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getBoolean(Value value)"
  nameWithType: "DatastoreHelper.getBoolean(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getBoolean(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getBoolean*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static boolean getBoolean(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "boolean"
      description: "the boolean contained in value"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getByteString(com.google.datastore.v1.Value)"
  id: "getByteString(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getByteString(Value value)"
  nameWithType: "DatastoreHelper.getByteString(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getByteString(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getByteString*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static ByteString getByteString(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "com.google.protobuf.ByteString"
      description: "the blob contained in value"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getDatastoreFromEnv()"
  id: "getDatastoreFromEnv()"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getDatastoreFromEnv()"
  nameWithType: "DatastoreHelper.getDatastoreFromEnv()"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getDatastoreFromEnv()"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getDatastoreFromEnv*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "\nSee Also: <xref uid=\"com.google.datastore.v1.client.DatastoreHelper.getOptionsFromEnv()\" data-throw-if-not-resolved=\"false\">#getOptionsFromEnv()</xref>\n"
  syntax:
    content: "public static Datastore getDatastoreFromEnv()"
    return:
      type: "com.google.datastore.v1.client.Datastore"
  exceptions:
  - type: "java.security.GeneralSecurityException"
  - type: "java.io.IOException"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getDouble(com.google.datastore.v1.Value)"
  id: "getDouble(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getDouble(Value value)"
  nameWithType: "DatastoreHelper.getDouble(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getDouble(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getDouble*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static double getDouble(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "double"
      description: "the double contained in value"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getEntity(com.google.datastore.v1.Value)"
  id: "getEntity(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getEntity(Value value)"
  nameWithType: "DatastoreHelper.getEntity(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getEntity(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getEntity*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static Entity getEntity(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "com.google.datastore.v1.Entity"
      description: "the entity contained in value"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getKey(com.google.datastore.v1.Value)"
  id: "getKey(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getKey(Value value)"
  nameWithType: "DatastoreHelper.getKey(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getKey(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getKey*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static Key getKey(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "com.google.datastore.v1.Key"
      description: "the key contained in value"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getKeyComparator()"
  id: "getKeyComparator()"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getKeyComparator()"
  nameWithType: "DatastoreHelper.getKeyComparator()"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getKeyComparator()"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getKeyComparator*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static Comparator<Key> getKeyComparator()"
    return:
      type: "java.util.Comparator<com.google.datastore.v1.Key>"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getList(com.google.datastore.v1.Value)"
  id: "getList(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getList(Value value)"
  nameWithType: "DatastoreHelper.getList(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getList(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getList*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static List<Value> getList(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "java.util.List<com.google.datastore.v1.Value>"
      description: "the array contained in value as a list."
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getLong(com.google.datastore.v1.Value)"
  id: "getLong(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getLong(Value value)"
  nameWithType: "DatastoreHelper.getLong(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getLong(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getLong*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static long getLong(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "long"
      description: "the long contained in value"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getOptionsFromEnv()"
  id: "getOptionsFromEnv()"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getOptionsFromEnv()"
  nameWithType: "DatastoreHelper.getOptionsFromEnv()"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getOptionsFromEnv()"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getOptionsFromEnv*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Constructs a <xref uid=\"com.google.datastore.v1.client.Datastore\" data-throw-if-not-resolved=\"false\">Datastore</xref> from environment variables and/or the Compute Engine metadata\n server.\n\n <p>The project ID is determined from, in order of preference:\n\n <ul>\n   <li>DATASTORE_PROJECT_ID environment variable\n   <li>Compute Engine\n </ul>\n\n <p>Credentials are taken from, in order of preference:\n\n <ol>\n   <li>No credentials (if the DATASTORE_EMULATOR_HOST environment variable is set)\n   <li>Service Account specified by the DATASTORE_SERVICE_ACCOUNT and DATASTORE_PRIVATE_KEY_FILE\n       environment variables\n   <li>Google Application Default as described <a href=\"https://cloud.google.com/docs/authentication/production\">here</a>.\n </ol>"
  syntax:
    content: "public static DatastoreOptions.Builder getOptionsFromEnv()"
    return:
      type: "com.google.datastore.v1.client.DatastoreOptions.Builder"
  exceptions:
  - type: "java.security.GeneralSecurityException"
  - type: "java.io.IOException"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getProjectIdFromComputeEngine()"
  id: "getProjectIdFromComputeEngine()"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getProjectIdFromComputeEngine()"
  nameWithType: "DatastoreHelper.getProjectIdFromComputeEngine()"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getProjectIdFromComputeEngine()"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getProjectIdFromComputeEngine*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Gets the project ID from the Compute Engine metadata server. Returns <code>null</code> if the\n project ID cannot be determined (because, for instance, the code is not running on Compute\n Engine)."
  syntax:
    content: "public static String getProjectIdFromComputeEngine()"
    return:
      type: "java.lang.String"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getQuerySplitter()"
  id: "getQuerySplitter()"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getQuerySplitter()"
  nameWithType: "DatastoreHelper.getQuerySplitter()"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getQuerySplitter()"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getQuerySplitter*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Gets a <xref uid=\"com.google.datastore.v1.client.QuerySplitter\" data-throw-if-not-resolved=\"false\">QuerySplitter</xref>.\n\n <p>The returned <xref uid=\"com.google.datastore.v1.client.QuerySplitter.getSplits*\" data-throw-if-not-resolved=\"false\">QuerySplitter#getSplits</xref> cannot accept a query that contains inequality\n filters, a sort filter, or a missing kind."
  syntax:
    content: "public static QuerySplitter getQuerySplitter()"
    return:
      type: "com.google.datastore.v1.client.QuerySplitter"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(java.lang.String,java.lang.String)"
  id: "getServiceAccountCredential(java.lang.String,java.lang.String)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getServiceAccountCredential(String serviceAccountId, String privateKeyFile)"
  nameWithType: "DatastoreHelper.getServiceAccountCredential(String serviceAccountId, String privateKeyFile)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(String serviceAccountId, String privateKeyFile)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Constructs credentials for the given account and key."
  syntax:
    content: "public static Credential getServiceAccountCredential(String serviceAccountId, String privateKeyFile)"
    parameters:
    - id: "serviceAccountId"
      type: "java.lang.String"
      description: "service account ID (typically an e-mail address)."
    - id: "privateKeyFile"
      type: "java.lang.String"
      description: "the file name from which to get the private key."
    return:
      type: "com.google.api.client.auth.oauth2.Credential"
      description: "valid credentials or <code>null</code>"
  exceptions:
  - type: "java.security.GeneralSecurityException"
  - type: "java.io.IOException"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(java.lang.String,java.lang.String,java.util.Collection<java.lang.String>)"
  id: "getServiceAccountCredential(java.lang.String,java.lang.String,java.util.Collection<java.lang.String>)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getServiceAccountCredential(String serviceAccountId, String privateKeyFile, Collection<String> serviceAccountScopes)"
  nameWithType: "DatastoreHelper.getServiceAccountCredential(String serviceAccountId, String privateKeyFile, Collection<String> serviceAccountScopes)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(String serviceAccountId, String privateKeyFile, Collection<String> serviceAccountScopes)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Constructs credentials for the given account and key file."
  syntax:
    content: "public static Credential getServiceAccountCredential(String serviceAccountId, String privateKeyFile, Collection<String> serviceAccountScopes)"
    parameters:
    - id: "serviceAccountId"
      type: "java.lang.String"
      description: "service account ID (typically an e-mail address)."
    - id: "privateKeyFile"
      type: "java.lang.String"
      description: "the file name from which to get the private key."
    - id: "serviceAccountScopes"
      type: "java.util.Collection<java.lang.String>"
      description: "Collection of OAuth scopes to use with the the service account flow\n     or <code>null</code> if not."
    return:
      type: "com.google.api.client.auth.oauth2.Credential"
      description: "valid credentials or <code>null</code>"
  exceptions:
  - type: "java.security.GeneralSecurityException"
  - type: "java.io.IOException"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(java.lang.String,java.security.PrivateKey,java.util.Collection<java.lang.String>)"
  id: "getServiceAccountCredential(java.lang.String,java.security.PrivateKey,java.util.Collection<java.lang.String>)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getServiceAccountCredential(String serviceAccountId, PrivateKey privateKey, Collection<String> serviceAccountScopes)"
  nameWithType: "DatastoreHelper.getServiceAccountCredential(String serviceAccountId, PrivateKey privateKey, Collection<String> serviceAccountScopes)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential(String serviceAccountId, PrivateKey privateKey, Collection<String> serviceAccountScopes)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Constructs credentials for the given account and key."
  syntax:
    content: "public static Credential getServiceAccountCredential(String serviceAccountId, PrivateKey privateKey, Collection<String> serviceAccountScopes)"
    parameters:
    - id: "serviceAccountId"
      type: "java.lang.String"
      description: "service account ID (typically an e-mail address)."
    - id: "privateKey"
      type: "java.security.PrivateKey"
      description: "the private key for the given account."
    - id: "serviceAccountScopes"
      type: "java.util.Collection<java.lang.String>"
      description: "Collection of OAuth scopes to use with the the service account flow\n     or <code>null</code> if not."
    return:
      type: "com.google.api.client.auth.oauth2.Credential"
      description: "valid credentials or <code>null</code>"
  exceptions:
  - type: "java.security.GeneralSecurityException"
  - type: "java.io.IOException"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getString(com.google.datastore.v1.Value)"
  id: "getString(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getString(Value value)"
  nameWithType: "DatastoreHelper.getString(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getString(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getString*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static String getString(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "java.lang.String"
      description: "the string contained in value"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getTimestamp(com.google.datastore.v1.Value)"
  id: "getTimestamp(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "getTimestamp(Value value)"
  nameWithType: "DatastoreHelper.getTimestamp(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getTimestamp(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.getTimestamp*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static long getTimestamp(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "long"
      description: "the timestamp in microseconds contained in value"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeAncestorFilter(com.google.datastore.v1.Key)"
  id: "makeAncestorFilter(com.google.datastore.v1.Key)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeAncestorFilter(Key ancestor)"
  nameWithType: "DatastoreHelper.makeAncestorFilter(Key ancestor)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeAncestorFilter(Key ancestor)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeAncestorFilter*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Makes an ancestor filter."
  syntax:
    content: "public static Filter.Builder makeAncestorFilter(Key ancestor)"
    parameters:
    - id: "ancestor"
      type: "com.google.datastore.v1.Key"
    return:
      type: "com.google.datastore.v1.Filter.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter(com.google.datastore.v1.Filter...)"
  id: "makeAndFilter(com.google.datastore.v1.Filter...)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeAndFilter(Filter[] subfilters)"
  nameWithType: "DatastoreHelper.makeAndFilter(Filter[] subfilters)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter(Filter[] subfilters)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a composite filter from the given sub-filters using AND to combine filters."
  syntax:
    content: "public static Filter.Builder makeAndFilter(Filter[] subfilters)"
    parameters:
    - id: "subfilters"
      type: "com.google.datastore.v1.Filter[]"
    return:
      type: "com.google.datastore.v1.Filter.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter(java.lang.Iterable<com.google.datastore.v1.Filter>)"
  id: "makeAndFilter(java.lang.Iterable<com.google.datastore.v1.Filter>)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeAndFilter(Iterable<Filter> subfilters)"
  nameWithType: "DatastoreHelper.makeAndFilter(Iterable<Filter> subfilters)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter(Iterable<Filter> subfilters)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a composite filter from the given sub-filters using AND to combine filters."
  syntax:
    content: "public static Filter.Builder makeAndFilter(Iterable<Filter> subfilters)"
    parameters:
    - id: "subfilters"
      type: "java.lang.Iterable<com.google.datastore.v1.Filter>"
    return:
      type: "com.google.datastore.v1.Filter.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeDelete(com.google.datastore.v1.Key)"
  id: "makeDelete(com.google.datastore.v1.Key)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeDelete(Key key)"
  nameWithType: "DatastoreHelper.makeDelete(Key key)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeDelete(Key key)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeDelete*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static Mutation.Builder makeDelete(Key key)"
    parameters:
    - id: "key"
      type: "com.google.datastore.v1.Key"
      description: "the key of the entity to delete"
    return:
      type: "com.google.datastore.v1.Mutation.Builder"
      description: "a mutation that will delete an entity"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeFilter(java.lang.String,com.google.datastore.v1.PropertyFilter.Operator,com.google.datastore.v1.Value)"
  id: "makeFilter(java.lang.String,com.google.datastore.v1.PropertyFilter.Operator,com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeFilter(String property, PropertyFilter.Operator operator, Value value)"
  nameWithType: "DatastoreHelper.makeFilter(String property, PropertyFilter.Operator operator, Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeFilter(String property, PropertyFilter.Operator operator, Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeFilter*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a filter on a property for use in a query."
  syntax:
    content: "public static Filter.Builder makeFilter(String property, PropertyFilter.Operator operator, Value value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "operator"
      type: "com.google.datastore.v1.PropertyFilter.Operator"
    - id: "value"
      type: "com.google.datastore.v1.Value"
    return:
      type: "com.google.datastore.v1.Filter.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeFilter(java.lang.String,com.google.datastore.v1.PropertyFilter.Operator,com.google.datastore.v1.Value.Builder)"
  id: "makeFilter(java.lang.String,com.google.datastore.v1.PropertyFilter.Operator,com.google.datastore.v1.Value.Builder)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeFilter(String property, PropertyFilter.Operator operator, Value.Builder value)"
  nameWithType: "DatastoreHelper.makeFilter(String property, PropertyFilter.Operator operator, Value.Builder value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeFilter(String property, PropertyFilter.Operator operator, Value.Builder value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeFilter*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a filter on a property for use in a query."
  syntax:
    content: "public static Filter.Builder makeFilter(String property, PropertyFilter.Operator operator, Value.Builder value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "operator"
      type: "com.google.datastore.v1.PropertyFilter.Operator"
    - id: "value"
      type: "com.google.datastore.v1.Value.Builder"
    return:
      type: "com.google.datastore.v1.Filter.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeInsert(com.google.datastore.v1.Entity)"
  id: "makeInsert(com.google.datastore.v1.Entity)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeInsert(Entity entity)"
  nameWithType: "DatastoreHelper.makeInsert(Entity entity)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeInsert(Entity entity)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeInsert*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static Mutation.Builder makeInsert(Entity entity)"
    parameters:
    - id: "entity"
      type: "com.google.datastore.v1.Entity"
      description: "the entity to insert"
    return:
      type: "com.google.datastore.v1.Mutation.Builder"
      description: "a mutation that will insert an entity"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeKey(java.lang.Object...)"
  id: "makeKey(java.lang.Object...)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeKey(Object[] elements)"
  nameWithType: "DatastoreHelper.makeKey(Object[] elements)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeKey(Object[] elements)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeKey*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a key from the specified path of kind/id-or-name pairs and/or Keys.\n\n <p>The id-or-name values must be either String, Long, Integer or Short.\n\n <p>The last id-or-name value may be omitted, in which case an entity without an id is created\n (for use with automatic id allocation).\n\n <p>The PartitionIds of all Keys in the path must be equal. The returned Key.Builder will use\n this PartitionId."
  syntax:
    content: "public static Key.Builder makeKey(Object[] elements)"
    parameters:
    - id: "elements"
      type: "java.lang.Object[]"
    return:
      type: "com.google.datastore.v1.Key.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeOrder(java.lang.String,com.google.datastore.v1.PropertyOrder.Direction)"
  id: "makeOrder(java.lang.String,com.google.datastore.v1.PropertyOrder.Direction)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeOrder(String property, PropertyOrder.Direction direction)"
  nameWithType: "DatastoreHelper.makeOrder(String property, PropertyOrder.Direction direction)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeOrder(String property, PropertyOrder.Direction direction)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeOrder*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a sort order for use in a query."
  syntax:
    content: "public static PropertyOrder.Builder makeOrder(String property, PropertyOrder.Direction direction)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "direction"
      type: "com.google.datastore.v1.PropertyOrder.Direction"
    return:
      type: "com.google.datastore.v1.PropertyOrder.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makePropertyReference(java.lang.String)"
  id: "makePropertyReference(java.lang.String)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makePropertyReference(String propertyName)"
  nameWithType: "DatastoreHelper.makePropertyReference(String propertyName)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makePropertyReference(String propertyName)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makePropertyReference*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a property reference for use in a query."
  syntax:
    content: "public static PropertyReference.Builder makePropertyReference(String propertyName)"
    parameters:
    - id: "propertyName"
      type: "java.lang.String"
    return:
      type: "com.google.datastore.v1.PropertyReference.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeUpdate(com.google.datastore.v1.Entity)"
  id: "makeUpdate(com.google.datastore.v1.Entity)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeUpdate(Entity entity)"
  nameWithType: "DatastoreHelper.makeUpdate(Entity entity)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeUpdate(Entity entity)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeUpdate*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static Mutation.Builder makeUpdate(Entity entity)"
    parameters:
    - id: "entity"
      type: "com.google.datastore.v1.Entity"
      description: "the entity to update"
    return:
      type: "com.google.datastore.v1.Mutation.Builder"
      description: "a mutation that will update an entity"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeUpsert(com.google.datastore.v1.Entity)"
  id: "makeUpsert(com.google.datastore.v1.Entity)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeUpsert(Entity entity)"
  nameWithType: "DatastoreHelper.makeUpsert(Entity entity)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeUpsert(Entity entity)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeUpsert*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static Mutation.Builder makeUpsert(Entity entity)"
    parameters:
    - id: "entity"
      type: "com.google.datastore.v1.Entity"
      description: "the entity to upsert"
    return:
      type: "com.google.datastore.v1.Mutation.Builder"
      description: "a mutation that will upsert an entity"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(boolean)"
  id: "makeValue(boolean)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(boolean value)"
  nameWithType: "DatastoreHelper.makeValue(boolean value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(boolean value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a boolean value."
  syntax:
    content: "public static Value.Builder makeValue(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Entity)"
  id: "makeValue(com.google.datastore.v1.Entity)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(Entity entity)"
  nameWithType: "DatastoreHelper.makeValue(Entity entity)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(Entity entity)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make an entity value."
  syntax:
    content: "public static Value.Builder makeValue(Entity entity)"
    parameters:
    - id: "entity"
      type: "com.google.datastore.v1.Entity"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Entity.Builder)"
  id: "makeValue(com.google.datastore.v1.Entity.Builder)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(Entity.Builder entity)"
  nameWithType: "DatastoreHelper.makeValue(Entity.Builder entity)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(Entity.Builder entity)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a entity value."
  syntax:
    content: "public static Value.Builder makeValue(Entity.Builder entity)"
    parameters:
    - id: "entity"
      type: "com.google.datastore.v1.Entity.Builder"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Key)"
  id: "makeValue(com.google.datastore.v1.Key)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(Key key)"
  nameWithType: "DatastoreHelper.makeValue(Key key)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(Key key)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a key value."
  syntax:
    content: "public static Value.Builder makeValue(Key key)"
    parameters:
    - id: "key"
      type: "com.google.datastore.v1.Key"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Key.Builder)"
  id: "makeValue(com.google.datastore.v1.Key.Builder)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(Key.Builder key)"
  nameWithType: "DatastoreHelper.makeValue(Key.Builder key)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(Key.Builder key)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a key value."
  syntax:
    content: "public static Value.Builder makeValue(Key.Builder key)"
    parameters:
    - id: "key"
      type: "com.google.datastore.v1.Key.Builder"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Value,com.google.datastore.v1.Value,com.google.datastore.v1.Value...)"
  id: "makeValue(com.google.datastore.v1.Value,com.google.datastore.v1.Value,com.google.datastore.v1.Value...)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(Value value1, Value value2, Value[] rest)"
  nameWithType: "DatastoreHelper.makeValue(Value value1, Value value2, Value[] rest)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(Value value1, Value value2, Value[] rest)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a list value containing the specified values."
  syntax:
    content: "public static Value.Builder makeValue(Value value1, Value value2, Value[] rest)"
    parameters:
    - id: "value1"
      type: "com.google.datastore.v1.Value"
    - id: "value2"
      type: "com.google.datastore.v1.Value"
    - id: "rest"
      type: "com.google.datastore.v1.Value[]"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.datastore.v1.Value.Builder,com.google.datastore.v1.Value.Builder,com.google.datastore.v1.Value.Builder...)"
  id: "makeValue(com.google.datastore.v1.Value.Builder,com.google.datastore.v1.Value.Builder,com.google.datastore.v1.Value.Builder...)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(Value.Builder value1, Value.Builder value2, Value.Builder[] rest)"
  nameWithType: "DatastoreHelper.makeValue(Value.Builder value1, Value.Builder value2, Value.Builder[] rest)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(Value.Builder value1, Value.Builder value2, Value.Builder[] rest)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make an array value containing the specified values."
  syntax:
    content: "public static Value.Builder makeValue(Value.Builder value1, Value.Builder value2, Value.Builder[] rest)"
    parameters:
    - id: "value1"
      type: "com.google.datastore.v1.Value.Builder"
    - id: "value2"
      type: "com.google.datastore.v1.Value.Builder"
    - id: "rest"
      type: "com.google.datastore.v1.Value.Builder[]"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.protobuf.ByteString)"
  id: "makeValue(com.google.protobuf.ByteString)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(ByteString blob)"
  nameWithType: "DatastoreHelper.makeValue(ByteString blob)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(ByteString blob)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a ByteString value."
  syntax:
    content: "public static Value.Builder makeValue(ByteString blob)"
    parameters:
    - id: "blob"
      type: "com.google.protobuf.ByteString"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.type.LatLng)"
  id: "makeValue(com.google.type.LatLng)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(LatLng value)"
  nameWithType: "DatastoreHelper.makeValue(LatLng value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(LatLng value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Makes a GeoPoint value."
  syntax:
    content: "public static Value.Builder makeValue(LatLng value)"
    parameters:
    - id: "value"
      type: "com.google.type.LatLng"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(com.google.type.LatLng.Builder)"
  id: "makeValue(com.google.type.LatLng.Builder)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(LatLng.Builder value)"
  nameWithType: "DatastoreHelper.makeValue(LatLng.Builder value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(LatLng.Builder value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Makes a GeoPoint value."
  syntax:
    content: "public static Value.Builder makeValue(LatLng.Builder value)"
    parameters:
    - id: "value"
      type: "com.google.type.LatLng.Builder"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(double)"
  id: "makeValue(double)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(double value)"
  nameWithType: "DatastoreHelper.makeValue(double value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(double value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a floating point value."
  syntax:
    content: "public static Value.Builder makeValue(double value)"
    parameters:
    - id: "value"
      type: "double"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(java.lang.Iterable<com.google.datastore.v1.Value>)"
  id: "makeValue(java.lang.Iterable<com.google.datastore.v1.Value>)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(Iterable<Value> values)"
  nameWithType: "DatastoreHelper.makeValue(Iterable<Value> values)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(Iterable<Value> values)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make an array value containing the specified values."
  syntax:
    content: "public static Value.Builder makeValue(Iterable<Value> values)"
    parameters:
    - id: "values"
      type: "java.lang.Iterable<com.google.datastore.v1.Value>"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(java.lang.String)"
  id: "makeValue(java.lang.String)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(String value)"
  nameWithType: "DatastoreHelper.makeValue(String value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(String value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a string value."
  syntax:
    content: "public static Value.Builder makeValue(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(java.util.Date)"
  id: "makeValue(java.util.Date)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(Date date)"
  nameWithType: "DatastoreHelper.makeValue(Date date)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(Date date)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make a timestamp value given a date."
  syntax:
    content: "public static Value.Builder makeValue(Date date)"
    parameters:
    - id: "date"
      type: "java.util.Date"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue(long)"
  id: "makeValue(long)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "makeValue(long key)"
  nameWithType: "DatastoreHelper.makeValue(long key)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue(long key)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Make an integer value."
  syntax:
    content: "public static Value.Builder makeValue(long key)"
    parameters:
    - id: "key"
      type: "long"
    return:
      type: "com.google.datastore.v1.Value.Builder"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreHelper.toDate(com.google.datastore.v1.Value)"
  id: "toDate(com.google.datastore.v1.Value)"
  parent: "com.google.datastore.v1.client.DatastoreHelper"
  langs:
  - "java"
  name: "toDate(Value value)"
  nameWithType: "DatastoreHelper.toDate(Value value)"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.toDate(Value value)"
  overload: "com.google.datastore.v1.client.DatastoreHelper.toDate*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Convert a timestamp value into a <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">Date</xref> clipping off the microseconds."
  syntax:
    content: "public static Date toDate(Value value)"
    parameters:
    - id: "value"
      type: "com.google.datastore.v1.Value"
      description: "a timestamp value to convert"
    return:
      type: "java.util.Date"
      description: "the resulting <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">Date</xref>"
  javaType: "static method"
references:
- uid: "com.google.datastore.v1.client.DatastoreHelper.DatastoreHelper*"
  name: "DatastoreHelper"
  nameWithType: "DatastoreHelper.DatastoreHelper"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.DatastoreHelper"
  package: "com.google.datastore.v1.client"
- uid: "java.security.GeneralSecurityException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/security/GeneralSecurityException.html"
  spec.java:
  - uid: "java.security.GeneralSecurityException"
    name: "GeneralSecurityException"
    fullName: "java.security.GeneralSecurityException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/security/GeneralSecurityException.html"
- uid: "java.io.IOException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.api.client.auth.oauth2.Credential"
  spec.java:
  - uid: "com.google.api.client.auth.oauth2.Credential"
    name: "Credential"
    fullName: "com.google.api.client.auth.oauth2.Credential"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential*"
  name: "getServiceAccountCredential"
  nameWithType: "DatastoreHelper.getServiceAccountCredential"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getServiceAccountCredential"
  package: "com.google.datastore.v1.client"
- uid: "java.util.Collection<java.lang.String>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Collection<java/lang/String>.html"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "java.security.PrivateKey"
  href: "https://docs.oracle.com/javase/8/docs/api/java/security/PrivateKey.html"
  spec.java:
  - uid: "java.security.PrivateKey"
    name: "PrivateKey"
    fullName: "java.security.PrivateKey"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/security/PrivateKey.html"
- uid: "com.google.datastore.v1.client.DatastoreOptions.Builder"
  name: "DatastoreOptions.Builder"
  nameWithType: "DatastoreOptions.Builder"
  fullName: "com.google.datastore.v1.client.DatastoreOptions.Builder"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getOptionsFromEnv*"
  name: "getOptionsFromEnv"
  nameWithType: "DatastoreHelper.getOptionsFromEnv"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getOptionsFromEnv"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getProjectIdFromComputeEngine*"
  name: "getProjectIdFromComputeEngine"
  nameWithType: "DatastoreHelper.getProjectIdFromComputeEngine"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getProjectIdFromComputeEngine"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.Datastore"
  name: "Datastore"
  nameWithType: "Datastore"
  fullName: "com.google.datastore.v1.client.Datastore"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getDatastoreFromEnv*"
  name: "getDatastoreFromEnv"
  nameWithType: "DatastoreHelper.getDatastoreFromEnv"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getDatastoreFromEnv"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.QuerySplitter"
  name: "QuerySplitter"
  nameWithType: "QuerySplitter"
  fullName: "com.google.datastore.v1.client.QuerySplitter"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getQuerySplitter*"
  name: "getQuerySplitter"
  nameWithType: "DatastoreHelper.getQuerySplitter"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getQuerySplitter"
  package: "com.google.datastore.v1.client"
- uid: "java.util.Comparator<com.google.datastore.v1.Key>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator<com/google/datastore/v1/Key>.html"
  spec.java:
  - uid: "java.util.Comparator"
    name: "Comparator"
    fullName: "java.util.Comparator"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.v1.Key"
    name: "Key"
    fullName: "com.google.datastore.v1.Key"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreHelper.getKeyComparator*"
  name: "getKeyComparator"
  nameWithType: "DatastoreHelper.getKeyComparator"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getKeyComparator"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.PropertyOrder.Direction"
  name: "PropertyOrder.Direction"
  nameWithType: "PropertyOrder.Direction"
  fullName: "com.google.datastore.v1.PropertyOrder.Direction"
- uid: "com.google.datastore.v1.PropertyOrder.Builder"
  name: "PropertyOrder.Builder"
  nameWithType: "PropertyOrder.Builder"
  fullName: "com.google.datastore.v1.PropertyOrder.Builder"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeOrder*"
  name: "makeOrder"
  nameWithType: "DatastoreHelper.makeOrder"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeOrder"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.datastore.v1.Key"
- uid: "com.google.datastore.v1.Filter.Builder"
  name: "Filter.Builder"
  nameWithType: "Filter.Builder"
  fullName: "com.google.datastore.v1.Filter.Builder"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeAncestorFilter*"
  name: "makeAncestorFilter"
  nameWithType: "DatastoreHelper.makeAncestorFilter"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeAncestorFilter"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.PropertyFilter.Operator"
  name: "PropertyFilter.Operator"
  nameWithType: "PropertyFilter.Operator"
  fullName: "com.google.datastore.v1.PropertyFilter.Operator"
- uid: "com.google.datastore.v1.Value"
  name: "Value"
  nameWithType: "Value"
  fullName: "com.google.datastore.v1.Value"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeFilter*"
  name: "makeFilter"
  nameWithType: "DatastoreHelper.makeFilter"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeFilter"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.Value.Builder"
  name: "Value.Builder"
  nameWithType: "Value.Builder"
  fullName: "com.google.datastore.v1.Value.Builder"
- uid: "com.google.datastore.v1.Filter[]"
  spec.java:
  - uid: "com.google.datastore.v1.Filter"
    name: "Filter"
    fullName: "com.google.datastore.v1.Filter"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter*"
  name: "makeAndFilter"
  nameWithType: "DatastoreHelper.makeAndFilter"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeAndFilter"
  package: "com.google.datastore.v1.client"
- uid: "java.lang.Iterable<com.google.datastore.v1.Filter>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable<com/google/datastore/v1/Filter>.html"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.v1.Filter"
    name: "Filter"
    fullName: "com.google.datastore.v1.Filter"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.PropertyReference.Builder"
  name: "PropertyReference.Builder"
  nameWithType: "PropertyReference.Builder"
  fullName: "com.google.datastore.v1.PropertyReference.Builder"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makePropertyReference*"
  name: "makePropertyReference"
  nameWithType: "DatastoreHelper.makePropertyReference"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makePropertyReference"
  package: "com.google.datastore.v1.client"
- uid: "java.lang.Iterable<com.google.datastore.v1.Value>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable<com/google/datastore/v1/Value>.html"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.v1.Value"
    name: "Value"
    fullName: "com.google.datastore.v1.Value"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeValue*"
  name: "makeValue"
  nameWithType: "DatastoreHelper.makeValue"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeValue"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.Value[]"
  spec.java:
  - uid: "com.google.datastore.v1.Value"
    name: "Value"
    fullName: "com.google.datastore.v1.Value"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.datastore.v1.Value.Builder[]"
  spec.java:
  - uid: "com.google.datastore.v1.Value.Builder"
    name: "Builder"
    fullName: "com.google.datastore.v1.Value.Builder"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.datastore.v1.Key.Builder"
  name: "Key.Builder"
  nameWithType: "Key.Builder"
  fullName: "com.google.datastore.v1.Key.Builder"
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "double"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.Entity"
  name: "Entity"
  nameWithType: "Entity"
  fullName: "com.google.datastore.v1.Entity"
- uid: "com.google.datastore.v1.Entity.Builder"
  name: "Entity.Builder"
  nameWithType: "Entity.Builder"
  fullName: "com.google.datastore.v1.Entity.Builder"
- uid: "com.google.protobuf.ByteString"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
    isExternal: true
- uid: "java.util.Date"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Date.html"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/Date.html"
- uid: "com.google.type.LatLng"
  spec.java:
  - uid: "com.google.type.LatLng"
    name: "LatLng"
    fullName: "com.google.type.LatLng"
    isExternal: false
- uid: "com.google.type.LatLng.Builder"
  spec.java:
  - uid: "com.google.type.LatLng.Builder"
    name: "Builder"
    fullName: "com.google.type.LatLng.Builder"
    isExternal: false
- uid: "java.lang.Object[]"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object[].html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeKey*"
  name: "makeKey"
  nameWithType: "DatastoreHelper.makeKey"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeKey"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getDouble*"
  name: "getDouble"
  nameWithType: "DatastoreHelper.getDouble"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getDouble"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getKey*"
  name: "getKey"
  nameWithType: "DatastoreHelper.getKey"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getKey"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getByteString*"
  name: "getByteString"
  nameWithType: "DatastoreHelper.getByteString"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getByteString"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getEntity*"
  name: "getEntity"
  nameWithType: "DatastoreHelper.getEntity"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getEntity"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getString*"
  name: "getString"
  nameWithType: "DatastoreHelper.getString"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getString"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getBoolean*"
  name: "getBoolean"
  nameWithType: "DatastoreHelper.getBoolean"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getBoolean"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getLong*"
  name: "getLong"
  nameWithType: "DatastoreHelper.getLong"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getLong"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.getTimestamp*"
  name: "getTimestamp"
  nameWithType: "DatastoreHelper.getTimestamp"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getTimestamp"
  package: "com.google.datastore.v1.client"
- uid: "java.util.List<com.google.datastore.v1.Value>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/datastore/v1/Value>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.v1.Value"
    name: "Value"
    fullName: "com.google.datastore.v1.Value"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreHelper.getList*"
  name: "getList"
  nameWithType: "DatastoreHelper.getList"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.getList"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.toDate*"
  name: "toDate"
  nameWithType: "DatastoreHelper.toDate"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.toDate"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.Mutation.Builder"
  name: "Mutation.Builder"
  nameWithType: "Mutation.Builder"
  fullName: "com.google.datastore.v1.Mutation.Builder"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeInsert*"
  name: "makeInsert"
  nameWithType: "DatastoreHelper.makeInsert"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeInsert"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeUpdate*"
  name: "makeUpdate"
  nameWithType: "DatastoreHelper.makeUpdate"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeUpdate"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeUpsert*"
  name: "makeUpsert"
  nameWithType: "DatastoreHelper.makeUpsert"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeUpsert"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreHelper.makeDelete*"
  name: "makeDelete"
  nameWithType: "DatastoreHelper.makeDelete"
  fullName: "com.google.datastore.v1.client.DatastoreHelper.makeDelete"
  package: "com.google.datastore.v1.client"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Collection"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "java.util.Comparator"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html"
  name: "Comparator"
  nameWithType: "Comparator"
  fullName: "java.util.Comparator"
- uid: "java.lang.Iterable"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "com.google.datastore.v1.Filter"
  name: "Filter"
  nameWithType: "Filter"
  fullName: "com.google.datastore.v1.Filter"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
