### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.MutationOrBuilder"
  id: "MutationOrBuilder"
  parent: "com.google.datastore.v1"
  children:
  - "com.google.datastore.v1.MutationOrBuilder.getBaseVersion()"
  - "com.google.datastore.v1.MutationOrBuilder.getConflictDetectionStrategyCase()"
  - "com.google.datastore.v1.MutationOrBuilder.getDelete()"
  - "com.google.datastore.v1.MutationOrBuilder.getDeleteOrBuilder()"
  - "com.google.datastore.v1.MutationOrBuilder.getInsert()"
  - "com.google.datastore.v1.MutationOrBuilder.getInsertOrBuilder()"
  - "com.google.datastore.v1.MutationOrBuilder.getOperationCase()"
  - "com.google.datastore.v1.MutationOrBuilder.getUpdate()"
  - "com.google.datastore.v1.MutationOrBuilder.getUpdateOrBuilder()"
  - "com.google.datastore.v1.MutationOrBuilder.getUpdateTime()"
  - "com.google.datastore.v1.MutationOrBuilder.getUpdateTimeOrBuilder()"
  - "com.google.datastore.v1.MutationOrBuilder.getUpsert()"
  - "com.google.datastore.v1.MutationOrBuilder.getUpsertOrBuilder()"
  - "com.google.datastore.v1.MutationOrBuilder.hasBaseVersion()"
  - "com.google.datastore.v1.MutationOrBuilder.hasDelete()"
  - "com.google.datastore.v1.MutationOrBuilder.hasInsert()"
  - "com.google.datastore.v1.MutationOrBuilder.hasUpdate()"
  - "com.google.datastore.v1.MutationOrBuilder.hasUpdateTime()"
  - "com.google.datastore.v1.MutationOrBuilder.hasUpsert()"
  langs:
  - "java"
  name: "MutationOrBuilder"
  nameWithType: "MutationOrBuilder"
  fullName: "com.google.datastore.v1.MutationOrBuilder"
  type: "Interface"
  package: "com.google.datastore.v1"
  syntax:
    content: "public interface MutationOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.datastore.v1.MutationOrBuilder.getBaseVersion()"
  id: "getBaseVersion()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getBaseVersion()"
  nameWithType: "MutationOrBuilder.getBaseVersion()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getBaseVersion()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getBaseVersion*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The version of the entity that this mutation is being applied\n to. If this does not match the current version on the server, the\n mutation conflicts.\n \n\n <code>int64 base_version = 8;</code>"
  syntax:
    content: "public abstract long getBaseVersion()"
    return:
      type: "long"
      description: "The baseVersion."
- uid: "com.google.datastore.v1.MutationOrBuilder.getConflictDetectionStrategyCase()"
  id: "getConflictDetectionStrategyCase()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getConflictDetectionStrategyCase()"
  nameWithType: "MutationOrBuilder.getConflictDetectionStrategyCase()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getConflictDetectionStrategyCase()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getConflictDetectionStrategyCase*"
  type: "Method"
  package: "com.google.datastore.v1"
  syntax:
    content: "public abstract Mutation.ConflictDetectionStrategyCase getConflictDetectionStrategyCase()"
    return:
      type: "com.google.datastore.v1.Mutation.ConflictDetectionStrategyCase"
- uid: "com.google.datastore.v1.MutationOrBuilder.getDelete()"
  id: "getDelete()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getDelete()"
  nameWithType: "MutationOrBuilder.getDelete()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getDelete()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getDelete*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The key of the entity to delete. The entity may or may not already exist.\n Must have a complete key path and must not be reserved/read-only.\n \n\n <code>.google.datastore.v1.Key delete = 7;</code>"
  syntax:
    content: "public abstract Key getDelete()"
    return:
      type: "com.google.datastore.v1.Key"
      description: "The delete."
- uid: "com.google.datastore.v1.MutationOrBuilder.getDeleteOrBuilder()"
  id: "getDeleteOrBuilder()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getDeleteOrBuilder()"
  nameWithType: "MutationOrBuilder.getDeleteOrBuilder()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getDeleteOrBuilder()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getDeleteOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The key of the entity to delete. The entity may or may not already exist.\n Must have a complete key path and must not be reserved/read-only.\n \n\n <code>.google.datastore.v1.Key delete = 7;</code>"
  syntax:
    content: "public abstract KeyOrBuilder getDeleteOrBuilder()"
    return:
      type: "com.google.datastore.v1.KeyOrBuilder"
- uid: "com.google.datastore.v1.MutationOrBuilder.getInsert()"
  id: "getInsert()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getInsert()"
  nameWithType: "MutationOrBuilder.getInsert()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getInsert()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getInsert*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to insert. The entity must not already exist.\n The entity key's final path element may be incomplete.\n \n\n <code>.google.datastore.v1.Entity insert = 4;</code>"
  syntax:
    content: "public abstract Entity getInsert()"
    return:
      type: "com.google.datastore.v1.Entity"
      description: "The insert."
- uid: "com.google.datastore.v1.MutationOrBuilder.getInsertOrBuilder()"
  id: "getInsertOrBuilder()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getInsertOrBuilder()"
  nameWithType: "MutationOrBuilder.getInsertOrBuilder()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getInsertOrBuilder()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getInsertOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to insert. The entity must not already exist.\n The entity key's final path element may be incomplete.\n \n\n <code>.google.datastore.v1.Entity insert = 4;</code>"
  syntax:
    content: "public abstract EntityOrBuilder getInsertOrBuilder()"
    return:
      type: "com.google.datastore.v1.EntityOrBuilder"
- uid: "com.google.datastore.v1.MutationOrBuilder.getOperationCase()"
  id: "getOperationCase()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getOperationCase()"
  nameWithType: "MutationOrBuilder.getOperationCase()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getOperationCase()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getOperationCase*"
  type: "Method"
  package: "com.google.datastore.v1"
  syntax:
    content: "public abstract Mutation.OperationCase getOperationCase()"
    return:
      type: "com.google.datastore.v1.Mutation.OperationCase"
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpdate()"
  id: "getUpdate()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getUpdate()"
  nameWithType: "MutationOrBuilder.getUpdate()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpdate()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getUpdate*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to update. The entity must already exist.\n Must have a complete key path.\n \n\n <code>.google.datastore.v1.Entity update = 5;</code>"
  syntax:
    content: "public abstract Entity getUpdate()"
    return:
      type: "com.google.datastore.v1.Entity"
      description: "The update."
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpdateOrBuilder()"
  id: "getUpdateOrBuilder()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getUpdateOrBuilder()"
  nameWithType: "MutationOrBuilder.getUpdateOrBuilder()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpdateOrBuilder()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getUpdateOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to update. The entity must already exist.\n Must have a complete key path.\n \n\n <code>.google.datastore.v1.Entity update = 5;</code>"
  syntax:
    content: "public abstract EntityOrBuilder getUpdateOrBuilder()"
    return:
      type: "com.google.datastore.v1.EntityOrBuilder"
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpdateTime()"
  id: "getUpdateTime()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getUpdateTime()"
  nameWithType: "MutationOrBuilder.getUpdateTime()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpdateTime()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getUpdateTime*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The update time of the entity that this mutation is being applied\n to. If this does not match the current update time on the server, the\n mutation conflicts.\n \n\n <code>.google.protobuf.Timestamp update_time = 11;</code>"
  syntax:
    content: "public abstract Timestamp getUpdateTime()"
    return:
      type: "com.google.protobuf.Timestamp"
      description: "The updateTime."
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpdateTimeOrBuilder()"
  id: "getUpdateTimeOrBuilder()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getUpdateTimeOrBuilder()"
  nameWithType: "MutationOrBuilder.getUpdateTimeOrBuilder()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpdateTimeOrBuilder()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getUpdateTimeOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The update time of the entity that this mutation is being applied\n to. If this does not match the current update time on the server, the\n mutation conflicts.\n \n\n <code>.google.protobuf.Timestamp update_time = 11;</code>"
  syntax:
    content: "public abstract TimestampOrBuilder getUpdateTimeOrBuilder()"
    return:
      type: "com.google.protobuf.TimestampOrBuilder"
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpsert()"
  id: "getUpsert()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getUpsert()"
  nameWithType: "MutationOrBuilder.getUpsert()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpsert()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getUpsert*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to upsert. The entity may or may not already exist.\n The entity key's final path element may be incomplete.\n \n\n <code>.google.datastore.v1.Entity upsert = 6;</code>"
  syntax:
    content: "public abstract Entity getUpsert()"
    return:
      type: "com.google.datastore.v1.Entity"
      description: "The upsert."
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpsertOrBuilder()"
  id: "getUpsertOrBuilder()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "getUpsertOrBuilder()"
  nameWithType: "MutationOrBuilder.getUpsertOrBuilder()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpsertOrBuilder()"
  overload: "com.google.datastore.v1.MutationOrBuilder.getUpsertOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to upsert. The entity may or may not already exist.\n The entity key's final path element may be incomplete.\n \n\n <code>.google.datastore.v1.Entity upsert = 6;</code>"
  syntax:
    content: "public abstract EntityOrBuilder getUpsertOrBuilder()"
    return:
      type: "com.google.datastore.v1.EntityOrBuilder"
- uid: "com.google.datastore.v1.MutationOrBuilder.hasBaseVersion()"
  id: "hasBaseVersion()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "hasBaseVersion()"
  nameWithType: "MutationOrBuilder.hasBaseVersion()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasBaseVersion()"
  overload: "com.google.datastore.v1.MutationOrBuilder.hasBaseVersion*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The version of the entity that this mutation is being applied\n to. If this does not match the current version on the server, the\n mutation conflicts.\n \n\n <code>int64 base_version = 8;</code>"
  syntax:
    content: "public abstract boolean hasBaseVersion()"
    return:
      type: "boolean"
      description: "Whether the baseVersion field is set."
- uid: "com.google.datastore.v1.MutationOrBuilder.hasDelete()"
  id: "hasDelete()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "hasDelete()"
  nameWithType: "MutationOrBuilder.hasDelete()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasDelete()"
  overload: "com.google.datastore.v1.MutationOrBuilder.hasDelete*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The key of the entity to delete. The entity may or may not already exist.\n Must have a complete key path and must not be reserved/read-only.\n \n\n <code>.google.datastore.v1.Key delete = 7;</code>"
  syntax:
    content: "public abstract boolean hasDelete()"
    return:
      type: "boolean"
      description: "Whether the delete field is set."
- uid: "com.google.datastore.v1.MutationOrBuilder.hasInsert()"
  id: "hasInsert()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "hasInsert()"
  nameWithType: "MutationOrBuilder.hasInsert()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasInsert()"
  overload: "com.google.datastore.v1.MutationOrBuilder.hasInsert*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to insert. The entity must not already exist.\n The entity key's final path element may be incomplete.\n \n\n <code>.google.datastore.v1.Entity insert = 4;</code>"
  syntax:
    content: "public abstract boolean hasInsert()"
    return:
      type: "boolean"
      description: "Whether the insert field is set."
- uid: "com.google.datastore.v1.MutationOrBuilder.hasUpdate()"
  id: "hasUpdate()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "hasUpdate()"
  nameWithType: "MutationOrBuilder.hasUpdate()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasUpdate()"
  overload: "com.google.datastore.v1.MutationOrBuilder.hasUpdate*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to update. The entity must already exist.\n Must have a complete key path.\n \n\n <code>.google.datastore.v1.Entity update = 5;</code>"
  syntax:
    content: "public abstract boolean hasUpdate()"
    return:
      type: "boolean"
      description: "Whether the update field is set."
- uid: "com.google.datastore.v1.MutationOrBuilder.hasUpdateTime()"
  id: "hasUpdateTime()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "hasUpdateTime()"
  nameWithType: "MutationOrBuilder.hasUpdateTime()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasUpdateTime()"
  overload: "com.google.datastore.v1.MutationOrBuilder.hasUpdateTime*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The update time of the entity that this mutation is being applied\n to. If this does not match the current update time on the server, the\n mutation conflicts.\n \n\n <code>.google.protobuf.Timestamp update_time = 11;</code>"
  syntax:
    content: "public abstract boolean hasUpdateTime()"
    return:
      type: "boolean"
      description: "Whether the updateTime field is set."
- uid: "com.google.datastore.v1.MutationOrBuilder.hasUpsert()"
  id: "hasUpsert()"
  parent: "com.google.datastore.v1.MutationOrBuilder"
  langs:
  - "java"
  name: "hasUpsert()"
  nameWithType: "MutationOrBuilder.hasUpsert()"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasUpsert()"
  overload: "com.google.datastore.v1.MutationOrBuilder.hasUpsert*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The entity to upsert. The entity may or may not already exist.\n The entity key's final path element may be incomplete.\n \n\n <code>.google.datastore.v1.Entity upsert = 6;</code>"
  syntax:
    content: "public abstract boolean hasUpsert()"
    return:
      type: "boolean"
      description: "Whether the upsert field is set."
references:
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.MutationOrBuilder.hasInsert*"
  name: "hasInsert"
  nameWithType: "MutationOrBuilder.hasInsert"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasInsert"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.Entity"
  name: "Entity"
  nameWithType: "Entity"
  fullName: "com.google.datastore.v1.Entity"
- uid: "com.google.datastore.v1.MutationOrBuilder.getInsert*"
  name: "getInsert"
  nameWithType: "MutationOrBuilder.getInsert"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getInsert"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.EntityOrBuilder"
  name: "EntityOrBuilder"
  nameWithType: "EntityOrBuilder"
  fullName: "com.google.datastore.v1.EntityOrBuilder"
- uid: "com.google.datastore.v1.MutationOrBuilder.getInsertOrBuilder*"
  name: "getInsertOrBuilder"
  nameWithType: "MutationOrBuilder.getInsertOrBuilder"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getInsertOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.hasUpdate*"
  name: "hasUpdate"
  nameWithType: "MutationOrBuilder.hasUpdate"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasUpdate"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpdate*"
  name: "getUpdate"
  nameWithType: "MutationOrBuilder.getUpdate"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpdate"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpdateOrBuilder*"
  name: "getUpdateOrBuilder"
  nameWithType: "MutationOrBuilder.getUpdateOrBuilder"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpdateOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.hasUpsert*"
  name: "hasUpsert"
  nameWithType: "MutationOrBuilder.hasUpsert"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasUpsert"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpsert*"
  name: "getUpsert"
  nameWithType: "MutationOrBuilder.getUpsert"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpsert"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpsertOrBuilder*"
  name: "getUpsertOrBuilder"
  nameWithType: "MutationOrBuilder.getUpsertOrBuilder"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpsertOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.hasDelete*"
  name: "hasDelete"
  nameWithType: "MutationOrBuilder.hasDelete"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasDelete"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.datastore.v1.Key"
- uid: "com.google.datastore.v1.MutationOrBuilder.getDelete*"
  name: "getDelete"
  nameWithType: "MutationOrBuilder.getDelete"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getDelete"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.KeyOrBuilder"
  name: "KeyOrBuilder"
  nameWithType: "KeyOrBuilder"
  fullName: "com.google.datastore.v1.KeyOrBuilder"
- uid: "com.google.datastore.v1.MutationOrBuilder.getDeleteOrBuilder*"
  name: "getDeleteOrBuilder"
  nameWithType: "MutationOrBuilder.getDeleteOrBuilder"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getDeleteOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.hasBaseVersion*"
  name: "hasBaseVersion"
  nameWithType: "MutationOrBuilder.hasBaseVersion"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasBaseVersion"
  package: "com.google.datastore.v1"
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "com.google.datastore.v1.MutationOrBuilder.getBaseVersion*"
  name: "getBaseVersion"
  nameWithType: "MutationOrBuilder.getBaseVersion"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getBaseVersion"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.MutationOrBuilder.hasUpdateTime*"
  name: "hasUpdateTime"
  nameWithType: "MutationOrBuilder.hasUpdateTime"
  fullName: "com.google.datastore.v1.MutationOrBuilder.hasUpdateTime"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.Timestamp"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Timestamp"
    name: "Timestamp"
    fullName: "com.google.protobuf.Timestamp"
    isExternal: true
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpdateTime*"
  name: "getUpdateTime"
  nameWithType: "MutationOrBuilder.getUpdateTime"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpdateTime"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.TimestampOrBuilder"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.TimestampOrBuilder"
    name: "TimestampOrBuilder"
    fullName: "com.google.protobuf.TimestampOrBuilder"
    isExternal: true
- uid: "com.google.datastore.v1.MutationOrBuilder.getUpdateTimeOrBuilder*"
  name: "getUpdateTimeOrBuilder"
  nameWithType: "MutationOrBuilder.getUpdateTimeOrBuilder"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getUpdateTimeOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.Mutation.OperationCase"
  name: "Mutation.OperationCase"
  nameWithType: "Mutation.OperationCase"
  fullName: "com.google.datastore.v1.Mutation.OperationCase"
- uid: "com.google.datastore.v1.MutationOrBuilder.getOperationCase*"
  name: "getOperationCase"
  nameWithType: "MutationOrBuilder.getOperationCase"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getOperationCase"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.Mutation.ConflictDetectionStrategyCase"
  name: "Mutation.ConflictDetectionStrategyCase"
  nameWithType: "Mutation.ConflictDetectionStrategyCase"
  fullName: "com.google.datastore.v1.Mutation.ConflictDetectionStrategyCase"
- uid: "com.google.datastore.v1.MutationOrBuilder.getConflictDetectionStrategyCase*"
  name: "getConflictDetectionStrategyCase"
  nameWithType: "MutationOrBuilder.getConflictDetectionStrategyCase"
  fullName: "com.google.datastore.v1.MutationOrBuilder.getConflictDetectionStrategyCase"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
