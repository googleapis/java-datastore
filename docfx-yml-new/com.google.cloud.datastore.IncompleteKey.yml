### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.IncompleteKey"
  id: "IncompleteKey"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.IncompleteKey.Builder"
  - "com.google.cloud.datastore.IncompleteKey.getParent()"
  - "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.IncompleteKey)"
  - "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.Key,java.lang.String)"
  - "com.google.cloud.datastore.IncompleteKey.newBuilder(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId(java.lang.String,java.lang.String,java.lang.String)"
  langs:
  - "java"
  name: "IncompleteKey"
  nameWithType: "IncompleteKey"
  fullName: "com.google.cloud.datastore.IncompleteKey"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "An incomplete key (without a name or id). This class is immutable."
  syntax:
    content: "public class IncompleteKey extends BaseKey"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.datastore.BaseKey"
  inheritedMembers:
  - "com.google.cloud.datastore.BaseKey.equals(java.lang.Object)"
  - "com.google.cloud.datastore.BaseKey.getAncestors()"
  - "com.google.cloud.datastore.BaseKey.getDatabaseId()"
  - "com.google.cloud.datastore.BaseKey.getKind()"
  - "com.google.cloud.datastore.BaseKey.getNamespace()"
  - "com.google.cloud.datastore.BaseKey.getProjectId()"
  - "com.google.cloud.datastore.BaseKey.hashCode()"
  - "com.google.cloud.datastore.BaseKey.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.IncompleteKey.IncompleteKey(java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  id: "IncompleteKey(java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  parent: "com.google.cloud.datastore.IncompleteKey"
  langs:
  - "java"
  name: "IncompleteKey(String projectId, String namespace, ImmutableList<PathElement> path)"
  nameWithType: "IncompleteKey.IncompleteKey(String projectId, String namespace, ImmutableList<PathElement> path)"
  fullName: "com.google.cloud.datastore.IncompleteKey.IncompleteKey(String projectId, String namespace, ImmutableList<PathElement> path)"
  overload: "com.google.cloud.datastore.IncompleteKey.IncompleteKey*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " IncompleteKey(String projectId, String namespace, ImmutableList<PathElement> path)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "namespace"
      type: "java.lang.String"
    - id: "path"
      type: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
- uid: "com.google.cloud.datastore.IncompleteKey.IncompleteKey(java.lang.String,java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  id: "IncompleteKey(java.lang.String,java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  parent: "com.google.cloud.datastore.IncompleteKey"
  langs:
  - "java"
  name: "IncompleteKey(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  nameWithType: "IncompleteKey.IncompleteKey(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  fullName: "com.google.cloud.datastore.IncompleteKey.IncompleteKey(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  overload: "com.google.cloud.datastore.IncompleteKey.IncompleteKey*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " IncompleteKey(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "namespace"
      type: "java.lang.String"
    - id: "databaseId"
      type: "java.lang.String"
    - id: "path"
      type: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
- uid: "com.google.cloud.datastore.IncompleteKey.getParent()"
  id: "getParent()"
  parent: "com.google.cloud.datastore.IncompleteKey"
  langs:
  - "java"
  name: "getParent()"
  nameWithType: "IncompleteKey.getParent()"
  fullName: "com.google.cloud.datastore.IncompleteKey.getParent()"
  overload: "com.google.cloud.datastore.IncompleteKey.getParent*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the key's parent."
  syntax:
    content: "public Key getParent()"
    return:
      type: "com.google.cloud.datastore.Key"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.IncompleteKey)"
  id: "newBuilder(com.google.cloud.datastore.IncompleteKey)"
  parent: "com.google.cloud.datastore.IncompleteKey"
  langs:
  - "java"
  name: "newBuilder(IncompleteKey copyFrom)"
  nameWithType: "IncompleteKey.newBuilder(IncompleteKey copyFrom)"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilder(IncompleteKey copyFrom)"
  overload: "com.google.cloud.datastore.IncompleteKey.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static IncompleteKey.Builder newBuilder(IncompleteKey copyFrom)"
    parameters:
    - id: "copyFrom"
      type: "com.google.cloud.datastore.IncompleteKey"
    return:
      type: "com.google.cloud.datastore.IncompleteKey.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.Key,java.lang.String)"
  id: "newBuilder(com.google.cloud.datastore.Key,java.lang.String)"
  parent: "com.google.cloud.datastore.IncompleteKey"
  langs:
  - "java"
  name: "newBuilder(Key parent, String kind)"
  nameWithType: "IncompleteKey.newBuilder(Key parent, String kind)"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilder(Key parent, String kind)"
  overload: "com.google.cloud.datastore.IncompleteKey.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static IncompleteKey.Builder newBuilder(Key parent, String kind)"
    parameters:
    - id: "parent"
      type: "com.google.cloud.datastore.Key"
    - id: "kind"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.IncompleteKey.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilder(java.lang.String,java.lang.String)"
  id: "newBuilder(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.IncompleteKey"
  langs:
  - "java"
  name: "newBuilder(String projectId, String kind)"
  nameWithType: "IncompleteKey.newBuilder(String projectId, String kind)"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilder(String projectId, String kind)"
  overload: "com.google.cloud.datastore.IncompleteKey.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static IncompleteKey.Builder newBuilder(String projectId, String kind)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.IncompleteKey.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId(java.lang.String,java.lang.String,java.lang.String)"
  id: "newBuilderWithDatabaseId(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.IncompleteKey"
  langs:
  - "java"
  name: "newBuilderWithDatabaseId(String projectId, String kind, String databaseId)"
  nameWithType: "IncompleteKey.newBuilderWithDatabaseId(String projectId, String kind, String databaseId)"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId(String projectId, String kind, String databaseId)"
  overload: "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static IncompleteKey.Builder newBuilderWithDatabaseId(String projectId, String kind, String databaseId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
    - id: "databaseId"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.IncompleteKey.Builder"
  javaType: "static method"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
  spec.java:
  - uid: "com.google.common.collect.ImmutableList"
    name: "ImmutableList"
    fullName: "com.google.common.collect.ImmutableList"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.PathElement"
    name: "PathElement"
    fullName: "com.google.cloud.datastore.PathElement"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.IncompleteKey.IncompleteKey*"
  name: "IncompleteKey"
  nameWithType: "IncompleteKey.IncompleteKey"
  fullName: "com.google.cloud.datastore.IncompleteKey.IncompleteKey"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.cloud.datastore.Key"
- uid: "com.google.cloud.datastore.IncompleteKey.getParent*"
  name: "getParent"
  nameWithType: "IncompleteKey.getParent"
  fullName: "com.google.cloud.datastore.IncompleteKey.getParent"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.IncompleteKey.Builder"
  name: "IncompleteKey.Builder"
  nameWithType: "IncompleteKey.Builder"
  fullName: "com.google.cloud.datastore.IncompleteKey.Builder"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilder*"
  name: "newBuilder"
  nameWithType: "IncompleteKey.newBuilder"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilder"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId*"
  name: "newBuilderWithDatabaseId"
  nameWithType: "IncompleteKey.newBuilderWithDatabaseId"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey"
  name: "BaseKey"
  nameWithType: "BaseKey"
  fullName: "com.google.cloud.datastore.BaseKey"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.cloud.datastore.BaseKey.toString()"
  name: "BaseKey.toString()"
  nameWithType: "BaseKey.toString()"
  fullName: "com.google.cloud.datastore.BaseKey.toString()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.datastore.BaseKey.getNamespace()"
  name: "BaseKey.getNamespace()"
  nameWithType: "BaseKey.getNamespace()"
  fullName: "com.google.cloud.datastore.BaseKey.getNamespace()"
- uid: "com.google.cloud.datastore.BaseKey.getAncestors()"
  name: "BaseKey.getAncestors()"
  nameWithType: "BaseKey.getAncestors()"
  fullName: "com.google.cloud.datastore.BaseKey.getAncestors()"
- uid: "com.google.cloud.datastore.BaseKey.getKind()"
  name: "BaseKey.getKind()"
  nameWithType: "BaseKey.getKind()"
  fullName: "com.google.cloud.datastore.BaseKey.getKind()"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.datastore.BaseKey.equals(java.lang.Object)"
  name: "BaseKey.equals(Object)"
  nameWithType: "BaseKey.equals(Object)"
  fullName: "com.google.cloud.datastore.BaseKey.equals(java.lang.Object)"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.BaseKey.getDatabaseId()"
  name: "BaseKey.getDatabaseId()"
  nameWithType: "BaseKey.getDatabaseId()"
  fullName: "com.google.cloud.datastore.BaseKey.getDatabaseId()"
- uid: "com.google.cloud.datastore.BaseKey.hashCode()"
  name: "BaseKey.hashCode()"
  nameWithType: "BaseKey.hashCode()"
  fullName: "com.google.cloud.datastore.BaseKey.hashCode()"
- uid: "com.google.cloud.datastore.BaseKey.getProjectId()"
  name: "BaseKey.getProjectId()"
  nameWithType: "BaseKey.getProjectId()"
  fullName: "com.google.cloud.datastore.BaseKey.getProjectId()"
- uid: "com.google.cloud.datastore.PathElement"
  name: "PathElement"
  nameWithType: "PathElement"
  fullName: "com.google.cloud.datastore.PathElement"
- uid: "com.google.common.collect.ImmutableList"
  name: "ImmutableList"
  nameWithType: "ImmutableList"
  fullName: "com.google.common.collect.ImmutableList"
