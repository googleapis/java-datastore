### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  id: "RunAggregationQueryResponseOrBuilder"
  parent: "com.google.datastore.v1"
  children:
  - "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatch()"
  - "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatchOrBuilder()"
  - "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQuery()"
  - "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQueryOrBuilder()"
  - "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getTransaction()"
  - "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasBatch()"
  - "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasQuery()"
  langs:
  - "java"
  name: "RunAggregationQueryResponseOrBuilder"
  nameWithType: "RunAggregationQueryResponseOrBuilder"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  type: "Interface"
  package: "com.google.datastore.v1"
  syntax:
    content: "public interface RunAggregationQueryResponseOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatch()"
  id: "getBatch()"
  parent: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  langs:
  - "java"
  name: "getBatch()"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getBatch()"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatch()"
  overload: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatch*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n A batch of aggregation results. Always present.\n \n\n <code>.google.datastore.v1.AggregationResultBatch batch = 1;</code>"
  syntax:
    content: "public abstract AggregationResultBatch getBatch()"
    return:
      type: "com.google.datastore.v1.AggregationResultBatch"
      description: "The batch."
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatchOrBuilder()"
  id: "getBatchOrBuilder()"
  parent: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  langs:
  - "java"
  name: "getBatchOrBuilder()"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getBatchOrBuilder()"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatchOrBuilder()"
  overload: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatchOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n A batch of aggregation results. Always present.\n \n\n <code>.google.datastore.v1.AggregationResultBatch batch = 1;</code>"
  syntax:
    content: "public abstract AggregationResultBatchOrBuilder getBatchOrBuilder()"
    return:
      type: "com.google.datastore.v1.AggregationResultBatchOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQuery()"
  id: "getQuery()"
  parent: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  langs:
  - "java"
  name: "getQuery()"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getQuery()"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQuery()"
  overload: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQuery*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The parsed form of the <code>GqlQuery</code> from the request, if it was set.\n \n\n <code>.google.datastore.v1.AggregationQuery query = 2;</code>"
  syntax:
    content: "public abstract AggregationQuery getQuery()"
    return:
      type: "com.google.datastore.v1.AggregationQuery"
      description: "The query."
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQueryOrBuilder()"
  id: "getQueryOrBuilder()"
  parent: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  langs:
  - "java"
  name: "getQueryOrBuilder()"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getQueryOrBuilder()"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQueryOrBuilder()"
  overload: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQueryOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The parsed form of the <code>GqlQuery</code> from the request, if it was set.\n \n\n <code>.google.datastore.v1.AggregationQuery query = 2;</code>"
  syntax:
    content: "public abstract AggregationQueryOrBuilder getQueryOrBuilder()"
    return:
      type: "com.google.datastore.v1.AggregationQueryOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getTransaction()"
  id: "getTransaction()"
  parent: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  langs:
  - "java"
  name: "getTransaction()"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getTransaction()"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getTransaction()"
  overload: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getTransaction*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The identifier of the transaction that was started as part of this\n RunAggregationQuery request.\n\n Set only when\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">ReadOptions.new_transaction</xref>\n was set in\n <xref uid=\"\" data-throw-if-not-resolved=\"false\">RunAggregationQueryRequest.read_options</xref>.\n \n\n <code>bytes transaction = 5;</code>"
  syntax:
    content: "public abstract ByteString getTransaction()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The transaction."
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasBatch()"
  id: "hasBatch()"
  parent: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  langs:
  - "java"
  name: "hasBatch()"
  nameWithType: "RunAggregationQueryResponseOrBuilder.hasBatch()"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasBatch()"
  overload: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasBatch*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n A batch of aggregation results. Always present.\n \n\n <code>.google.datastore.v1.AggregationResultBatch batch = 1;</code>"
  syntax:
    content: "public abstract boolean hasBatch()"
    return:
      type: "boolean"
      description: "Whether the batch field is set."
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasQuery()"
  id: "hasQuery()"
  parent: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder"
  langs:
  - "java"
  name: "hasQuery()"
  nameWithType: "RunAggregationQueryResponseOrBuilder.hasQuery()"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasQuery()"
  overload: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasQuery*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The parsed form of the <code>GqlQuery</code> from the request, if it was set.\n \n\n <code>.google.datastore.v1.AggregationQuery query = 2;</code>"
  syntax:
    content: "public abstract boolean hasQuery()"
    return:
      type: "boolean"
      description: "Whether the query field is set."
references:
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasBatch*"
  name: "hasBatch"
  nameWithType: "RunAggregationQueryResponseOrBuilder.hasBatch"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasBatch"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationResultBatch"
  name: "AggregationResultBatch"
  nameWithType: "AggregationResultBatch"
  fullName: "com.google.datastore.v1.AggregationResultBatch"
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatch*"
  name: "getBatch"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getBatch"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatch"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationResultBatchOrBuilder"
  name: "AggregationResultBatchOrBuilder"
  nameWithType: "AggregationResultBatchOrBuilder"
  fullName: "com.google.datastore.v1.AggregationResultBatchOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatchOrBuilder*"
  name: "getBatchOrBuilder"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getBatchOrBuilder"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getBatchOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasQuery*"
  name: "hasQuery"
  nameWithType: "RunAggregationQueryResponseOrBuilder.hasQuery"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.hasQuery"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationQuery"
  name: "AggregationQuery"
  nameWithType: "AggregationQuery"
  fullName: "com.google.datastore.v1.AggregationQuery"
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQuery*"
  name: "getQuery"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getQuery"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQuery"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder"
  name: "AggregationQueryOrBuilder"
  nameWithType: "AggregationQueryOrBuilder"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQueryOrBuilder*"
  name: "getQueryOrBuilder"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getQueryOrBuilder"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getQueryOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.ByteString"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
    isExternal: true
- uid: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getTransaction*"
  name: "getTransaction"
  nameWithType: "RunAggregationQueryResponseOrBuilder.getTransaction"
  fullName: "com.google.datastore.v1.RunAggregationQueryResponseOrBuilder.getTransaction"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
