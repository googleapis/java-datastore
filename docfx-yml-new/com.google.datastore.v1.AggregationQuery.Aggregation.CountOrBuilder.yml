### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder"
  id: "CountOrBuilder"
  parent: "com.google.datastore.v1"
  children:
  - "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpTo()"
  - "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpToOrBuilder()"
  - "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.hasUpTo()"
  langs:
  - "java"
  name: "AggregationQuery.Aggregation.CountOrBuilder"
  nameWithType: "AggregationQuery.Aggregation.CountOrBuilder"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder"
  type: "Interface"
  package: "com.google.datastore.v1"
  syntax:
    content: "public static interface AggregationQuery.Aggregation.CountOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpTo()"
  id: "getUpTo()"
  parent: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder"
  langs:
  - "java"
  name: "getUpTo()"
  nameWithType: "AggregationQuery.Aggregation.CountOrBuilder.getUpTo()"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpTo()"
  overload: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpTo*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Optional. Optional constraint on the maximum number of entities to\n count.\n\n This provides a way to set an upper bound on the number of entities\n to scan, limiting latency, and cost.\n\n Unspecified is interpreted as no bound.\n\n If a zero value is provided, a count result of zero should always be\n expected.\n\n High-Level Example:\n\n `<code><code>\n AGGREGATE COUNT_UP_TO(1000) OVER ( SELECT * FROM k );\n </code></code>`\n\n Requires:\n\n * Must be non-negative when present.\n \n\n <code>.google.protobuf.Int64Value up_to = 1 [(.google.api.field_behavior) = OPTIONAL];\n </code>"
  syntax:
    content: "public abstract Int64Value getUpTo()"
    return:
      type: "com.google.protobuf.Int64Value"
      description: "The upTo."
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpToOrBuilder()"
  id: "getUpToOrBuilder()"
  parent: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder"
  langs:
  - "java"
  name: "getUpToOrBuilder()"
  nameWithType: "AggregationQuery.Aggregation.CountOrBuilder.getUpToOrBuilder()"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpToOrBuilder()"
  overload: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpToOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Optional. Optional constraint on the maximum number of entities to\n count.\n\n This provides a way to set an upper bound on the number of entities\n to scan, limiting latency, and cost.\n\n Unspecified is interpreted as no bound.\n\n If a zero value is provided, a count result of zero should always be\n expected.\n\n High-Level Example:\n\n `<code><code>\n AGGREGATE COUNT_UP_TO(1000) OVER ( SELECT * FROM k );\n </code></code>`\n\n Requires:\n\n * Must be non-negative when present.\n \n\n <code>.google.protobuf.Int64Value up_to = 1 [(.google.api.field_behavior) = OPTIONAL];\n </code>"
  syntax:
    content: "public abstract Int64ValueOrBuilder getUpToOrBuilder()"
    return:
      type: "com.google.protobuf.Int64ValueOrBuilder"
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.hasUpTo()"
  id: "hasUpTo()"
  parent: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder"
  langs:
  - "java"
  name: "hasUpTo()"
  nameWithType: "AggregationQuery.Aggregation.CountOrBuilder.hasUpTo()"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.hasUpTo()"
  overload: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.hasUpTo*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Optional. Optional constraint on the maximum number of entities to\n count.\n\n This provides a way to set an upper bound on the number of entities\n to scan, limiting latency, and cost.\n\n Unspecified is interpreted as no bound.\n\n If a zero value is provided, a count result of zero should always be\n expected.\n\n High-Level Example:\n\n `<code><code>\n AGGREGATE COUNT_UP_TO(1000) OVER ( SELECT * FROM k );\n </code></code>`\n\n Requires:\n\n * Must be non-negative when present.\n \n\n <code>.google.protobuf.Int64Value up_to = 1 [(.google.api.field_behavior) = OPTIONAL];\n </code>"
  syntax:
    content: "public abstract boolean hasUpTo()"
    return:
      type: "boolean"
      description: "Whether the upTo field is set."
references:
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.hasUpTo*"
  name: "hasUpTo"
  nameWithType: "AggregationQuery.Aggregation.CountOrBuilder.hasUpTo"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.hasUpTo"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.Int64Value"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Int64Value"
    name: "Int64Value"
    fullName: "com.google.protobuf.Int64Value"
    isExternal: true
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpTo*"
  name: "getUpTo"
  nameWithType: "AggregationQuery.Aggregation.CountOrBuilder.getUpTo"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpTo"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.Int64ValueOrBuilder"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Int64ValueOrBuilder"
    name: "Int64ValueOrBuilder"
    fullName: "com.google.protobuf.Int64ValueOrBuilder"
    isExternal: true
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpToOrBuilder*"
  name: "getUpToOrBuilder"
  nameWithType: "AggregationQuery.Aggregation.CountOrBuilder.getUpToOrBuilder"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation.CountOrBuilder.getUpToOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
