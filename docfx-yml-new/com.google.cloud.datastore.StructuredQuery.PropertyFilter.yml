### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  id: "PropertyFilter"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,boolean)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,com.google.cloud.Timestamp)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,com.google.cloud.datastore.Blob)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,com.google.cloud.datastore.Value<?>)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,double)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,long)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.equals(java.lang.Object)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,boolean)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,com.google.cloud.Timestamp)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,com.google.cloud.datastore.Blob)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,com.google.cloud.datastore.Value<?>)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,double)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,long)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,boolean)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,com.google.cloud.Timestamp)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,com.google.cloud.datastore.Blob)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,com.google.cloud.datastore.Value<?>)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,double)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,long)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hasAncestor(com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hashCode()"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.in(java.lang.String,com.google.cloud.datastore.ListValue)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.isNull(java.lang.String)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,boolean)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,com.google.cloud.Timestamp)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,com.google.cloud.datastore.Blob)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,com.google.cloud.datastore.Value<?>)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,double)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,long)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,boolean)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,com.google.cloud.Timestamp)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,com.google.cloud.datastore.Blob)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,com.google.cloud.datastore.Value<?>)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,double)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,long)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,boolean)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,com.google.cloud.Timestamp)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,com.google.cloud.datastore.Blob)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,com.google.cloud.datastore.Value<?>)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,double)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,long)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.not_in(java.lang.String,com.google.cloud.datastore.ListValue)"
  - "com.google.cloud.datastore.StructuredQuery.PropertyFilter.toString()"
  langs:
  - "java"
  name: "StructuredQuery.PropertyFilter"
  nameWithType: "StructuredQuery.PropertyFilter"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "A class representing a filter based on a single property or ancestor."
  syntax:
    content: "public static final class StructuredQuery.PropertyFilter extends StructuredQuery.Filter"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.datastore.StructuredQuery.Filter"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.PropertyFilter(java.lang.String,com.google.cloud.datastore.StructuredQuery.PropertyFilter.Operator,com.google.cloud.datastore.Value<?>)"
  id: "PropertyFilter(java.lang.String,com.google.cloud.datastore.StructuredQuery.PropertyFilter.Operator,com.google.cloud.datastore.Value<?>)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "PropertyFilter(String property, StructuredQuery.PropertyFilter.Operator operator, Value<?> value)"
  nameWithType: "StructuredQuery.PropertyFilter.PropertyFilter(String property, StructuredQuery.PropertyFilter.Operator operator, Value<?> value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.PropertyFilter(String property, StructuredQuery.PropertyFilter.Operator operator, Value<?> value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.PropertyFilter*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: "private PropertyFilter(String property, StructuredQuery.PropertyFilter.Operator operator, Value<?> value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "operator"
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.Operator"
    - id: "value"
      type: "com.google.cloud.datastore.Value<?>"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,boolean)"
  id: "eq(java.lang.String,boolean)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "eq(String property, boolean value)"
  nameWithType: "StructuredQuery.PropertyFilter.eq(String property, boolean value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(String property, boolean value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter eq(String property, boolean value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "boolean"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,com.google.cloud.Timestamp)"
  id: "eq(java.lang.String,com.google.cloud.Timestamp)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "eq(String property, Timestamp value)"
  nameWithType: "StructuredQuery.PropertyFilter.eq(String property, Timestamp value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(String property, Timestamp value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter eq(String property, Timestamp value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.Timestamp"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,com.google.cloud.datastore.Blob)"
  id: "eq(java.lang.String,com.google.cloud.datastore.Blob)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "eq(String property, Blob value)"
  nameWithType: "StructuredQuery.PropertyFilter.eq(String property, Blob value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(String property, Blob value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter eq(String property, Blob value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Blob"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,com.google.cloud.datastore.Key)"
  id: "eq(java.lang.String,com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "eq(String property, Key value)"
  nameWithType: "StructuredQuery.PropertyFilter.eq(String property, Key value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(String property, Key value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter eq(String property, Key value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,com.google.cloud.datastore.Value<?>)"
  id: "eq(java.lang.String,com.google.cloud.datastore.Value<?>)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "eq(String property, Value<?> value)"
  nameWithType: "StructuredQuery.PropertyFilter.eq(String property, Value<?> value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(String property, Value<?> value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter eq(String property, Value<?> value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Value<?>"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,double)"
  id: "eq(java.lang.String,double)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "eq(String property, double value)"
  nameWithType: "StructuredQuery.PropertyFilter.eq(String property, double value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(String property, double value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter eq(String property, double value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "double"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,java.lang.String)"
  id: "eq(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "eq(String property, String value)"
  nameWithType: "StructuredQuery.PropertyFilter.eq(String property, String value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(String property, String value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter eq(String property, String value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(java.lang.String,long)"
  id: "eq(java.lang.String,long)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "eq(String property, long value)"
  nameWithType: "StructuredQuery.PropertyFilter.eq(String property, long value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq(String property, long value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter eq(String property, long value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "long"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "StructuredQuery.PropertyFilter.equals(Object obj)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.equals(Object obj)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,boolean)"
  id: "ge(java.lang.String,boolean)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "ge(String property, boolean value)"
  nameWithType: "StructuredQuery.PropertyFilter.ge(String property, boolean value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(String property, boolean value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter ge(String property, boolean value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "boolean"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,com.google.cloud.Timestamp)"
  id: "ge(java.lang.String,com.google.cloud.Timestamp)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "ge(String property, Timestamp value)"
  nameWithType: "StructuredQuery.PropertyFilter.ge(String property, Timestamp value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(String property, Timestamp value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter ge(String property, Timestamp value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.Timestamp"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,com.google.cloud.datastore.Blob)"
  id: "ge(java.lang.String,com.google.cloud.datastore.Blob)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "ge(String property, Blob value)"
  nameWithType: "StructuredQuery.PropertyFilter.ge(String property, Blob value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(String property, Blob value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter ge(String property, Blob value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Blob"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,com.google.cloud.datastore.Key)"
  id: "ge(java.lang.String,com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "ge(String property, Key value)"
  nameWithType: "StructuredQuery.PropertyFilter.ge(String property, Key value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(String property, Key value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter ge(String property, Key value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,com.google.cloud.datastore.Value<?>)"
  id: "ge(java.lang.String,com.google.cloud.datastore.Value<?>)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "ge(String property, Value<?> value)"
  nameWithType: "StructuredQuery.PropertyFilter.ge(String property, Value<?> value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(String property, Value<?> value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter ge(String property, Value<?> value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Value<?>"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,double)"
  id: "ge(java.lang.String,double)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "ge(String property, double value)"
  nameWithType: "StructuredQuery.PropertyFilter.ge(String property, double value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(String property, double value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter ge(String property, double value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "double"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,java.lang.String)"
  id: "ge(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "ge(String property, String value)"
  nameWithType: "StructuredQuery.PropertyFilter.ge(String property, String value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(String property, String value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter ge(String property, String value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(java.lang.String,long)"
  id: "ge(java.lang.String,long)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "ge(String property, long value)"
  nameWithType: "StructuredQuery.PropertyFilter.ge(String property, long value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge(String property, long value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter ge(String property, long value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "long"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,boolean)"
  id: "gt(java.lang.String,boolean)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "gt(String property, boolean value)"
  nameWithType: "StructuredQuery.PropertyFilter.gt(String property, boolean value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(String property, boolean value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter gt(String property, boolean value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "boolean"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,com.google.cloud.Timestamp)"
  id: "gt(java.lang.String,com.google.cloud.Timestamp)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "gt(String property, Timestamp value)"
  nameWithType: "StructuredQuery.PropertyFilter.gt(String property, Timestamp value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(String property, Timestamp value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter gt(String property, Timestamp value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.Timestamp"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,com.google.cloud.datastore.Blob)"
  id: "gt(java.lang.String,com.google.cloud.datastore.Blob)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "gt(String property, Blob value)"
  nameWithType: "StructuredQuery.PropertyFilter.gt(String property, Blob value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(String property, Blob value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter gt(String property, Blob value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Blob"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,com.google.cloud.datastore.Key)"
  id: "gt(java.lang.String,com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "gt(String property, Key value)"
  nameWithType: "StructuredQuery.PropertyFilter.gt(String property, Key value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(String property, Key value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter gt(String property, Key value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,com.google.cloud.datastore.Value<?>)"
  id: "gt(java.lang.String,com.google.cloud.datastore.Value<?>)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "gt(String property, Value<?> value)"
  nameWithType: "StructuredQuery.PropertyFilter.gt(String property, Value<?> value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(String property, Value<?> value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter gt(String property, Value<?> value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Value<?>"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,double)"
  id: "gt(java.lang.String,double)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "gt(String property, double value)"
  nameWithType: "StructuredQuery.PropertyFilter.gt(String property, double value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(String property, double value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter gt(String property, double value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "double"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,java.lang.String)"
  id: "gt(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "gt(String property, String value)"
  nameWithType: "StructuredQuery.PropertyFilter.gt(String property, String value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(String property, String value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter gt(String property, String value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(java.lang.String,long)"
  id: "gt(java.lang.String,long)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "gt(String property, long value)"
  nameWithType: "StructuredQuery.PropertyFilter.gt(String property, long value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt(String property, long value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter gt(String property, long value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "long"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hasAncestor(com.google.cloud.datastore.Key)"
  id: "hasAncestor(com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "hasAncestor(Key key)"
  nameWithType: "StructuredQuery.PropertyFilter.hasAncestor(Key key)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hasAncestor(Key key)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hasAncestor*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter hasAncestor(Key key)"
    parameters:
    - id: "key"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "StructuredQuery.PropertyFilter.hashCode()"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hashCode()"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.in(java.lang.String,com.google.cloud.datastore.ListValue)"
  id: "in(java.lang.String,com.google.cloud.datastore.ListValue)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "in(String property, ListValue value)"
  nameWithType: "StructuredQuery.PropertyFilter.in(String property, ListValue value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.in(String property, ListValue value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.in*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter in(String property, ListValue value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.ListValue"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.isNull(java.lang.String)"
  id: "isNull(java.lang.String)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "isNull(String property)"
  nameWithType: "StructuredQuery.PropertyFilter.isNull(String property)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.isNull(String property)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.isNull*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter isNull(String property)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,boolean)"
  id: "le(java.lang.String,boolean)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "le(String property, boolean value)"
  nameWithType: "StructuredQuery.PropertyFilter.le(String property, boolean value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(String property, boolean value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter le(String property, boolean value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "boolean"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,com.google.cloud.Timestamp)"
  id: "le(java.lang.String,com.google.cloud.Timestamp)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "le(String property, Timestamp value)"
  nameWithType: "StructuredQuery.PropertyFilter.le(String property, Timestamp value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(String property, Timestamp value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter le(String property, Timestamp value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.Timestamp"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,com.google.cloud.datastore.Blob)"
  id: "le(java.lang.String,com.google.cloud.datastore.Blob)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "le(String property, Blob value)"
  nameWithType: "StructuredQuery.PropertyFilter.le(String property, Blob value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(String property, Blob value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter le(String property, Blob value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Blob"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,com.google.cloud.datastore.Key)"
  id: "le(java.lang.String,com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "le(String property, Key value)"
  nameWithType: "StructuredQuery.PropertyFilter.le(String property, Key value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(String property, Key value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter le(String property, Key value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,com.google.cloud.datastore.Value<?>)"
  id: "le(java.lang.String,com.google.cloud.datastore.Value<?>)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "le(String property, Value<?> value)"
  nameWithType: "StructuredQuery.PropertyFilter.le(String property, Value<?> value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(String property, Value<?> value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter le(String property, Value<?> value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Value<?>"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,double)"
  id: "le(java.lang.String,double)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "le(String property, double value)"
  nameWithType: "StructuredQuery.PropertyFilter.le(String property, double value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(String property, double value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter le(String property, double value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "double"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,java.lang.String)"
  id: "le(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "le(String property, String value)"
  nameWithType: "StructuredQuery.PropertyFilter.le(String property, String value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(String property, String value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter le(String property, String value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(java.lang.String,long)"
  id: "le(java.lang.String,long)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "le(String property, long value)"
  nameWithType: "StructuredQuery.PropertyFilter.le(String property, long value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le(String property, long value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter le(String property, long value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "long"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,boolean)"
  id: "lt(java.lang.String,boolean)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "lt(String property, boolean value)"
  nameWithType: "StructuredQuery.PropertyFilter.lt(String property, boolean value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(String property, boolean value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter lt(String property, boolean value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "boolean"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,com.google.cloud.Timestamp)"
  id: "lt(java.lang.String,com.google.cloud.Timestamp)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "lt(String property, Timestamp value)"
  nameWithType: "StructuredQuery.PropertyFilter.lt(String property, Timestamp value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(String property, Timestamp value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter lt(String property, Timestamp value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.Timestamp"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,com.google.cloud.datastore.Blob)"
  id: "lt(java.lang.String,com.google.cloud.datastore.Blob)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "lt(String property, Blob value)"
  nameWithType: "StructuredQuery.PropertyFilter.lt(String property, Blob value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(String property, Blob value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter lt(String property, Blob value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Blob"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,com.google.cloud.datastore.Key)"
  id: "lt(java.lang.String,com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "lt(String property, Key value)"
  nameWithType: "StructuredQuery.PropertyFilter.lt(String property, Key value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(String property, Key value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter lt(String property, Key value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,com.google.cloud.datastore.Value<?>)"
  id: "lt(java.lang.String,com.google.cloud.datastore.Value<?>)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "lt(String property, Value<?> value)"
  nameWithType: "StructuredQuery.PropertyFilter.lt(String property, Value<?> value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(String property, Value<?> value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter lt(String property, Value<?> value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Value<?>"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,double)"
  id: "lt(java.lang.String,double)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "lt(String property, double value)"
  nameWithType: "StructuredQuery.PropertyFilter.lt(String property, double value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(String property, double value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter lt(String property, double value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "double"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,java.lang.String)"
  id: "lt(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "lt(String property, String value)"
  nameWithType: "StructuredQuery.PropertyFilter.lt(String property, String value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(String property, String value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter lt(String property, String value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(java.lang.String,long)"
  id: "lt(java.lang.String,long)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "lt(String property, long value)"
  nameWithType: "StructuredQuery.PropertyFilter.lt(String property, long value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt(String property, long value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter lt(String property, long value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "long"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,boolean)"
  id: "neq(java.lang.String,boolean)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "neq(String property, boolean value)"
  nameWithType: "StructuredQuery.PropertyFilter.neq(String property, boolean value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(String property, boolean value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter neq(String property, boolean value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "boolean"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,com.google.cloud.Timestamp)"
  id: "neq(java.lang.String,com.google.cloud.Timestamp)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "neq(String property, Timestamp value)"
  nameWithType: "StructuredQuery.PropertyFilter.neq(String property, Timestamp value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(String property, Timestamp value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter neq(String property, Timestamp value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.Timestamp"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,com.google.cloud.datastore.Blob)"
  id: "neq(java.lang.String,com.google.cloud.datastore.Blob)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "neq(String property, Blob value)"
  nameWithType: "StructuredQuery.PropertyFilter.neq(String property, Blob value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(String property, Blob value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter neq(String property, Blob value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Blob"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,com.google.cloud.datastore.Key)"
  id: "neq(java.lang.String,com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "neq(String property, Key value)"
  nameWithType: "StructuredQuery.PropertyFilter.neq(String property, Key value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(String property, Key value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter neq(String property, Key value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,com.google.cloud.datastore.Value<?>)"
  id: "neq(java.lang.String,com.google.cloud.datastore.Value<?>)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "neq(String property, Value<?> value)"
  nameWithType: "StructuredQuery.PropertyFilter.neq(String property, Value<?> value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(String property, Value<?> value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter neq(String property, Value<?> value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.Value<?>"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,double)"
  id: "neq(java.lang.String,double)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "neq(String property, double value)"
  nameWithType: "StructuredQuery.PropertyFilter.neq(String property, double value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(String property, double value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter neq(String property, double value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "double"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,java.lang.String)"
  id: "neq(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "neq(String property, String value)"
  nameWithType: "StructuredQuery.PropertyFilter.neq(String property, String value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(String property, String value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter neq(String property, String value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(java.lang.String,long)"
  id: "neq(java.lang.String,long)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "neq(String property, long value)"
  nameWithType: "StructuredQuery.PropertyFilter.neq(String property, long value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq(String property, long value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter neq(String property, long value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "long"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.not_in(java.lang.String,com.google.cloud.datastore.ListValue)"
  id: "not_in(java.lang.String,com.google.cloud.datastore.ListValue)"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "not_in(String property, ListValue value)"
  nameWithType: "StructuredQuery.PropertyFilter.not_in(String property, ListValue value)"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.not_in(String property, ListValue value)"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.not_in*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static StructuredQuery.PropertyFilter not_in(String property, ListValue value)"
    parameters:
    - id: "property"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.datastore.ListValue"
    return:
      type: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  javaType: "static method"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.toString()"
  id: "toString()"
  parent: "com.google.cloud.datastore.StructuredQuery.PropertyFilter"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "StructuredQuery.PropertyFilter.toString()"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.toString()"
  overload: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.Operator"
  spec.java:
  - uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.Operator"
    name: "Operator"
    fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.Operator"
    isExternal: false
- uid: "com.google.cloud.datastore.Value<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.PropertyFilter*"
  name: "PropertyFilter"
  nameWithType: "StructuredQuery.PropertyFilter.PropertyFilter"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.PropertyFilter"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.toString*"
  name: "toString"
  nameWithType: "StructuredQuery.PropertyFilter.toString"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.toString"
  package: "com.google.cloud.datastore"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hashCode*"
  name: "hashCode"
  nameWithType: "StructuredQuery.PropertyFilter.hashCode"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hashCode"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.equals*"
  name: "equals"
  nameWithType: "StructuredQuery.PropertyFilter.equals"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.equals"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt*"
  name: "lt"
  nameWithType: "StructuredQuery.PropertyFilter.lt"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.lt"
  package: "com.google.cloud.datastore"
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "double"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
- uid: "com.google.cloud.Timestamp"
  spec.java:
  - uid: "com.google.cloud.Timestamp"
    name: "Timestamp"
    fullName: "com.google.cloud.Timestamp"
    isExternal: false
- uid: "com.google.cloud.datastore.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.cloud.datastore.Key"
- uid: "com.google.cloud.datastore.Blob"
  name: "Blob"
  nameWithType: "Blob"
  fullName: "com.google.cloud.datastore.Blob"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le*"
  name: "le"
  nameWithType: "StructuredQuery.PropertyFilter.le"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.le"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt*"
  name: "gt"
  nameWithType: "StructuredQuery.PropertyFilter.gt"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.gt"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge*"
  name: "ge"
  nameWithType: "StructuredQuery.PropertyFilter.ge"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.ge"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq*"
  name: "eq"
  nameWithType: "StructuredQuery.PropertyFilter.eq"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.eq"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq*"
  name: "neq"
  nameWithType: "StructuredQuery.PropertyFilter.neq"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.neq"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.ListValue"
  name: "ListValue"
  nameWithType: "ListValue"
  fullName: "com.google.cloud.datastore.ListValue"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.in*"
  name: "in"
  nameWithType: "StructuredQuery.PropertyFilter.in"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.in"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.not_in*"
  name: "not_in"
  nameWithType: "StructuredQuery.PropertyFilter.not_in"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.not_in"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hasAncestor*"
  name: "hasAncestor"
  nameWithType: "StructuredQuery.PropertyFilter.hasAncestor"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.hasAncestor"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.isNull*"
  name: "isNull"
  nameWithType: "StructuredQuery.PropertyFilter.isNull"
  fullName: "com.google.cloud.datastore.StructuredQuery.PropertyFilter.isNull"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.StructuredQuery.Filter"
  name: "StructuredQuery.Filter"
  nameWithType: "StructuredQuery.Filter"
  fullName: "com.google.cloud.datastore.StructuredQuery.Filter"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.datastore.Value"
  name: "Value"
  nameWithType: "Value"
  fullName: "com.google.cloud.datastore.Value"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
