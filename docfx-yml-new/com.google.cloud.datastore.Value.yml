### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.Value"
  id: "Value"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.Value.equals(java.lang.Object)"
  - "com.google.cloud.datastore.Value.excludeFromIndexes()"
  - "com.google.cloud.datastore.Value.fromPb(com.google.datastore.v1.Value)"
  - "com.google.cloud.datastore.Value.get()"
  - "com.google.cloud.datastore.Value.getType()"
  - "com.google.cloud.datastore.Value.hashCode()"
  - "com.google.cloud.datastore.Value.toBuilder()"
  - "com.google.cloud.datastore.Value.toString()"
  langs:
  - "java"
  name: "Value<V>"
  nameWithType: "Value<V>"
  fullName: "com.google.cloud.datastore.Value<V>"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "Base class for all Google Cloud Datastore value types. All values must be associated with a\n non-null content (except <xref uid=\"com.google.cloud.datastore.NullValue\" data-throw-if-not-resolved=\"false\">NullValue</xref>). All values are immutable (including their content).\n To edit (a copy) use <xref uid=\"com.google.cloud.datastore.Value.toBuilder()\" data-throw-if-not-resolved=\"false\">#toBuilder()</xref>. Unsupported value (deprecated or unrecognized) would\n be represented by <xref uid=\"com.google.cloud.datastore.RawValue\" data-throw-if-not-resolved=\"false\">RawValue</xref>."
  syntax:
    content: "public abstract class Value<V> implements Serializable"
    typeParameters:
    - id: "V"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.Value.<P,B>Value(com.google.cloud.datastore.ValueBuilder<V,P,B>)"
  id: "<P,B>Value(com.google.cloud.datastore.ValueBuilder<V,P,B>)"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "<P,B>Value(ValueBuilder<V,P,B> builder)"
  nameWithType: "Value<V>.<P,B>Value(ValueBuilder<V,P,B> builder)"
  fullName: "com.google.cloud.datastore.Value<V>.<P,B>Value(ValueBuilder<V,P,B> builder)"
  overload: "com.google.cloud.datastore.Value.Value*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " <P,B>Value(ValueBuilder<V,P,B> builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.datastore.ValueBuilder<V,P,B>"
- uid: "com.google.cloud.datastore.Value.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "Value<V>.equals(Object obj)"
  fullName: "com.google.cloud.datastore.Value<V>.equals(Object obj)"
  overload: "com.google.cloud.datastore.Value.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.Value.excludeFromIndexes()"
  id: "excludeFromIndexes()"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "excludeFromIndexes()"
  nameWithType: "Value<V>.excludeFromIndexes()"
  fullName: "com.google.cloud.datastore.Value<V>.excludeFromIndexes()"
  overload: "com.google.cloud.datastore.Value.excludeFromIndexes*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns whether this value should be excluded from indexes."
  syntax:
    content: "public final boolean excludeFromIndexes()"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.Value.fromPb(com.google.datastore.v1.Value)"
  id: "fromPb(com.google.datastore.v1.Value)"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "fromPb(Value proto)"
  nameWithType: "Value<V>.fromPb(Value proto)"
  fullName: "com.google.cloud.datastore.Value<V>.fromPb(Value proto)"
  overload: "com.google.cloud.datastore.Value.fromPb*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Value<?> fromPb(Value proto)"
    parameters:
    - id: "proto"
      type: "com.google.datastore.v1.Value"
    return:
      type: "com.google.cloud.datastore.Value<?>"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Value.get()"
  id: "get()"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "get()"
  nameWithType: "Value<V>.get()"
  fullName: "com.google.cloud.datastore.Value<V>.get()"
  overload: "com.google.cloud.datastore.Value.get*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public final V get()"
    return:
      type: "V"
- uid: "com.google.cloud.datastore.Value.getType()"
  id: "getType()"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "Value<V>.getType()"
  fullName: "com.google.cloud.datastore.Value<V>.getType()"
  overload: "com.google.cloud.datastore.Value.getType*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the type of this value."
  syntax:
    content: "public final ValueType getType()"
    return:
      type: "com.google.cloud.datastore.ValueType"
- uid: "com.google.cloud.datastore.Value.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "Value<V>.hashCode()"
  fullName: "com.google.cloud.datastore.Value<V>.hashCode()"
  overload: "com.google.cloud.datastore.Value.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.datastore.Value.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "Value<V>.toBuilder()"
  fullName: "com.google.cloud.datastore.Value<V>.toBuilder()"
  overload: "com.google.cloud.datastore.Value.toBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public abstract ValueBuilder<?,?,?> toBuilder()"
    return:
      type: "com.google.cloud.datastore.ValueBuilder<?,?,?>"
- uid: "com.google.cloud.datastore.Value.toString()"
  id: "toString()"
  parent: "com.google.cloud.datastore.Value"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "Value<V>.toString()"
  fullName: "com.google.cloud.datastore.Value<V>.toString()"
  overload: "com.google.cloud.datastore.Value.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.datastore.ValueBuilder<V,P,B>"
  spec.java:
  - uid: "com.google.cloud.datastore.ValueBuilder"
    name: "ValueBuilder"
    fullName: "com.google.cloud.datastore.ValueBuilder"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "V"
    name: "V"
    fullName: "V"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "P"
    name: "P"
    fullName: "P"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "B"
    name: "B"
    fullName: "B"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.Value.Value*"
  name: "<P,B>Value"
  nameWithType: "Value<V>.<P,B>Value"
  fullName: "com.google.cloud.datastore.Value<V>.<P,B>Value"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.ValueType"
  name: "ValueType"
  nameWithType: "ValueType"
  fullName: "com.google.cloud.datastore.ValueType"
- uid: "com.google.cloud.datastore.Value.getType*"
  name: "getType"
  nameWithType: "Value<V>.getType"
  fullName: "com.google.cloud.datastore.Value<V>.getType"
  package: "com.google.cloud.datastore"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.Value.excludeFromIndexes*"
  name: "excludeFromIndexes"
  nameWithType: "Value<V>.excludeFromIndexes"
  fullName: "com.google.cloud.datastore.Value<V>.excludeFromIndexes"
  package: "com.google.cloud.datastore"
- uid: "V"
  spec.java:
  - uid: "V"
    name: "V"
    fullName: "V"
    isExternal: false
- uid: "com.google.cloud.datastore.Value.get*"
  name: "get"
  nameWithType: "Value<V>.get"
  fullName: "com.google.cloud.datastore.Value<V>.get"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.ValueBuilder<?,?,?>"
  spec.java:
  - uid: "com.google.cloud.datastore.ValueBuilder"
    name: "ValueBuilder"
    fullName: "com.google.cloud.datastore.ValueBuilder"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.Value.toBuilder*"
  name: "toBuilder"
  nameWithType: "Value<V>.toBuilder"
  fullName: "com.google.cloud.datastore.Value<V>.toBuilder"
  package: "com.google.cloud.datastore"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.Value.toString*"
  name: "toString"
  nameWithType: "Value<V>.toString"
  fullName: "com.google.cloud.datastore.Value<V>.toString"
  package: "com.google.cloud.datastore"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.datastore.Value.hashCode*"
  name: "hashCode"
  nameWithType: "Value<V>.hashCode"
  fullName: "com.google.cloud.datastore.Value<V>.hashCode"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "com.google.cloud.datastore.Value.equals*"
  name: "equals"
  nameWithType: "Value<V>.equals"
  fullName: "com.google.cloud.datastore.Value<V>.equals"
  package: "com.google.cloud.datastore"
- uid: "com.google.datastore.v1.Value"
  name: "Value"
  nameWithType: "Value"
  fullName: "com.google.datastore.v1.Value"
- uid: "com.google.cloud.datastore.Value<?>"
  spec.java:
  - uid: "com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.Value.fromPb*"
  name: "fromPb"
  nameWithType: "Value<V>.fromPb"
  fullName: "com.google.cloud.datastore.Value<V>.fromPb"
  package: "com.google.cloud.datastore"
- uid: "java.io.Serializable"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "V,P,B"
  name: "V,P,B"
  nameWithType: "V,P,B"
  fullName: "V,P,B"
- uid: "com.google.cloud.datastore.ValueBuilder"
  name: "ValueBuilder"
  nameWithType: "ValueBuilder"
  fullName: "com.google.cloud.datastore.ValueBuilder"
- uid: "?,?,?"
  name: "?,?,?"
  nameWithType: "?,?,?"
  fullName: "?,?,?"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
