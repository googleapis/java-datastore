### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.Key"
  id: "Key"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.Key.Builder"
  - "com.google.cloud.datastore.Key.fromUrlSafe(java.lang.String)"
  - "com.google.cloud.datastore.Key.getId()"
  - "com.google.cloud.datastore.Key.getName()"
  - "com.google.cloud.datastore.Key.getNameOrId()"
  - "com.google.cloud.datastore.Key.hasId()"
  - "com.google.cloud.datastore.Key.hasName()"
  - "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.IncompleteKey,java.lang.String)"
  - "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.IncompleteKey,long)"
  - "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.Key)"
  - "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.Key,java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.Key,java.lang.String,long)"
  - "com.google.cloud.datastore.Key.newBuilder(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.Key.newBuilder(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.Key.newBuilder(java.lang.String,java.lang.String,long)"
  - "com.google.cloud.datastore.Key.newBuilder(java.lang.String,java.lang.String,long,java.lang.String)"
  - "com.google.cloud.datastore.Key.toUrlSafe()"
  langs:
  - "java"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.cloud.datastore.Key"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "A key that is guaranteed to be complete and could be used to reference a Google Cloud Datastore\n <xref uid=\"com.google.datastore.v1.Entity\" data-throw-if-not-resolved=\"false\">Entity</xref>. This class is immutable.\nSee Also: <a href=\"https://cloud.google.com/datastore/docs/concepts/entities\">Google Cloud Datastore  Entities, Properties, and Keys</a>\n"
  syntax:
    content: "public final class Key extends IncompleteKey"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.datastore.BaseKey"
  - "com.google.cloud.datastore.IncompleteKey"
  inheritedMembers:
  - "com.google.cloud.datastore.BaseKey.equals(java.lang.Object)"
  - "com.google.cloud.datastore.BaseKey.getAncestors()"
  - "com.google.cloud.datastore.BaseKey.getDatabaseId()"
  - "com.google.cloud.datastore.BaseKey.getKind()"
  - "com.google.cloud.datastore.BaseKey.getNamespace()"
  - "com.google.cloud.datastore.BaseKey.getProjectId()"
  - "com.google.cloud.datastore.BaseKey.hashCode()"
  - "com.google.cloud.datastore.BaseKey.toString()"
  - "com.google.cloud.datastore.IncompleteKey.getParent()"
  - "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.IncompleteKey)"
  - "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.Key,java.lang.String)"
  - "com.google.cloud.datastore.IncompleteKey.newBuilder(java.lang.String,java.lang.String)"
  - "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId(java.lang.String,java.lang.String,java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.Key.Key(java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  id: "Key(java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "Key(String projectId, String namespace, ImmutableList<PathElement> path)"
  nameWithType: "Key.Key(String projectId, String namespace, ImmutableList<PathElement> path)"
  fullName: "com.google.cloud.datastore.Key.Key(String projectId, String namespace, ImmutableList<PathElement> path)"
  overload: "com.google.cloud.datastore.Key.Key*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Key(String projectId, String namespace, ImmutableList<PathElement> path)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "namespace"
      type: "java.lang.String"
    - id: "path"
      type: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
- uid: "com.google.cloud.datastore.Key.Key(java.lang.String,java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  id: "Key(java.lang.String,java.lang.String,java.lang.String,com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "Key(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  nameWithType: "Key.Key(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  fullName: "com.google.cloud.datastore.Key.Key(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
  overload: "com.google.cloud.datastore.Key.Key*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Key(String projectId, String namespace, String databaseId, ImmutableList<PathElement> path)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "namespace"
      type: "java.lang.String"
    - id: "databaseId"
      type: "java.lang.String"
    - id: "path"
      type: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
- uid: "com.google.cloud.datastore.Key.fromUrlSafe(java.lang.String)"
  id: "fromUrlSafe(java.lang.String)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "fromUrlSafe(String urlSafe)"
  nameWithType: "Key.fromUrlSafe(String urlSafe)"
  fullName: "com.google.cloud.datastore.Key.fromUrlSafe(String urlSafe)"
  overload: "com.google.cloud.datastore.Key.fromUrlSafe*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Create a <code>Key</code> given its URL safe encoded form."
  syntax:
    content: "public static Key fromUrlSafe(String urlSafe)"
    parameters:
    - id: "urlSafe"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Key"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.getId()"
  id: "getId()"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "Key.getId()"
  fullName: "com.google.cloud.datastore.Key.getId()"
  overload: "com.google.cloud.datastore.Key.getId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the key's id or <code>null</code> if it has a name instead."
  syntax:
    content: "public Long getId()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.datastore.Key.getName()"
  id: "getName()"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "Key.getName()"
  fullName: "com.google.cloud.datastore.Key.getName()"
  overload: "com.google.cloud.datastore.Key.getName*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the key's name or <code>null</code> if it has an id instead."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.Key.getNameOrId()"
  id: "getNameOrId()"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "getNameOrId()"
  nameWithType: "Key.getNameOrId()"
  fullName: "com.google.cloud.datastore.Key.getNameOrId()"
  overload: "com.google.cloud.datastore.Key.getNameOrId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the key's ID (as <xref uid=\"java.lang.Long\" data-throw-if-not-resolved=\"false\">Long</xref>) or name (as <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>). Never <code>null</code>."
  syntax:
    content: "public Object getNameOrId()"
    return:
      type: "java.lang.Object"
- uid: "com.google.cloud.datastore.Key.hasId()"
  id: "hasId()"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "hasId()"
  nameWithType: "Key.hasId()"
  fullName: "com.google.cloud.datastore.Key.hasId()"
  overload: "com.google.cloud.datastore.Key.hasId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean hasId()"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.Key.hasName()"
  id: "hasName()"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "hasName()"
  nameWithType: "Key.hasName()"
  fullName: "com.google.cloud.datastore.Key.hasName()"
  overload: "com.google.cloud.datastore.Key.hasName*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean hasName()"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.IncompleteKey,java.lang.String)"
  id: "newBuilder(com.google.cloud.datastore.IncompleteKey,java.lang.String)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(IncompleteKey copyFrom, String name)"
  nameWithType: "Key.newBuilder(IncompleteKey copyFrom, String name)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(IncompleteKey copyFrom, String name)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(IncompleteKey copyFrom, String name)"
    parameters:
    - id: "copyFrom"
      type: "com.google.cloud.datastore.IncompleteKey"
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.IncompleteKey,long)"
  id: "newBuilder(com.google.cloud.datastore.IncompleteKey,long)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(IncompleteKey copyFrom, long id)"
  nameWithType: "Key.newBuilder(IncompleteKey copyFrom, long id)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(IncompleteKey copyFrom, long id)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(IncompleteKey copyFrom, long id)"
    parameters:
    - id: "copyFrom"
      type: "com.google.cloud.datastore.IncompleteKey"
    - id: "id"
      type: "long"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.Key)"
  id: "newBuilder(com.google.cloud.datastore.Key)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(Key copyFrom)"
  nameWithType: "Key.newBuilder(Key copyFrom)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(Key copyFrom)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(Key copyFrom)"
    parameters:
    - id: "copyFrom"
      type: "com.google.cloud.datastore.Key"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.Key,java.lang.String,java.lang.String)"
  id: "newBuilder(com.google.cloud.datastore.Key,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(Key parent, String kind, String name)"
  nameWithType: "Key.newBuilder(Key parent, String kind, String name)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(Key parent, String kind, String name)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(Key parent, String kind, String name)"
    parameters:
    - id: "parent"
      type: "com.google.cloud.datastore.Key"
    - id: "kind"
      type: "java.lang.String"
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.newBuilder(com.google.cloud.datastore.Key,java.lang.String,long)"
  id: "newBuilder(com.google.cloud.datastore.Key,java.lang.String,long)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(Key parent, String kind, long id)"
  nameWithType: "Key.newBuilder(Key parent, String kind, long id)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(Key parent, String kind, long id)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(Key parent, String kind, long id)"
    parameters:
    - id: "parent"
      type: "com.google.cloud.datastore.Key"
    - id: "kind"
      type: "java.lang.String"
    - id: "id"
      type: "long"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.newBuilder(java.lang.String,java.lang.String,java.lang.String)"
  id: "newBuilder(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(String projectId, String kind, String name)"
  nameWithType: "Key.newBuilder(String projectId, String kind, String name)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(String projectId, String kind, String name)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(String projectId, String kind, String name)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.newBuilder(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "newBuilder(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(String projectId, String kind, String name, String databaseId)"
  nameWithType: "Key.newBuilder(String projectId, String kind, String name, String databaseId)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(String projectId, String kind, String name, String databaseId)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(String projectId, String kind, String name, String databaseId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
    - id: "name"
      type: "java.lang.String"
    - id: "databaseId"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.newBuilder(java.lang.String,java.lang.String,long)"
  id: "newBuilder(java.lang.String,java.lang.String,long)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(String projectId, String kind, long id)"
  nameWithType: "Key.newBuilder(String projectId, String kind, long id)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(String projectId, String kind, long id)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(String projectId, String kind, long id)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
    - id: "id"
      type: "long"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.newBuilder(java.lang.String,java.lang.String,long,java.lang.String)"
  id: "newBuilder(java.lang.String,java.lang.String,long,java.lang.String)"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "newBuilder(String projectId, String kind, long id, String databaseId)"
  nameWithType: "Key.newBuilder(String projectId, String kind, long id, String databaseId)"
  fullName: "com.google.cloud.datastore.Key.newBuilder(String projectId, String kind, long id, String databaseId)"
  overload: "com.google.cloud.datastore.Key.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public static Key.Builder newBuilder(String projectId, String kind, long id, String databaseId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
    - id: "id"
      type: "long"
    - id: "databaseId"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Key.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.Key.toUrlSafe()"
  id: "toUrlSafe()"
  parent: "com.google.cloud.datastore.Key"
  langs:
  - "java"
  name: "toUrlSafe()"
  nameWithType: "Key.toUrlSafe()"
  fullName: "com.google.cloud.datastore.Key.toUrlSafe()"
  overload: "com.google.cloud.datastore.Key.toUrlSafe*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the key in an encoded form that can be used as part of a URL."
  syntax:
    content: "public String toUrlSafe()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.common.collect.ImmutableList<com.google.cloud.datastore.PathElement>"
  spec.java:
  - uid: "com.google.common.collect.ImmutableList"
    name: "ImmutableList"
    fullName: "com.google.common.collect.ImmutableList"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.PathElement"
    name: "PathElement"
    fullName: "com.google.cloud.datastore.PathElement"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.Key.Key*"
  name: "Key"
  nameWithType: "Key.Key"
  fullName: "com.google.cloud.datastore.Key.Key"
  package: "com.google.cloud.datastore"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.Key.hasId*"
  name: "hasId"
  nameWithType: "Key.hasId"
  fullName: "com.google.cloud.datastore.Key.hasId"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Long"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html"
- uid: "com.google.cloud.datastore.Key.getId*"
  name: "getId"
  nameWithType: "Key.getId"
  fullName: "com.google.cloud.datastore.Key.getId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key.hasName*"
  name: "hasName"
  nameWithType: "Key.hasName"
  fullName: "com.google.cloud.datastore.Key.hasName"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key.getName*"
  name: "getName"
  nameWithType: "Key.getName"
  fullName: "com.google.cloud.datastore.Key.getName"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "com.google.cloud.datastore.Key.getNameOrId*"
  name: "getNameOrId"
  nameWithType: "Key.getNameOrId"
  fullName: "com.google.cloud.datastore.Key.getNameOrId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key.toUrlSafe*"
  name: "toUrlSafe"
  nameWithType: "Key.toUrlSafe"
  fullName: "com.google.cloud.datastore.Key.toUrlSafe"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key.fromUrlSafe*"
  name: "fromUrlSafe"
  nameWithType: "Key.fromUrlSafe"
  fullName: "com.google.cloud.datastore.Key.fromUrlSafe"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key.Builder"
  name: "Key.Builder"
  nameWithType: "Key.Builder"
  fullName: "com.google.cloud.datastore.Key.Builder"
- uid: "com.google.cloud.datastore.Key.newBuilder*"
  name: "newBuilder"
  nameWithType: "Key.newBuilder"
  fullName: "com.google.cloud.datastore.Key.newBuilder"
  package: "com.google.cloud.datastore"
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "com.google.cloud.datastore.IncompleteKey"
  name: "IncompleteKey"
  nameWithType: "IncompleteKey"
  fullName: "com.google.cloud.datastore.IncompleteKey"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.cloud.datastore.BaseKey.toString()"
  name: "BaseKey.toString()"
  nameWithType: "BaseKey.toString()"
  fullName: "com.google.cloud.datastore.BaseKey.toString()"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.IncompleteKey)"
  name: "IncompleteKey.newBuilder(IncompleteKey)"
  nameWithType: "IncompleteKey.newBuilder(IncompleteKey)"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.IncompleteKey)"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.datastore.BaseKey.getNamespace()"
  name: "BaseKey.getNamespace()"
  nameWithType: "BaseKey.getNamespace()"
  fullName: "com.google.cloud.datastore.BaseKey.getNamespace()"
- uid: "com.google.cloud.datastore.BaseKey.getAncestors()"
  name: "BaseKey.getAncestors()"
  nameWithType: "BaseKey.getAncestors()"
  fullName: "com.google.cloud.datastore.BaseKey.getAncestors()"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.Key,java.lang.String)"
  name: "IncompleteKey.newBuilder(Key,String)"
  nameWithType: "IncompleteKey.newBuilder(Key,String)"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilder(com.google.cloud.datastore.Key,java.lang.String)"
- uid: "com.google.cloud.datastore.IncompleteKey.getParent()"
  name: "IncompleteKey.getParent()"
  nameWithType: "IncompleteKey.getParent()"
  fullName: "com.google.cloud.datastore.IncompleteKey.getParent()"
- uid: "com.google.cloud.datastore.BaseKey.getKind()"
  name: "BaseKey.getKind()"
  nameWithType: "BaseKey.getKind()"
  fullName: "com.google.cloud.datastore.BaseKey.getKind()"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.datastore.BaseKey.equals(java.lang.Object)"
  name: "BaseKey.equals(Object)"
  nameWithType: "BaseKey.equals(Object)"
  fullName: "com.google.cloud.datastore.BaseKey.equals(java.lang.Object)"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.BaseKey.getDatabaseId()"
  name: "BaseKey.getDatabaseId()"
  nameWithType: "BaseKey.getDatabaseId()"
  fullName: "com.google.cloud.datastore.BaseKey.getDatabaseId()"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilder(java.lang.String,java.lang.String)"
  name: "IncompleteKey.newBuilder(String,String)"
  nameWithType: "IncompleteKey.newBuilder(String,String)"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilder(java.lang.String,java.lang.String)"
- uid: "com.google.cloud.datastore.BaseKey.hashCode()"
  name: "BaseKey.hashCode()"
  nameWithType: "BaseKey.hashCode()"
  fullName: "com.google.cloud.datastore.BaseKey.hashCode()"
- uid: "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId(java.lang.String,java.lang.String,java.lang.String)"
  name: "IncompleteKey.newBuilderWithDatabaseId(String,String,String)"
  nameWithType: "IncompleteKey.newBuilderWithDatabaseId(String,String,String)"
  fullName: "com.google.cloud.datastore.IncompleteKey.newBuilderWithDatabaseId(java.lang.String,java.lang.String,java.lang.String)"
- uid: "com.google.cloud.datastore.BaseKey.getProjectId()"
  name: "BaseKey.getProjectId()"
  nameWithType: "BaseKey.getProjectId()"
  fullName: "com.google.cloud.datastore.BaseKey.getProjectId()"
- uid: "com.google.cloud.datastore.PathElement"
  name: "PathElement"
  nameWithType: "PathElement"
  fullName: "com.google.cloud.datastore.PathElement"
- uid: "com.google.common.collect.ImmutableList"
  name: "ImmutableList"
  nameWithType: "ImmutableList"
  fullName: "com.google.common.collect.ImmutableList"
