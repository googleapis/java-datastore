### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.client.DatastoreFactory"
  id: "DatastoreFactory"
  parent: "com.google.datastore.v1.client"
  children:
  - "com.google.datastore.v1.client.DatastoreFactory.DEFAULT_HOST"
  - "com.google.datastore.v1.client.DatastoreFactory.DatastoreFactory()"
  - "com.google.datastore.v1.client.DatastoreFactory.VERSION"
  - "com.google.datastore.v1.client.DatastoreFactory.create(com.google.datastore.v1.client.DatastoreOptions)"
  - "com.google.datastore.v1.client.DatastoreFactory.get()"
  - "com.google.datastore.v1.client.DatastoreFactory.logMethodCalls()"
  - "com.google.datastore.v1.client.DatastoreFactory.makeClient(com.google.datastore.v1.client.DatastoreOptions)"
  - "com.google.datastore.v1.client.DatastoreFactory.newRemoteRpc(com.google.datastore.v1.client.DatastoreOptions)"
  langs:
  - "java"
  name: "DatastoreFactory"
  nameWithType: "DatastoreFactory"
  fullName: "com.google.datastore.v1.client.DatastoreFactory"
  type: "Class"
  package: "com.google.datastore.v1.client"
  summary: "Client factory for <xref uid=\"com.google.datastore.v1.client.Datastore\" data-throw-if-not-resolved=\"false\">Datastore</xref>."
  syntax:
    content: "public class DatastoreFactory"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.datastore.v1.client.DatastoreFactory.DEFAULT_HOST"
  id: "DEFAULT_HOST"
  parent: "com.google.datastore.v1.client.DatastoreFactory"
  langs:
  - "java"
  name: "DEFAULT_HOST"
  nameWithType: "DatastoreFactory.DEFAULT_HOST"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.DEFAULT_HOST"
  type: "Field"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static final String DEFAULT_HOST"
    return:
      type: "java.lang.String"
  javaType: "static field"
- uid: "com.google.datastore.v1.client.DatastoreFactory.DatastoreFactory()"
  id: "DatastoreFactory()"
  parent: "com.google.datastore.v1.client.DatastoreFactory"
  langs:
  - "java"
  name: "DatastoreFactory()"
  nameWithType: "DatastoreFactory.DatastoreFactory()"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.DatastoreFactory()"
  overload: "com.google.datastore.v1.client.DatastoreFactory.DatastoreFactory*"
  type: "Constructor"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public DatastoreFactory()"
- uid: "com.google.datastore.v1.client.DatastoreFactory.VERSION"
  id: "VERSION"
  parent: "com.google.datastore.v1.client.DatastoreFactory"
  langs:
  - "java"
  name: "VERSION"
  nameWithType: "DatastoreFactory.VERSION"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.VERSION"
  type: "Field"
  package: "com.google.datastore.v1.client"
  summary: "API version."
  syntax:
    content: "public static final String VERSION"
    return:
      type: "java.lang.String"
  javaType: "static field"
- uid: "com.google.datastore.v1.client.DatastoreFactory.create(com.google.datastore.v1.client.DatastoreOptions)"
  id: "create(com.google.datastore.v1.client.DatastoreOptions)"
  parent: "com.google.datastore.v1.client.DatastoreFactory"
  langs:
  - "java"
  name: "create(DatastoreOptions options)"
  nameWithType: "DatastoreFactory.create(DatastoreOptions options)"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.create(DatastoreOptions options)"
  overload: "com.google.datastore.v1.client.DatastoreFactory.create*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Provides access to a datastore using the provided options. Logs into the application using the\n credentials available via these options."
  syntax:
    content: "public Datastore create(DatastoreOptions options)"
    parameters:
    - id: "options"
      type: "com.google.datastore.v1.client.DatastoreOptions"
    return:
      type: "com.google.datastore.v1.client.Datastore"
- uid: "com.google.datastore.v1.client.DatastoreFactory.get()"
  id: "get()"
  parent: "com.google.datastore.v1.client.DatastoreFactory"
  langs:
  - "java"
  name: "get()"
  nameWithType: "DatastoreFactory.get()"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.get()"
  overload: "com.google.datastore.v1.client.DatastoreFactory.get*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "public static DatastoreFactory get()"
    return:
      type: "com.google.datastore.v1.client.DatastoreFactory"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreFactory.logMethodCalls()"
  id: "logMethodCalls()"
  parent: "com.google.datastore.v1.client.DatastoreFactory"
  langs:
  - "java"
  name: "logMethodCalls()"
  nameWithType: "DatastoreFactory.logMethodCalls()"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.logMethodCalls()"
  overload: "com.google.datastore.v1.client.DatastoreFactory.logMethodCalls*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Starts logging datastore method calls to the console. (Useful within tests.)"
  syntax:
    content: "public static void logMethodCalls()"
  javaType: "static method"
- uid: "com.google.datastore.v1.client.DatastoreFactory.makeClient(com.google.datastore.v1.client.DatastoreOptions)"
  id: "makeClient(com.google.datastore.v1.client.DatastoreOptions)"
  parent: "com.google.datastore.v1.client.DatastoreFactory"
  langs:
  - "java"
  name: "makeClient(DatastoreOptions options)"
  nameWithType: "DatastoreFactory.makeClient(DatastoreOptions options)"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.makeClient(DatastoreOptions options)"
  overload: "com.google.datastore.v1.client.DatastoreFactory.makeClient*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Constructs a Google APIs HTTP client with the associated credentials."
  syntax:
    content: "public HttpRequestFactory makeClient(DatastoreOptions options)"
    parameters:
    - id: "options"
      type: "com.google.datastore.v1.client.DatastoreOptions"
    return:
      type: "com.google.api.client.http.HttpRequestFactory"
- uid: "com.google.datastore.v1.client.DatastoreFactory.newRemoteRpc(com.google.datastore.v1.client.DatastoreOptions)"
  id: "newRemoteRpc(com.google.datastore.v1.client.DatastoreOptions)"
  parent: "com.google.datastore.v1.client.DatastoreFactory"
  langs:
  - "java"
  name: "newRemoteRpc(DatastoreOptions options)"
  nameWithType: "DatastoreFactory.newRemoteRpc(DatastoreOptions options)"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.newRemoteRpc(DatastoreOptions options)"
  overload: "com.google.datastore.v1.client.DatastoreFactory.newRemoteRpc*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  syntax:
    content: "protected RemoteRpc newRemoteRpc(DatastoreOptions options)"
    parameters:
    - id: "options"
      type: "com.google.datastore.v1.client.DatastoreOptions"
    return:
      type: "com.google.datastore.v1.client.RemoteRpc"
references:
- uid: "com.google.datastore.v1.client.DatastoreFactory.DatastoreFactory*"
  name: "DatastoreFactory"
  nameWithType: "DatastoreFactory.DatastoreFactory"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.DatastoreFactory"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreFactory.get*"
  name: "get"
  nameWithType: "DatastoreFactory.get"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.get"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreOptions"
  name: "DatastoreOptions"
  nameWithType: "DatastoreOptions"
  fullName: "com.google.datastore.v1.client.DatastoreOptions"
- uid: "com.google.datastore.v1.client.Datastore"
  name: "Datastore"
  nameWithType: "Datastore"
  fullName: "com.google.datastore.v1.client.Datastore"
- uid: "com.google.datastore.v1.client.DatastoreFactory.create*"
  name: "create"
  nameWithType: "DatastoreFactory.create"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.create"
  package: "com.google.datastore.v1.client"
- uid: "com.google.api.client.http.HttpRequestFactory"
  spec.java:
  - uid: "com.google.api.client.http.HttpRequestFactory"
    name: "HttpRequestFactory"
    fullName: "com.google.api.client.http.HttpRequestFactory"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreFactory.makeClient*"
  name: "makeClient"
  nameWithType: "DatastoreFactory.makeClient"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.makeClient"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.DatastoreFactory.logMethodCalls*"
  name: "logMethodCalls"
  nameWithType: "DatastoreFactory.logMethodCalls"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.logMethodCalls"
  package: "com.google.datastore.v1.client"
- uid: "com.google.datastore.v1.client.RemoteRpc"
  spec.java:
  - uid: "com.google.datastore.v1.client.RemoteRpc"
    name: "RemoteRpc"
    fullName: "com.google.datastore.v1.client.RemoteRpc"
    isExternal: false
- uid: "com.google.datastore.v1.client.DatastoreFactory.newRemoteRpc*"
  name: "newRemoteRpc"
  nameWithType: "DatastoreFactory.newRemoteRpc"
  fullName: "com.google.datastore.v1.client.DatastoreFactory.newRemoteRpc"
  package: "com.google.datastore.v1.client"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
