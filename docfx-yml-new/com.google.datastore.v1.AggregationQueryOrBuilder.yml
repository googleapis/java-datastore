### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder"
  id: "AggregationQueryOrBuilder"
  parent: "com.google.datastore.v1"
  children:
  - "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregations(int)"
  - "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsCount()"
  - "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsList()"
  - "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilder(int)"
  - "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilderList()"
  - "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQuery()"
  - "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQueryOrBuilder()"
  - "com.google.datastore.v1.AggregationQueryOrBuilder.getQueryTypeCase()"
  - "com.google.datastore.v1.AggregationQueryOrBuilder.hasNestedQuery()"
  langs:
  - "java"
  name: "AggregationQueryOrBuilder"
  nameWithType: "AggregationQueryOrBuilder"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder"
  type: "Interface"
  package: "com.google.datastore.v1"
  syntax:
    content: "public interface AggregationQueryOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregations(int)"
  id: "getAggregations(int)"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "getAggregations(int index)"
  nameWithType: "AggregationQueryOrBuilder.getAggregations(int index)"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregations(int index)"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregations*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Optional. Series of aggregations to apply over the results of the\n <code>nested_query</code>.\n\n Requires:\n\n * A minimum of one and maximum of five aggregations per query.\n \n\n <code>\n repeated .google.datastore.v1.AggregationQuery.Aggregation aggregations = 3 [(.google.api.field_behavior) = OPTIONAL];\n </code>"
  syntax:
    content: "public abstract AggregationQuery.Aggregation getAggregations(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.datastore.v1.AggregationQuery.Aggregation"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsCount()"
  id: "getAggregationsCount()"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "getAggregationsCount()"
  nameWithType: "AggregationQueryOrBuilder.getAggregationsCount()"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsCount()"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsCount*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Optional. Series of aggregations to apply over the results of the\n <code>nested_query</code>.\n\n Requires:\n\n * A minimum of one and maximum of five aggregations per query.\n \n\n <code>\n repeated .google.datastore.v1.AggregationQuery.Aggregation aggregations = 3 [(.google.api.field_behavior) = OPTIONAL];\n </code>"
  syntax:
    content: "public abstract int getAggregationsCount()"
    return:
      type: "int"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsList()"
  id: "getAggregationsList()"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "getAggregationsList()"
  nameWithType: "AggregationQueryOrBuilder.getAggregationsList()"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsList()"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsList*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Optional. Series of aggregations to apply over the results of the\n <code>nested_query</code>.\n\n Requires:\n\n * A minimum of one and maximum of five aggregations per query.\n \n\n <code>\n repeated .google.datastore.v1.AggregationQuery.Aggregation aggregations = 3 [(.google.api.field_behavior) = OPTIONAL];\n </code>"
  syntax:
    content: "public abstract List<AggregationQuery.Aggregation> getAggregationsList()"
    return:
      type: "java.util.List<com.google.datastore.v1.AggregationQuery.Aggregation>"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilder(int)"
  id: "getAggregationsOrBuilder(int)"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "getAggregationsOrBuilder(int index)"
  nameWithType: "AggregationQueryOrBuilder.getAggregationsOrBuilder(int index)"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilder(int index)"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Optional. Series of aggregations to apply over the results of the\n <code>nested_query</code>.\n\n Requires:\n\n * A minimum of one and maximum of five aggregations per query.\n \n\n <code>\n repeated .google.datastore.v1.AggregationQuery.Aggregation aggregations = 3 [(.google.api.field_behavior) = OPTIONAL];\n </code>"
  syntax:
    content: "public abstract AggregationQuery.AggregationOrBuilder getAggregationsOrBuilder(int index)"
    parameters:
    - id: "index"
      type: "int"
    return:
      type: "com.google.datastore.v1.AggregationQuery.AggregationOrBuilder"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilderList()"
  id: "getAggregationsOrBuilderList()"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "getAggregationsOrBuilderList()"
  nameWithType: "AggregationQueryOrBuilder.getAggregationsOrBuilderList()"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilderList()"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilderList*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Optional. Series of aggregations to apply over the results of the\n <code>nested_query</code>.\n\n Requires:\n\n * A minimum of one and maximum of five aggregations per query.\n \n\n <code>\n repeated .google.datastore.v1.AggregationQuery.Aggregation aggregations = 3 [(.google.api.field_behavior) = OPTIONAL];\n </code>"
  syntax:
    content: "public abstract List<? extends AggregationQuery.AggregationOrBuilder> getAggregationsOrBuilderList()"
    return:
      type: "java.util.List<? extends com.google.datastore.v1.AggregationQuery.AggregationOrBuilder>"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQuery()"
  id: "getNestedQuery()"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "getNestedQuery()"
  nameWithType: "AggregationQueryOrBuilder.getNestedQuery()"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQuery()"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQuery*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Nested query for aggregation\n \n\n <code>.google.datastore.v1.Query nested_query = 1;</code>"
  syntax:
    content: "public abstract Query getNestedQuery()"
    return:
      type: "com.google.datastore.v1.Query"
      description: "The nestedQuery."
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQueryOrBuilder()"
  id: "getNestedQueryOrBuilder()"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "getNestedQueryOrBuilder()"
  nameWithType: "AggregationQueryOrBuilder.getNestedQueryOrBuilder()"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQueryOrBuilder()"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQueryOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Nested query for aggregation\n \n\n <code>.google.datastore.v1.Query nested_query = 1;</code>"
  syntax:
    content: "public abstract QueryOrBuilder getNestedQueryOrBuilder()"
    return:
      type: "com.google.datastore.v1.QueryOrBuilder"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getQueryTypeCase()"
  id: "getQueryTypeCase()"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "getQueryTypeCase()"
  nameWithType: "AggregationQueryOrBuilder.getQueryTypeCase()"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getQueryTypeCase()"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.getQueryTypeCase*"
  type: "Method"
  package: "com.google.datastore.v1"
  syntax:
    content: "public abstract AggregationQuery.QueryTypeCase getQueryTypeCase()"
    return:
      type: "com.google.datastore.v1.AggregationQuery.QueryTypeCase"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.hasNestedQuery()"
  id: "hasNestedQuery()"
  parent: "com.google.datastore.v1.AggregationQueryOrBuilder"
  langs:
  - "java"
  name: "hasNestedQuery()"
  nameWithType: "AggregationQueryOrBuilder.hasNestedQuery()"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.hasNestedQuery()"
  overload: "com.google.datastore.v1.AggregationQueryOrBuilder.hasNestedQuery*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Nested query for aggregation\n \n\n <code>.google.datastore.v1.Query nested_query = 1;</code>"
  syntax:
    content: "public abstract boolean hasNestedQuery()"
    return:
      type: "boolean"
      description: "Whether the nestedQuery field is set."
references:
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.hasNestedQuery*"
  name: "hasNestedQuery"
  nameWithType: "AggregationQueryOrBuilder.hasNestedQuery"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.hasNestedQuery"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.Query"
  name: "Query"
  nameWithType: "Query"
  fullName: "com.google.datastore.v1.Query"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQuery*"
  name: "getNestedQuery"
  nameWithType: "AggregationQueryOrBuilder.getNestedQuery"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQuery"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.QueryOrBuilder"
  name: "QueryOrBuilder"
  nameWithType: "QueryOrBuilder"
  fullName: "com.google.datastore.v1.QueryOrBuilder"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQueryOrBuilder*"
  name: "getNestedQueryOrBuilder"
  nameWithType: "AggregationQueryOrBuilder.getNestedQueryOrBuilder"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getNestedQueryOrBuilder"
  package: "com.google.datastore.v1"
- uid: "java.util.List<com.google.datastore.v1.AggregationQuery.Aggregation>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/datastore/v1/AggregationQuery/Aggregation>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.v1.AggregationQuery.Aggregation"
    name: "Aggregation"
    fullName: "com.google.datastore.v1.AggregationQuery.Aggregation"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsList*"
  name: "getAggregationsList"
  nameWithType: "AggregationQueryOrBuilder.getAggregationsList"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsList"
  package: "com.google.datastore.v1"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.datastore.v1.AggregationQuery.Aggregation"
  name: "AggregationQuery.Aggregation"
  nameWithType: "AggregationQuery.Aggregation"
  fullName: "com.google.datastore.v1.AggregationQuery.Aggregation"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregations*"
  name: "getAggregations"
  nameWithType: "AggregationQueryOrBuilder.getAggregations"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregations"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsCount*"
  name: "getAggregationsCount"
  nameWithType: "AggregationQueryOrBuilder.getAggregationsCount"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsCount"
  package: "com.google.datastore.v1"
- uid: "java.util.List<? extends com.google.datastore.v1.AggregationQuery.AggregationOrBuilder>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<? extends com/google/datastore/v1/AggregationQuery/AggregationOrBuilder>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "? extends com.google.datastore.v1.AggregationQuery.AggregationOrBuilder"
    name: "AggregationOrBuilder"
    fullName: "? extends com.google.datastore.v1.AggregationQuery.AggregationOrBuilder"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilderList*"
  name: "getAggregationsOrBuilderList"
  nameWithType: "AggregationQueryOrBuilder.getAggregationsOrBuilderList"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilderList"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationQuery.AggregationOrBuilder"
  name: "AggregationQuery.AggregationOrBuilder"
  nameWithType: "AggregationQuery.AggregationOrBuilder"
  fullName: "com.google.datastore.v1.AggregationQuery.AggregationOrBuilder"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilder*"
  name: "getAggregationsOrBuilder"
  nameWithType: "AggregationQueryOrBuilder.getAggregationsOrBuilder"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getAggregationsOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationQuery.QueryTypeCase"
  name: "AggregationQuery.QueryTypeCase"
  nameWithType: "AggregationQuery.QueryTypeCase"
  fullName: "com.google.datastore.v1.AggregationQuery.QueryTypeCase"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder.getQueryTypeCase*"
  name: "getQueryTypeCase"
  nameWithType: "AggregationQueryOrBuilder.getQueryTypeCase"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder.getQueryTypeCase"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "? extends com.google.datastore.v1.AggregationQuery.AggregationOrBuilder"
  name: "? extends AggregationQuery.AggregationOrBuilder"
  nameWithType: "? extends AggregationQuery.AggregationOrBuilder"
  fullName: "? extends com.google.datastore.v1.AggregationQuery.AggregationOrBuilder"
