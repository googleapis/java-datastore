### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.BaseEntity"
  id: "BaseEntity"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.BaseEntity.<K>getEntity(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.<T>getList(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.<V>getValue(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.Builder"
  - "com.google.cloud.datastore.BaseEntity.contains(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.equals(java.lang.Object)"
  - "com.google.cloud.datastore.BaseEntity.getBlob(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getBoolean(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getDouble(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getKey()"
  - "com.google.cloud.datastore.BaseEntity.getKey(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getLatLng(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getLong(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getNames()"
  - "com.google.cloud.datastore.BaseEntity.getProperties()"
  - "com.google.cloud.datastore.BaseEntity.getString(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.getTimestamp(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.hasKey()"
  - "com.google.cloud.datastore.BaseEntity.hashCode()"
  - "com.google.cloud.datastore.BaseEntity.isNull(java.lang.String)"
  - "com.google.cloud.datastore.BaseEntity.toString()"
  langs:
  - "java"
  name: "BaseEntity<K>"
  nameWithType: "BaseEntity<K>"
  fullName: "com.google.cloud.datastore.BaseEntity<K>"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "A base class for entities (key and properties). An entity is a Google Cloud Datastore persistent\n data object. An entity holds one or more properties, represented by a name (as <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\">String</xref>)\n and a value (as <xref uid=\"com.google.cloud.datastore.Value\" data-throw-if-not-resolved=\"false\">com.google.cloud.datastore.Value</xref>), and may be associated with a key. For\n a list of possible values see <xref uid=\"com.google.cloud.datastore.ValueType\" data-throw-if-not-resolved=\"false\">ValueType</xref>.\nSee Also: <a href=\"https://cloud.google.com/datastore/docs/concepts/entities\">Google Cloud Datastore  Entities, Properties, and Keys</a>\n"
  syntax:
    content: "public abstract class BaseEntity<K> implements Serializable"
    typeParameters:
    - id: "K"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.BaseEntity.<K>getEntity(java.lang.String)"
  id: "<K>getEntity(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "<K>getEntity(String name)"
  nameWithType: "BaseEntity<K>.<K>getEntity(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.<K>getEntity(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getEntity*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as an entity."
  syntax:
    content: "public FullEntity<K> <K>getEntity(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.FullEntity<K>"
- uid: "com.google.cloud.datastore.BaseEntity.<T>getList(java.lang.String)"
  id: "<T>getList(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "<T>getList(String name)"
  nameWithType: "BaseEntity<K>.<T>getList(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.<T>getList(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getList*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a list of values."
  syntax:
    content: "public List<T> <T>getList(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "java.util.List<T>"
- uid: "com.google.cloud.datastore.BaseEntity.<V>getValue(java.lang.String)"
  id: "<V>getValue(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "<V>getValue(String name)"
  nameWithType: "BaseEntity<K>.<V>getValue(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.<V>getValue(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getValue*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the <xref uid=\"com.google.cloud.datastore.Value\" data-throw-if-not-resolved=\"false\">Value</xref> for the given property <code>name</code>."
  syntax:
    content: "public V <V>getValue(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "V"
- uid: "com.google.cloud.datastore.BaseEntity.BaseEntity(com.google.cloud.datastore.BaseEntity.Builder<K,?>)"
  id: "BaseEntity(com.google.cloud.datastore.BaseEntity.Builder<K,?>)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "BaseEntity(BaseEntity.Builder<K,?> builder)"
  nameWithType: "BaseEntity<K>.BaseEntity(BaseEntity.Builder<K,?> builder)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.BaseEntity(BaseEntity.Builder<K,?> builder)"
  overload: "com.google.cloud.datastore.BaseEntity.BaseEntity*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " BaseEntity(BaseEntity.Builder<K,?> builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.datastore.BaseEntity.Builder<K,?>"
- uid: "com.google.cloud.datastore.BaseEntity.BaseEntity(com.google.cloud.datastore.BaseEntity<K>)"
  id: "BaseEntity(com.google.cloud.datastore.BaseEntity<K>)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "BaseEntity(BaseEntity<K> from)"
  nameWithType: "BaseEntity<K>.BaseEntity(BaseEntity<K> from)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.BaseEntity(BaseEntity<K> from)"
  overload: "com.google.cloud.datastore.BaseEntity.BaseEntity*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " BaseEntity(BaseEntity<K> from)"
    parameters:
    - id: "from"
      type: "com.google.cloud.datastore.BaseEntity<K>"
- uid: "com.google.cloud.datastore.BaseEntity.contains(java.lang.String)"
  id: "contains(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "contains(String name)"
  nameWithType: "BaseEntity<K>.contains(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.contains(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.contains*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns <code>true</code> if the entity contains a property with the given <code>name</code>."
  syntax:
    content: "public boolean contains(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.BaseEntity.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "BaseEntity<K>.equals(Object obj)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.equals(Object obj)"
  overload: "com.google.cloud.datastore.BaseEntity.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.BaseEntity.getBlob(java.lang.String)"
  id: "getBlob(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getBlob(String name)"
  nameWithType: "BaseEntity<K>.getBlob(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getBlob(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getBlob*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a blob."
  syntax:
    content: "public Blob getBlob(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Blob"
- uid: "com.google.cloud.datastore.BaseEntity.getBoolean(java.lang.String)"
  id: "getBoolean(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getBoolean(String name)"
  nameWithType: "BaseEntity<K>.getBoolean(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getBoolean(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getBoolean*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a boolean."
  syntax:
    content: "public boolean getBoolean(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.BaseEntity.getDouble(java.lang.String)"
  id: "getDouble(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getDouble(String name)"
  nameWithType: "BaseEntity<K>.getDouble(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getDouble(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getDouble*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a double."
  syntax:
    content: "public double getDouble(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "double"
- uid: "com.google.cloud.datastore.BaseEntity.getKey()"
  id: "getKey()"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getKey()"
  nameWithType: "BaseEntity<K>.getKey()"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getKey()"
  overload: "com.google.cloud.datastore.BaseEntity.getKey*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the associated key or null if it does not have one."
  syntax:
    content: "public K getKey()"
    return:
      type: "K"
- uid: "com.google.cloud.datastore.BaseEntity.getKey(java.lang.String)"
  id: "getKey(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getKey(String name)"
  nameWithType: "BaseEntity<K>.getKey(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getKey(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getKey*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a Key."
  syntax:
    content: "public Key getKey(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.Key"
- uid: "com.google.cloud.datastore.BaseEntity.getLatLng(java.lang.String)"
  id: "getLatLng(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getLatLng(String name)"
  nameWithType: "BaseEntity<K>.getLatLng(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getLatLng(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getLatLng*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a LatLng."
  syntax:
    content: "public LatLng getLatLng(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.LatLng"
- uid: "com.google.cloud.datastore.BaseEntity.getLong(java.lang.String)"
  id: "getLong(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getLong(String name)"
  nameWithType: "BaseEntity<K>.getLong(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getLong(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getLong*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as long."
  syntax:
    content: "public long getLong(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "long"
- uid: "com.google.cloud.datastore.BaseEntity.getNames()"
  id: "getNames()"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getNames()"
  nameWithType: "BaseEntity<K>.getNames()"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getNames()"
  overload: "com.google.cloud.datastore.BaseEntity.getNames*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the properties name."
  syntax:
    content: "public Set<String> getNames()"
    return:
      type: "java.util.Set<java.lang.String>"
- uid: "com.google.cloud.datastore.BaseEntity.getProperties()"
  id: "getProperties()"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "BaseEntity<K>.getProperties()"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getProperties()"
  overload: "com.google.cloud.datastore.BaseEntity.getProperties*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the properties."
  syntax:
    content: "public Map<String,Value<?>> getProperties()"
    return:
      type: "java.util.Map<java.lang.String,com.google.cloud.datastore.Value<?>>"
- uid: "com.google.cloud.datastore.BaseEntity.getString(java.lang.String)"
  id: "getString(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getString(String name)"
  nameWithType: "BaseEntity<K>.getString(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getString(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getString*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a string."
  syntax:
    content: "public String getString(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.BaseEntity.getTimestamp(java.lang.String)"
  id: "getTimestamp(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "getTimestamp(String name)"
  nameWithType: "BaseEntity<K>.getTimestamp(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getTimestamp(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.getTimestamp*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns the property value as a Timestamp."
  syntax:
    content: "public Timestamp getTimestamp(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.Timestamp"
- uid: "com.google.cloud.datastore.BaseEntity.hasKey()"
  id: "hasKey()"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "hasKey()"
  nameWithType: "BaseEntity<K>.hasKey()"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.hasKey()"
  overload: "com.google.cloud.datastore.BaseEntity.hasKey*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns true if entity has a non-null key."
  syntax:
    content: "public boolean hasKey()"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.BaseEntity.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "BaseEntity<K>.hashCode()"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.hashCode()"
  overload: "com.google.cloud.datastore.BaseEntity.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.datastore.BaseEntity.isNull(java.lang.String)"
  id: "isNull(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "isNull(String name)"
  nameWithType: "BaseEntity<K>.isNull(String name)"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.isNull(String name)"
  overload: "com.google.cloud.datastore.BaseEntity.isNull*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Returns true if property is an instance of NullValue."
  syntax:
    content: "public boolean isNull(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.BaseEntity.toString()"
  id: "toString()"
  parent: "com.google.cloud.datastore.BaseEntity"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "BaseEntity<K>.toString()"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.toString()"
  overload: "com.google.cloud.datastore.BaseEntity.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.datastore.BaseEntity.Builder<K,?>"
  spec.java:
  - uid: "com.google.cloud.datastore.BaseEntity.Builder"
    name: "Builder"
    fullName: "com.google.cloud.datastore.BaseEntity.Builder"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "K"
    name: "K"
    fullName: "K"
    isExternal: false
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.BaseEntity*"
  name: "BaseEntity"
  nameWithType: "BaseEntity<K>.BaseEntity"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.BaseEntity"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity<K>"
  spec.java:
  - uid: "com.google.cloud.datastore.BaseEntity"
    name: "BaseEntity"
    fullName: "com.google.cloud.datastore.BaseEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "K"
    name: "K"
    fullName: "K"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.BaseEntity.toString*"
  name: "toString"
  nameWithType: "BaseEntity<K>.toString"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.toString"
  package: "com.google.cloud.datastore"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.hashCode*"
  name: "hashCode"
  nameWithType: "BaseEntity<K>.hashCode"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.hashCode"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.equals*"
  name: "equals"
  nameWithType: "BaseEntity<K>.equals"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.equals"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity.hasKey*"
  name: "hasKey"
  nameWithType: "BaseEntity<K>.hasKey"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.hasKey"
  package: "com.google.cloud.datastore"
- uid: "K"
  spec.java:
  - uid: "K"
    name: "K"
    fullName: "K"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getKey*"
  name: "getKey"
  nameWithType: "BaseEntity<K>.getKey"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getKey"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity.contains*"
  name: "contains"
  nameWithType: "BaseEntity<K>.contains"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.contains"
  package: "com.google.cloud.datastore"
- uid: "V"
  spec.java:
  - uid: "V"
    name: "V"
    fullName: "V"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getValue*"
  name: "<V>getValue"
  nameWithType: "BaseEntity<K>.<V>getValue"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.<V>getValue"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity.isNull*"
  name: "isNull"
  nameWithType: "BaseEntity<K>.isNull"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.isNull"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity.getString*"
  name: "getString"
  nameWithType: "BaseEntity<K>.getString"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getString"
  package: "com.google.cloud.datastore"
- uid: "long"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getLong*"
  name: "getLong"
  nameWithType: "BaseEntity<K>.getLong"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getLong"
  package: "com.google.cloud.datastore"
- uid: "double"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getDouble*"
  name: "getDouble"
  nameWithType: "BaseEntity<K>.getDouble"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getDouble"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseEntity.getBoolean*"
  name: "getBoolean"
  nameWithType: "BaseEntity<K>.getBoolean"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getBoolean"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.Timestamp"
  spec.java:
  - uid: "com.google.cloud.Timestamp"
    name: "Timestamp"
    fullName: "com.google.cloud.Timestamp"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getTimestamp*"
  name: "getTimestamp"
  nameWithType: "BaseEntity<K>.getTimestamp"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getTimestamp"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.LatLng"
  name: "LatLng"
  nameWithType: "LatLng"
  fullName: "com.google.cloud.datastore.LatLng"
- uid: "com.google.cloud.datastore.BaseEntity.getLatLng*"
  name: "getLatLng"
  nameWithType: "BaseEntity<K>.getLatLng"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getLatLng"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Key"
  name: "Key"
  nameWithType: "Key"
  fullName: "com.google.cloud.datastore.Key"
- uid: "com.google.cloud.datastore.FullEntity<K>"
  spec.java:
  - uid: "com.google.cloud.datastore.FullEntity"
    name: "FullEntity"
    fullName: "com.google.cloud.datastore.FullEntity"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "K"
    name: "K"
    fullName: "K"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getEntity*"
  name: "<K>getEntity"
  nameWithType: "BaseEntity<K>.<K>getEntity"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.<K>getEntity"
  package: "com.google.cloud.datastore"
- uid: "java.util.List<T>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "T"
    name: "T"
    fullName: "T"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getList*"
  name: "<T>getList"
  nameWithType: "BaseEntity<K>.<T>getList"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.<T>getList"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.Blob"
  name: "Blob"
  nameWithType: "Blob"
  fullName: "com.google.cloud.datastore.Blob"
- uid: "com.google.cloud.datastore.BaseEntity.getBlob*"
  name: "getBlob"
  nameWithType: "BaseEntity<K>.getBlob"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getBlob"
  package: "com.google.cloud.datastore"
- uid: "java.util.Set<java.lang.String>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Set<java/lang/String>.html"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getNames*"
  name: "getNames"
  nameWithType: "BaseEntity<K>.getNames"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getNames"
  package: "com.google.cloud.datastore"
- uid: "java.util.Map<java.lang.String,com.google.cloud.datastore.Value<?>>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Map<java/lang/String,com/google/cloud/datastore/Value<?>>.html"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  - name: ","
    fullName: ","
    isExternal: false
  - uid: "com.google.cloud.datastore.Value"
    name: "Value"
    fullName: "com.google.cloud.datastore.Value"
    isExternal: false
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "?"
    name: "?"
    fullName: "?"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseEntity.getProperties*"
  name: "getProperties"
  nameWithType: "BaseEntity<K>.getProperties"
  fullName: "com.google.cloud.datastore.BaseEntity<K>.getProperties"
  package: "com.google.cloud.datastore"
- uid: "java.io.Serializable"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.datastore.BaseEntity.Builder"
  name: "BaseEntity.Builder<K,B>"
  nameWithType: "BaseEntity.Builder<K,B>"
  fullName: "com.google.cloud.datastore.BaseEntity.Builder<K,B>"
- uid: "K,?"
  name: "K,?"
  nameWithType: "K,?"
  fullName: "K,?"
- uid: "com.google.cloud.datastore.FullEntity"
  name: "FullEntity"
  nameWithType: "FullEntity"
  fullName: "com.google.cloud.datastore.FullEntity"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.util.Set"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
- uid: "java.util.Map"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,com.google.cloud.datastore.Value"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String,com/google/cloud/datastore/Value.html"
  name: "String,Value"
  nameWithType: "String,Value"
  fullName: "java.lang.String,com.google.cloud.datastore.Value"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
