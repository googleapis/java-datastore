### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.BaseKey.Builder"
  id: "Builder"
  parent: "com.google.cloud.datastore"
  children:
  - "com.google.cloud.datastore.BaseKey.Builder.addAncestor(com.google.cloud.datastore.PathElement)"
  - "com.google.cloud.datastore.BaseKey.Builder.addAncestors(com.google.cloud.datastore.PathElement,com.google.cloud.datastore.PathElement...)"
  - "com.google.cloud.datastore.BaseKey.Builder.addAncestors(java.lang.Iterable<com.google.cloud.datastore.PathElement>)"
  - "com.google.cloud.datastore.BaseKey.Builder.build()"
  - "com.google.cloud.datastore.BaseKey.Builder.setDatabaseId(java.lang.String)"
  - "com.google.cloud.datastore.BaseKey.Builder.setKind(java.lang.String)"
  - "com.google.cloud.datastore.BaseKey.Builder.setNamespace(java.lang.String)"
  - "com.google.cloud.datastore.BaseKey.Builder.setProjectId(java.lang.String)"
  langs:
  - "java"
  name: "BaseKey.Builder<B>"
  nameWithType: "BaseKey.Builder<B>"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>"
  type: "Class"
  package: "com.google.cloud.datastore"
  summary: "Base class for key builders."
  syntax:
    content: "public abstract static class BaseKey.Builder<B>"
    typeParameters:
    - id: "B"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.BaseKey.Builder.Builder(com.google.cloud.datastore.BaseKey)"
  id: "Builder(com.google.cloud.datastore.BaseKey)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "Builder(BaseKey copyFrom)"
  nameWithType: "BaseKey.Builder<B>.Builder(BaseKey copyFrom)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.Builder(BaseKey copyFrom)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Builder(BaseKey copyFrom)"
    parameters:
    - id: "copyFrom"
      type: "com.google.cloud.datastore.BaseKey"
- uid: "com.google.cloud.datastore.BaseKey.Builder.Builder(java.lang.String)"
  id: "Builder(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "Builder(String projectId)"
  nameWithType: "BaseKey.Builder<B>.Builder(String projectId)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.Builder(String projectId)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Builder(String projectId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.BaseKey.Builder.Builder(java.lang.String,java.lang.String)"
  id: "Builder(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "Builder(String projectId, String kind)"
  nameWithType: "BaseKey.Builder<B>.Builder(String projectId, String kind)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.Builder(String projectId, String kind)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.datastore"
  syntax:
    content: " Builder(String projectId, String kind)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "kind"
      type: "java.lang.String"
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestor(com.google.cloud.datastore.PathElement)"
  id: "addAncestor(com.google.cloud.datastore.PathElement)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "addAncestor(PathElement ancestor)"
  nameWithType: "BaseKey.Builder<B>.addAncestor(PathElement ancestor)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.addAncestor(PathElement ancestor)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.addAncestor*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Adds an ancestor for this key."
  syntax:
    content: "public B addAncestor(PathElement ancestor)"
    parameters:
    - id: "ancestor"
      type: "com.google.cloud.datastore.PathElement"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestors(com.google.cloud.datastore.PathElement,com.google.cloud.datastore.PathElement...)"
  id: "addAncestors(com.google.cloud.datastore.PathElement,com.google.cloud.datastore.PathElement...)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "addAncestors(PathElement ancestor, PathElement[] other)"
  nameWithType: "BaseKey.Builder<B>.addAncestors(PathElement ancestor, PathElement[] other)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.addAncestors(PathElement ancestor, PathElement[] other)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.addAncestors*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Adds the provided ancestors to the key."
  syntax:
    content: "public B addAncestors(PathElement ancestor, PathElement[] other)"
    parameters:
    - id: "ancestor"
      type: "com.google.cloud.datastore.PathElement"
    - id: "other"
      type: "com.google.cloud.datastore.PathElement[]"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestors(java.lang.Iterable<com.google.cloud.datastore.PathElement>)"
  id: "addAncestors(java.lang.Iterable<com.google.cloud.datastore.PathElement>)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "addAncestors(Iterable<PathElement> ancestors)"
  nameWithType: "BaseKey.Builder<B>.addAncestors(Iterable<PathElement> ancestors)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.addAncestors(Iterable<PathElement> ancestors)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.addAncestors*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Adds the provided ancestors to the key."
  syntax:
    content: "public B addAncestors(Iterable<PathElement> ancestors)"
    parameters:
    - id: "ancestors"
      type: "java.lang.Iterable<com.google.cloud.datastore.PathElement>"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseKey.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "BaseKey.Builder<B>.build()"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.build()"
  overload: "com.google.cloud.datastore.BaseKey.Builder.build*"
  type: "Method"
  package: "com.google.cloud.datastore"
  syntax:
    content: "protected abstract BaseKey build()"
    return:
      type: "com.google.cloud.datastore.BaseKey"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setDatabaseId(java.lang.String)"
  id: "setDatabaseId(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "setDatabaseId(String databaseId)"
  nameWithType: "BaseKey.Builder<B>.setDatabaseId(String databaseId)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.setDatabaseId(String databaseId)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.setDatabaseId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets the database id of the key."
  syntax:
    content: "public B setDatabaseId(String databaseId)"
    parameters:
    - id: "databaseId"
      type: "java.lang.String"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setKind(java.lang.String)"
  id: "setKind(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "setKind(String kind)"
  nameWithType: "BaseKey.Builder<B>.setKind(String kind)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.setKind(String kind)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.setKind*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets the kind of the key."
  syntax:
    content: "public B setKind(String kind)"
    parameters:
    - id: "kind"
      type: "java.lang.String"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setNamespace(java.lang.String)"
  id: "setNamespace(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "setNamespace(String namespace)"
  nameWithType: "BaseKey.Builder<B>.setNamespace(String namespace)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.setNamespace(String namespace)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.setNamespace*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets the namespace of the key."
  syntax:
    content: "public B setNamespace(String namespace)"
    parameters:
    - id: "namespace"
      type: "java.lang.String"
    return:
      type: "B"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setProjectId(java.lang.String)"
  id: "setProjectId(java.lang.String)"
  parent: "com.google.cloud.datastore.BaseKey.Builder"
  langs:
  - "java"
  name: "setProjectId(String projectId)"
  nameWithType: "BaseKey.Builder<B>.setProjectId(String projectId)"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.setProjectId(String projectId)"
  overload: "com.google.cloud.datastore.BaseKey.Builder.setProjectId*"
  type: "Method"
  package: "com.google.cloud.datastore"
  summary: "Sets the project ID of the key."
  syntax:
    content: "public B setProjectId(String projectId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    return:
      type: "B"
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.BaseKey.Builder.Builder*"
  name: "Builder"
  nameWithType: "BaseKey.Builder<B>.Builder"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.Builder"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey"
  name: "BaseKey"
  nameWithType: "BaseKey"
  fullName: "com.google.cloud.datastore.BaseKey"
- uid: "com.google.cloud.datastore.PathElement"
  name: "PathElement"
  nameWithType: "PathElement"
  fullName: "com.google.cloud.datastore.PathElement"
- uid: "B"
  spec.java:
  - uid: "B"
    name: "B"
    fullName: "B"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestor*"
  name: "addAncestor"
  nameWithType: "BaseKey.Builder<B>.addAncestor"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.addAncestor"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.PathElement[]"
  spec.java:
  - uid: "com.google.cloud.datastore.PathElement"
    name: "PathElement"
    fullName: "com.google.cloud.datastore.PathElement"
    isExternal: false
  - name: "[]"
    fullName: "[]"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseKey.Builder.addAncestors*"
  name: "addAncestors"
  nameWithType: "BaseKey.Builder<B>.addAncestors"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.addAncestors"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Iterable<com.google.cloud.datastore.PathElement>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable<com/google/cloud/datastore/PathElement>.html"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.datastore.PathElement"
    name: "PathElement"
    fullName: "com.google.cloud.datastore.PathElement"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.BaseKey.Builder.setKind*"
  name: "setKind"
  nameWithType: "BaseKey.Builder<B>.setKind"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.setKind"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setProjectId*"
  name: "setProjectId"
  nameWithType: "BaseKey.Builder<B>.setProjectId"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.setProjectId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setNamespace*"
  name: "setNamespace"
  nameWithType: "BaseKey.Builder<B>.setNamespace"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.setNamespace"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.Builder.setDatabaseId*"
  name: "setDatabaseId"
  nameWithType: "BaseKey.Builder<B>.setDatabaseId"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.setDatabaseId"
  package: "com.google.cloud.datastore"
- uid: "com.google.cloud.datastore.BaseKey.Builder.build*"
  name: "build"
  nameWithType: "BaseKey.Builder<B>.build"
  fullName: "com.google.cloud.datastore.BaseKey.Builder<B>.build"
  package: "com.google.cloud.datastore"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Iterable"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
