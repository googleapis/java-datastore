### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  id: "LocalDatastoreHelper"
  parent: "com.google.cloud.datastore.testing"
  children:
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.create()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(double)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(double,int)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(int)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.getConsistency()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.getEmulatorRunners()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.getGcdPath()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.getLogger()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions(java.lang.String)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.isStoreOnDisk()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.newBuilder()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.reset()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.setNamespace(java.lang.String)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.start()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop()"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop(org.threeten.bp.Duration)"
  - "com.google.cloud.datastore.testing.LocalDatastoreHelper.toBuilder()"
  langs:
  - "java"
  name: "LocalDatastoreHelper"
  nameWithType: "LocalDatastoreHelper"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  type: "Class"
  package: "com.google.cloud.datastore.testing"
  summary: "Utility to start and stop local Google Cloud Datastore emulators.\n\n <p>This class is unstable."
  syntax:
    content: "public class LocalDatastoreHelper extends BaseEmulatorHelper<DatastoreOptions>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.testing.BaseEmulatorHelper"
  inheritedMembers:
  - "com.google.cloud.testing.BaseEmulatorHelper.findAvailablePort(int)"
  - "com.google.cloud.testing.BaseEmulatorHelper.getEmulatorRunners()"
  - "com.google.cloud.testing.BaseEmulatorHelper.getLogger()"
  - "com.google.cloud.testing.BaseEmulatorHelper.getOptions()"
  - "com.google.cloud.testing.BaseEmulatorHelper.getPort()"
  - "com.google.cloud.testing.BaseEmulatorHelper.getProjectId()"
  - "com.google.cloud.testing.BaseEmulatorHelper.isWindows()"
  - "com.google.cloud.testing.BaseEmulatorHelper.reset()"
  - "com.google.cloud.testing.BaseEmulatorHelper.sendPostRequest(java.lang.String)"
  - "com.google.cloud.testing.BaseEmulatorHelper.start()"
  - "com.google.cloud.testing.BaseEmulatorHelper.startProcess(java.lang.String)"
  - "com.google.cloud.testing.BaseEmulatorHelper.stop(org.threeten.bp.Duration)"
  - "com.google.cloud.testing.BaseEmulatorHelper.waitForProcess(org.threeten.bp.Duration)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.LocalDatastoreHelper(com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder)"
  id: "LocalDatastoreHelper(com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "LocalDatastoreHelper(LocalDatastoreHelper.Builder builder)"
  nameWithType: "LocalDatastoreHelper.LocalDatastoreHelper(LocalDatastoreHelper.Builder builder)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.LocalDatastoreHelper(LocalDatastoreHelper.Builder builder)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.LocalDatastoreHelper*"
  type: "Constructor"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "private LocalDatastoreHelper(LocalDatastoreHelper.Builder builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create()"
  id: "create()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "create()"
  nameWithType: "LocalDatastoreHelper.create()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Creates a local Datastore helper with a placeholder project ID and the default consistency\n setting of 0.9. Consistency refers to the fraction of Datastore writes that are immediately\n visible to global queries, with 0.0 meaning no writes are immediately visible and 1.0 meaning\n all writes are immediately visible."
  syntax:
    content: "public static LocalDatastoreHelper create()"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  javaType: "static method"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(double)"
  id: "create(double)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "create(double consistency)"
  nameWithType: "LocalDatastoreHelper.create(double consistency)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(double consistency)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Creates a local Datastore helper with the specified settings for project ID and consistency."
  syntax:
    content: "public static LocalDatastoreHelper create(double consistency)"
    parameters:
    - id: "consistency"
      type: "double"
      description: "the fraction of Datastore writes that are immediately visible to global\n     queries, with 0.0 meaning no writes are immediately visible and 1.0 meaning all writes are\n     immediately visible. Note that setting this to 1.0 may mask incorrect assumptions about the\n     consistency of non-ancestor queries; non-ancestor queries are eventually consistent."
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  javaType: "static method"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(double,int)"
  id: "create(double,int)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "create(double consistency, int port)"
  nameWithType: "LocalDatastoreHelper.create(double consistency, int port)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(double consistency, int port)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Creates a local Datastore helper with the specified settings for project ID and consistency."
  syntax:
    content: "public static LocalDatastoreHelper create(double consistency, int port)"
    parameters:
    - id: "consistency"
      type: "double"
      description: "the fraction of Datastore writes that are immediately visible to global\n     queries, with 0.0 meaning no writes are immediately visible and 1.0 meaning all writes are\n     immediately visible. Note that setting this to 1.0 may mask incorrect assumptions about the\n     consistency of non-ancestor queries; non-ancestor queries are eventually consistent."
    - id: "port"
      type: "int"
      description: "the port to be used to start the emulator service. Note that setting this to 0 the\n     emulator will search for a free random port."
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  javaType: "static method"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(int)"
  id: "create(int)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "create(int port)"
  nameWithType: "LocalDatastoreHelper.create(int port)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create(int port)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Creates a local Datastore helper with a placeholder project ID and the default consistency\n setting of 0.9."
  syntax:
    content: "public static LocalDatastoreHelper create(int port)"
    parameters:
    - id: "port"
      type: "int"
      description: "the port to be used to start the emulator service. Note that setting this to 0 the\n     emulator will search for a free random port."
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  javaType: "static method"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getConsistency()"
  id: "getConsistency()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "getConsistency()"
  nameWithType: "LocalDatastoreHelper.getConsistency()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getConsistency()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getConsistency*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Returns the consistency setting for the local Datastore emulator."
  syntax:
    content: "public double getConsistency()"
    return:
      type: "double"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getEmulatorRunners()"
  id: "getEmulatorRunners()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "getEmulatorRunners()"
  nameWithType: "LocalDatastoreHelper.getEmulatorRunners()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getEmulatorRunners()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getEmulatorRunners*"
  overridden: "com.google.cloud.testing.BaseEmulatorHelper.getEmulatorRunners()"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "protected List<BaseEmulatorHelper.EmulatorRunner> getEmulatorRunners()"
    return:
      type: "java.util.List<com.google.cloud.testing.BaseEmulatorHelper.EmulatorRunner>"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getGcdPath()"
  id: "getGcdPath()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "getGcdPath()"
  nameWithType: "LocalDatastoreHelper.getGcdPath()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getGcdPath()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getGcdPath*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Returns the data directory path of the local Datastore emulator."
  syntax:
    content: "public Path getGcdPath()"
    return:
      type: "java.nio.file.Path"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getLogger()"
  id: "getLogger()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "getLogger()"
  nameWithType: "LocalDatastoreHelper.getLogger()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getLogger()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getLogger*"
  overridden: "com.google.cloud.testing.BaseEmulatorHelper.getLogger()"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "protected Logger getLogger()"
    return:
      type: "java.util.logging.Logger"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions()"
  id: "getOptions()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "getOptions()"
  nameWithType: "LocalDatastoreHelper.getOptions()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions*"
  overridden: "com.google.cloud.testing.BaseEmulatorHelper.getOptions()"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Returns a <xref uid=\"com.google.cloud.datastore.DatastoreOptions\" data-throw-if-not-resolved=\"false\">DatastoreOptions</xref> instance that sets the host to use the Datastore emulator on\n localhost."
  syntax:
    content: "public DatastoreOptions getOptions()"
    return:
      type: "com.google.cloud.datastore.DatastoreOptions"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions(java.lang.String)"
  id: "getOptions(java.lang.String)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "getOptions(String namespace)"
  nameWithType: "LocalDatastoreHelper.getOptions(String namespace)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions(String namespace)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Returns a <xref uid=\"com.google.cloud.datastore.DatastoreOptions\" data-throw-if-not-resolved=\"false\">DatastoreOptions</xref> instance that sets the host to use the Datastore emulator on\n localhost. The default namespace is set to <code>namespace</code>.\n\n <p>Please use setNamespace and then build() instead."
  syntax:
    content: "public DatastoreOptions getOptions(String namespace)"
    parameters:
    - id: "namespace"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.DatastoreOptions"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.isStoreOnDisk()"
  id: "isStoreOnDisk()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "isStoreOnDisk()"
  nameWithType: "LocalDatastoreHelper.isStoreOnDisk()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.isStoreOnDisk()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.isStoreOnDisk*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Returns <code>true</code> data persist on disk, otherwise <code>false</code> data not store on disk."
  syntax:
    content: "public boolean isStoreOnDisk()"
    return:
      type: "boolean"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "LocalDatastoreHelper.newBuilder()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.newBuilder()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.newBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Returns a builder for <code>LocalDatastoreHelper</code> object."
  syntax:
    content: "public static LocalDatastoreHelper.Builder newBuilder()"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  javaType: "static method"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.reset()"
  id: "reset()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "reset()"
  nameWithType: "LocalDatastoreHelper.reset()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.reset()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.reset*"
  overridden: "com.google.cloud.testing.BaseEmulatorHelper.reset()"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Resets the internal state of the Datastore emulator.\n\n <p>When running tests, one might <code>reset()</code> before each test, so earlier tests would not\n affect later ones."
  syntax:
    content: "public void reset()"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.setNamespace(java.lang.String)"
  id: "setNamespace(java.lang.String)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "setNamespace(String namespace)"
  nameWithType: "LocalDatastoreHelper.setNamespace(String namespace)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.setNamespace(String namespace)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.setNamespace*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  syntax:
    content: "public DatastoreOptions.Builder setNamespace(String namespace)"
    parameters:
    - id: "namespace"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.datastore.DatastoreOptions.Builder"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.start()"
  id: "start()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "start()"
  nameWithType: "LocalDatastoreHelper.start()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.start()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.start*"
  overridden: "com.google.cloud.testing.BaseEmulatorHelper.start()"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Starts the local Datastore emulator through <code>gcloud</code>, downloads and caches the zip file\n if user does not have <code>gcloud</code> or a compatible emulator version installed.\n\n <p>Currently the emulator does not persist any state across runs."
  syntax:
    content: "public void start()"
  exceptions:
  - type: "java.io.IOException"
  - type: "java.lang.InterruptedException"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop()"
  id: "stop()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "stop()"
  nameWithType: "LocalDatastoreHelper.stop()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Stops the Datastore emulator. The same as <xref uid=\"com.google.cloud.datastore.testing.LocalDatastoreHelper.stop(org.threeten.bp.Duration)\" data-throw-if-not-resolved=\"false\">#stop(Duration)</xref> but with timeout duration of\n 20 seconds.\n\n <p>It is important to stop the emulator. Since the emulator runs in its own process, not\n stopping it might cause it to become orphan.\n\n <p>It is not required to call <xref uid=\"com.google.cloud.datastore.testing.LocalDatastoreHelper.reset()\" data-throw-if-not-resolved=\"false\">#reset()</xref> before <code>stop()</code>."
  syntax:
    content: "public void stop()"
  exceptions:
  - type: "java.io.IOException"
  - type: "java.lang.InterruptedException"
  - type: "java.util.concurrent.TimeoutException"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop(org.threeten.bp.Duration)"
  id: "stop(org.threeten.bp.Duration)"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "stop(Duration timeout)"
  nameWithType: "LocalDatastoreHelper.stop(Duration timeout)"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop(Duration timeout)"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop*"
  overridden: "com.google.cloud.testing.BaseEmulatorHelper.stop(org.threeten.bp.Duration)"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Stops the Datastore emulator.\n\n <p>It is important to stop the emulator. Since the emulator runs in its own process, not\n stopping it might cause it to become orphan.\n\n <p>It is not required to call <xref uid=\"com.google.cloud.datastore.testing.LocalDatastoreHelper.reset()\" data-throw-if-not-resolved=\"false\">#reset()</xref> before <code>stop</code>."
  syntax:
    content: "public void stop(Duration timeout)"
    parameters:
    - id: "timeout"
      type: "org.threeten.bp.Duration"
      description: "The duration to wait for the emulator process to stop. It is recommended to set\n     this value high to ensure proper shutdown, like 5 seconds or more."
  exceptions:
  - type: "java.io.IOException"
  - type: "java.lang.InterruptedException"
  - type: "java.util.concurrent.TimeoutException"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.datastore.testing.LocalDatastoreHelper"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "LocalDatastoreHelper.toBuilder()"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.toBuilder()"
  overload: "com.google.cloud.datastore.testing.LocalDatastoreHelper.toBuilder*"
  type: "Method"
  package: "com.google.cloud.datastore.testing"
  summary: "Returns a builder for <code>LocalDatastoreHelper</code> object."
  syntax:
    content: "public LocalDatastoreHelper.Builder toBuilder()"
    return:
      type: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
references:
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
  name: "LocalDatastoreHelper.Builder"
  nameWithType: "LocalDatastoreHelper.Builder"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.Builder"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.LocalDatastoreHelper*"
  name: "LocalDatastoreHelper"
  nameWithType: "LocalDatastoreHelper.LocalDatastoreHelper"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.LocalDatastoreHelper"
  package: "com.google.cloud.datastore.testing"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.toBuilder*"
  name: "toBuilder"
  nameWithType: "LocalDatastoreHelper.toBuilder"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.toBuilder"
  package: "com.google.cloud.datastore.testing"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.newBuilder*"
  name: "newBuilder"
  nameWithType: "LocalDatastoreHelper.newBuilder"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.newBuilder"
  package: "com.google.cloud.datastore.testing"
- uid: "java.util.List<com.google.cloud.testing.BaseEmulatorHelper.EmulatorRunner>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/cloud/testing/BaseEmulatorHelper/EmulatorRunner>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.cloud.testing.BaseEmulatorHelper.EmulatorRunner"
    name: "EmulatorRunner"
    fullName: "com.google.cloud.testing.BaseEmulatorHelper.EmulatorRunner"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getEmulatorRunners*"
  name: "getEmulatorRunners"
  nameWithType: "LocalDatastoreHelper.getEmulatorRunners"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getEmulatorRunners"
  package: "com.google.cloud.datastore.testing"
- uid: "java.util.logging.Logger"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html"
  spec.java:
  - uid: "java.util.logging.Logger"
    name: "Logger"
    fullName: "java.util.logging.Logger"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getLogger*"
  name: "getLogger"
  nameWithType: "LocalDatastoreHelper.getLogger"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getLogger"
  package: "com.google.cloud.datastore.testing"
- uid: "com.google.cloud.datastore.DatastoreOptions"
  name: "DatastoreOptions"
  nameWithType: "DatastoreOptions"
  fullName: "com.google.cloud.datastore.DatastoreOptions"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions*"
  name: "getOptions"
  nameWithType: "LocalDatastoreHelper.getOptions"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getOptions"
  package: "com.google.cloud.datastore.testing"
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.cloud.datastore.DatastoreOptions.Builder"
  name: "DatastoreOptions.Builder"
  nameWithType: "DatastoreOptions.Builder"
  fullName: "com.google.cloud.datastore.DatastoreOptions.Builder"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.setNamespace*"
  name: "setNamespace"
  nameWithType: "LocalDatastoreHelper.setNamespace"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.setNamespace"
  package: "com.google.cloud.datastore.testing"
- uid: "double"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
    isExternal: false
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getConsistency*"
  name: "getConsistency"
  nameWithType: "LocalDatastoreHelper.getConsistency"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getConsistency"
  package: "com.google.cloud.datastore.testing"
- uid: "java.nio.file.Path"
  href: "https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html"
  spec.java:
  - uid: "java.nio.file.Path"
    name: "Path"
    fullName: "java.nio.file.Path"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getGcdPath*"
  name: "getGcdPath"
  nameWithType: "LocalDatastoreHelper.getGcdPath"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.getGcdPath"
  package: "com.google.cloud.datastore.testing"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.isStoreOnDisk*"
  name: "isStoreOnDisk"
  nameWithType: "LocalDatastoreHelper.isStoreOnDisk"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.isStoreOnDisk"
  package: "com.google.cloud.datastore.testing"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create*"
  name: "create"
  nameWithType: "LocalDatastoreHelper.create"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.create"
  package: "com.google.cloud.datastore.testing"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "java.io.IOException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html"
- uid: "java.lang.InterruptedException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.start*"
  name: "start"
  nameWithType: "LocalDatastoreHelper.start"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.start"
  package: "com.google.cloud.datastore.testing"
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.reset*"
  name: "reset"
  nameWithType: "LocalDatastoreHelper.reset"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.reset"
  package: "com.google.cloud.datastore.testing"
- uid: "java.util.concurrent.TimeoutException"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeoutException.html"
  spec.java:
  - uid: "java.util.concurrent.TimeoutException"
    name: "TimeoutException"
    fullName: "java.util.concurrent.TimeoutException"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeoutException.html"
- uid: "org.threeten.bp.Duration"
  spec.java:
  - uid: "org.threeten.bp.Duration"
    name: "Duration"
    fullName: "org.threeten.bp.Duration"
    isExternal: false
- uid: "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop*"
  name: "stop"
  nameWithType: "LocalDatastoreHelper.stop"
  fullName: "com.google.cloud.datastore.testing.LocalDatastoreHelper.stop"
  package: "com.google.cloud.datastore.testing"
- uid: "com.google.cloud.testing.BaseEmulatorHelper<com.google.cloud.datastore.DatastoreOptions>"
  name: "BaseEmulatorHelper<DatastoreOptions>"
  nameWithType: "BaseEmulatorHelper<DatastoreOptions>"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper<com.google.cloud.datastore.DatastoreOptions>"
- uid: "java.lang.Object.notify()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.stop(org.threeten.bp.Duration)"
  name: "BaseEmulatorHelper.stop(Duration)"
  nameWithType: "BaseEmulatorHelper.stop(Duration)"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.stop(org.threeten.bp.Duration)"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.getProjectId()"
  name: "BaseEmulatorHelper.getProjectId()"
  nameWithType: "BaseEmulatorHelper.getProjectId()"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.getProjectId()"
- uid: "java.lang.Object.notifyAll()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.getOptions()"
  name: "BaseEmulatorHelper.getOptions()"
  nameWithType: "BaseEmulatorHelper.getOptions()"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.getOptions()"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.isWindows()"
  name: "BaseEmulatorHelper.isWindows()"
  nameWithType: "BaseEmulatorHelper.isWindows()"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.isWindows()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.getEmulatorRunners()"
  name: "BaseEmulatorHelper.getEmulatorRunners()"
  nameWithType: "BaseEmulatorHelper.getEmulatorRunners()"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.getEmulatorRunners()"
- uid: "java.lang.Object.toString()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.startProcess(java.lang.String)"
  name: "BaseEmulatorHelper.startProcess(String)"
  nameWithType: "BaseEmulatorHelper.startProcess(String)"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.startProcess(java.lang.String)"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.sendPostRequest(java.lang.String)"
  name: "BaseEmulatorHelper.sendPostRequest(String)"
  nameWithType: "BaseEmulatorHelper.sendPostRequest(String)"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.sendPostRequest(java.lang.String)"
- uid: "java.lang.Object.getClass()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.getLogger()"
  name: "BaseEmulatorHelper.getLogger()"
  nameWithType: "BaseEmulatorHelper.getLogger()"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.getLogger()"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.waitForProcess(org.threeten.bp.Duration)"
  name: "BaseEmulatorHelper.waitForProcess(Duration)"
  nameWithType: "BaseEmulatorHelper.waitForProcess(Duration)"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.waitForProcess(org.threeten.bp.Duration)"
- uid: "java.lang.Object.hashCode()"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.reset()"
  name: "BaseEmulatorHelper.reset()"
  nameWithType: "BaseEmulatorHelper.reset()"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.reset()"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.getPort()"
  name: "BaseEmulatorHelper.getPort()"
  nameWithType: "BaseEmulatorHelper.getPort()"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.getPort()"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.start()"
  name: "BaseEmulatorHelper.start()"
  nameWithType: "BaseEmulatorHelper.start()"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.start()"
- uid: "java.lang.Object.wait(long,int)"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.findAvailablePort(int)"
  name: "BaseEmulatorHelper.findAvailablePort(int)"
  nameWithType: "BaseEmulatorHelper.findAvailablePort(int)"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.findAvailablePort(int)"
- uid: "com.google.cloud.testing.BaseEmulatorHelper.EmulatorRunner"
  name: "BaseEmulatorHelper.EmulatorRunner"
  nameWithType: "BaseEmulatorHelper.EmulatorRunner"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper.EmulatorRunner"
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.testing.BaseEmulatorHelper"
  name: "BaseEmulatorHelper"
  nameWithType: "BaseEmulatorHelper"
  fullName: "com.google.cloud.testing.BaseEmulatorHelper"
