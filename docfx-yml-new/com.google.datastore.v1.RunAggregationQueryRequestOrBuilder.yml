### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  id: "RunAggregationQueryRequestOrBuilder"
  parent: "com.google.datastore.v1"
  children:
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQuery()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQueryOrBuilder()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseId()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseIdBytes()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQuery()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQueryOrBuilder()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionId()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionIdOrBuilder()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectId()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectIdBytes()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getQueryTypeCase()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptions()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptionsOrBuilder()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasAggregationQuery()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasGqlQuery()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasPartitionId()"
  - "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasReadOptions()"
  langs:
  - "java"
  name: "RunAggregationQueryRequestOrBuilder"
  nameWithType: "RunAggregationQueryRequestOrBuilder"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  type: "Interface"
  package: "com.google.datastore.v1"
  syntax:
    content: "public interface RunAggregationQueryRequestOrBuilder extends MessageOrBuilder"
  implements:
  - "com.google.protobuf.MessageOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQuery()"
  id: "getAggregationQuery()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getAggregationQuery()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getAggregationQuery()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQuery()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQuery*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The query to run.\n \n\n <code>.google.datastore.v1.AggregationQuery aggregation_query = 3;</code>"
  syntax:
    content: "public abstract AggregationQuery getAggregationQuery()"
    return:
      type: "com.google.datastore.v1.AggregationQuery"
      description: "The aggregationQuery."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQueryOrBuilder()"
  id: "getAggregationQueryOrBuilder()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getAggregationQueryOrBuilder()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getAggregationQueryOrBuilder()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQueryOrBuilder()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQueryOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The query to run.\n \n\n <code>.google.datastore.v1.AggregationQuery aggregation_query = 3;</code>"
  syntax:
    content: "public abstract AggregationQueryOrBuilder getAggregationQueryOrBuilder()"
    return:
      type: "com.google.datastore.v1.AggregationQueryOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseId()"
  id: "getDatabaseId()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getDatabaseId()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getDatabaseId()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseId()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseId*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The ID of the database against which to make the request.\n\n '(default)' is not allowed; please use empty string '' to refer the default\n database.\n \n\n <code>string database_id = 9;</code>"
  syntax:
    content: "public abstract String getDatabaseId()"
    return:
      type: "java.lang.String"
      description: "The databaseId."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseIdBytes()"
  id: "getDatabaseIdBytes()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getDatabaseIdBytes()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getDatabaseIdBytes()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseIdBytes()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseIdBytes*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The ID of the database against which to make the request.\n\n '(default)' is not allowed; please use empty string '' to refer the default\n database.\n \n\n <code>string database_id = 9;</code>"
  syntax:
    content: "public abstract ByteString getDatabaseIdBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for databaseId."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQuery()"
  id: "getGqlQuery()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getGqlQuery()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getGqlQuery()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQuery()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQuery*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The GQL query to run. This query must be an aggregation query.\n \n\n <code>.google.datastore.v1.GqlQuery gql_query = 7;</code>"
  syntax:
    content: "public abstract GqlQuery getGqlQuery()"
    return:
      type: "com.google.datastore.v1.GqlQuery"
      description: "The gqlQuery."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQueryOrBuilder()"
  id: "getGqlQueryOrBuilder()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getGqlQueryOrBuilder()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getGqlQueryOrBuilder()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQueryOrBuilder()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQueryOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The GQL query to run. This query must be an aggregation query.\n \n\n <code>.google.datastore.v1.GqlQuery gql_query = 7;</code>"
  syntax:
    content: "public abstract GqlQueryOrBuilder getGqlQueryOrBuilder()"
    return:
      type: "com.google.datastore.v1.GqlQueryOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionId()"
  id: "getPartitionId()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getPartitionId()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getPartitionId()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionId()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionId*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Entities are partitioned into subsets, identified by a partition ID.\n Queries are scoped to a single partition.\n This partition ID is normalized with the standard default context\n partition ID.\n \n\n <code>.google.datastore.v1.PartitionId partition_id = 2;</code>"
  syntax:
    content: "public abstract PartitionId getPartitionId()"
    return:
      type: "com.google.datastore.v1.PartitionId"
      description: "The partitionId."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionIdOrBuilder()"
  id: "getPartitionIdOrBuilder()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getPartitionIdOrBuilder()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getPartitionIdOrBuilder()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionIdOrBuilder()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionIdOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Entities are partitioned into subsets, identified by a partition ID.\n Queries are scoped to a single partition.\n This partition ID is normalized with the standard default context\n partition ID.\n \n\n <code>.google.datastore.v1.PartitionId partition_id = 2;</code>"
  syntax:
    content: "public abstract PartitionIdOrBuilder getPartitionIdOrBuilder()"
    return:
      type: "com.google.datastore.v1.PartitionIdOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectId()"
  id: "getProjectId()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getProjectId()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getProjectId()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectId()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectId*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Required. The ID of the project against which to make the request.\n \n\n <code>string project_id = 8 [(.google.api.field_behavior) = REQUIRED];</code>"
  syntax:
    content: "public abstract String getProjectId()"
    return:
      type: "java.lang.String"
      description: "The projectId."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectIdBytes()"
  id: "getProjectIdBytes()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getProjectIdBytes()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getProjectIdBytes()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectIdBytes()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectIdBytes*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Required. The ID of the project against which to make the request.\n \n\n <code>string project_id = 8 [(.google.api.field_behavior) = REQUIRED];</code>"
  syntax:
    content: "public abstract ByteString getProjectIdBytes()"
    return:
      type: "com.google.protobuf.ByteString"
      description: "The bytes for projectId."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getQueryTypeCase()"
  id: "getQueryTypeCase()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getQueryTypeCase()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getQueryTypeCase()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getQueryTypeCase()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getQueryTypeCase*"
  type: "Method"
  package: "com.google.datastore.v1"
  syntax:
    content: "public abstract RunAggregationQueryRequest.QueryTypeCase getQueryTypeCase()"
    return:
      type: "com.google.datastore.v1.RunAggregationQueryRequest.QueryTypeCase"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptions()"
  id: "getReadOptions()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getReadOptions()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getReadOptions()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptions()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptions*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The options for this query.\n \n\n <code>.google.datastore.v1.ReadOptions read_options = 1;</code>"
  syntax:
    content: "public abstract ReadOptions getReadOptions()"
    return:
      type: "com.google.datastore.v1.ReadOptions"
      description: "The readOptions."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptionsOrBuilder()"
  id: "getReadOptionsOrBuilder()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "getReadOptionsOrBuilder()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getReadOptionsOrBuilder()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptionsOrBuilder()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptionsOrBuilder*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The options for this query.\n \n\n <code>.google.datastore.v1.ReadOptions read_options = 1;</code>"
  syntax:
    content: "public abstract ReadOptionsOrBuilder getReadOptionsOrBuilder()"
    return:
      type: "com.google.datastore.v1.ReadOptionsOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasAggregationQuery()"
  id: "hasAggregationQuery()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "hasAggregationQuery()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.hasAggregationQuery()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasAggregationQuery()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasAggregationQuery*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The query to run.\n \n\n <code>.google.datastore.v1.AggregationQuery aggregation_query = 3;</code>"
  syntax:
    content: "public abstract boolean hasAggregationQuery()"
    return:
      type: "boolean"
      description: "Whether the aggregationQuery field is set."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasGqlQuery()"
  id: "hasGqlQuery()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "hasGqlQuery()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.hasGqlQuery()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasGqlQuery()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasGqlQuery*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The GQL query to run. This query must be an aggregation query.\n \n\n <code>.google.datastore.v1.GqlQuery gql_query = 7;</code>"
  syntax:
    content: "public abstract boolean hasGqlQuery()"
    return:
      type: "boolean"
      description: "Whether the gqlQuery field is set."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasPartitionId()"
  id: "hasPartitionId()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "hasPartitionId()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.hasPartitionId()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasPartitionId()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasPartitionId*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n Entities are partitioned into subsets, identified by a partition ID.\n Queries are scoped to a single partition.\n This partition ID is normalized with the standard default context\n partition ID.\n \n\n <code>.google.datastore.v1.PartitionId partition_id = 2;</code>"
  syntax:
    content: "public abstract boolean hasPartitionId()"
    return:
      type: "boolean"
      description: "Whether the partitionId field is set."
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasReadOptions()"
  id: "hasReadOptions()"
  parent: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder"
  langs:
  - "java"
  name: "hasReadOptions()"
  nameWithType: "RunAggregationQueryRequestOrBuilder.hasReadOptions()"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasReadOptions()"
  overload: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasReadOptions*"
  type: "Method"
  package: "com.google.datastore.v1"
  summary: "\n The options for this query.\n \n\n <code>.google.datastore.v1.ReadOptions read_options = 1;</code>"
  syntax:
    content: "public abstract boolean hasReadOptions()"
    return:
      type: "boolean"
      description: "Whether the readOptions field is set."
references:
- uid: "java.lang.String"
  href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectId*"
  name: "getProjectId"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getProjectId"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectId"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.ByteString"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.ByteString"
    name: "ByteString"
    fullName: "com.google.protobuf.ByteString"
    isExternal: true
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectIdBytes*"
  name: "getProjectIdBytes"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getProjectIdBytes"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getProjectIdBytes"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseId*"
  name: "getDatabaseId"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getDatabaseId"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseId"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseIdBytes*"
  name: "getDatabaseIdBytes"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getDatabaseIdBytes"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getDatabaseIdBytes"
  package: "com.google.datastore.v1"
- uid: "boolean"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
    isExternal: false
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasPartitionId*"
  name: "hasPartitionId"
  nameWithType: "RunAggregationQueryRequestOrBuilder.hasPartitionId"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasPartitionId"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.PartitionId"
  name: "PartitionId"
  nameWithType: "PartitionId"
  fullName: "com.google.datastore.v1.PartitionId"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionId*"
  name: "getPartitionId"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getPartitionId"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionId"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.PartitionIdOrBuilder"
  name: "PartitionIdOrBuilder"
  nameWithType: "PartitionIdOrBuilder"
  fullName: "com.google.datastore.v1.PartitionIdOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionIdOrBuilder*"
  name: "getPartitionIdOrBuilder"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getPartitionIdOrBuilder"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getPartitionIdOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasReadOptions*"
  name: "hasReadOptions"
  nameWithType: "RunAggregationQueryRequestOrBuilder.hasReadOptions"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasReadOptions"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.ReadOptions"
  name: "ReadOptions"
  nameWithType: "ReadOptions"
  fullName: "com.google.datastore.v1.ReadOptions"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptions*"
  name: "getReadOptions"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getReadOptions"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptions"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.ReadOptionsOrBuilder"
  name: "ReadOptionsOrBuilder"
  nameWithType: "ReadOptionsOrBuilder"
  fullName: "com.google.datastore.v1.ReadOptionsOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptionsOrBuilder*"
  name: "getReadOptionsOrBuilder"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getReadOptionsOrBuilder"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getReadOptionsOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasAggregationQuery*"
  name: "hasAggregationQuery"
  nameWithType: "RunAggregationQueryRequestOrBuilder.hasAggregationQuery"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasAggregationQuery"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationQuery"
  name: "AggregationQuery"
  nameWithType: "AggregationQuery"
  fullName: "com.google.datastore.v1.AggregationQuery"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQuery*"
  name: "getAggregationQuery"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getAggregationQuery"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQuery"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.AggregationQueryOrBuilder"
  name: "AggregationQueryOrBuilder"
  nameWithType: "AggregationQueryOrBuilder"
  fullName: "com.google.datastore.v1.AggregationQueryOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQueryOrBuilder*"
  name: "getAggregationQueryOrBuilder"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getAggregationQueryOrBuilder"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getAggregationQueryOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasGqlQuery*"
  name: "hasGqlQuery"
  nameWithType: "RunAggregationQueryRequestOrBuilder.hasGqlQuery"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.hasGqlQuery"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.GqlQuery"
  name: "GqlQuery"
  nameWithType: "GqlQuery"
  fullName: "com.google.datastore.v1.GqlQuery"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQuery*"
  name: "getGqlQuery"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getGqlQuery"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQuery"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.GqlQueryOrBuilder"
  name: "GqlQueryOrBuilder"
  nameWithType: "GqlQueryOrBuilder"
  fullName: "com.google.datastore.v1.GqlQueryOrBuilder"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQueryOrBuilder*"
  name: "getGqlQueryOrBuilder"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getGqlQueryOrBuilder"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getGqlQueryOrBuilder"
  package: "com.google.datastore.v1"
- uid: "com.google.datastore.v1.RunAggregationQueryRequest.QueryTypeCase"
  name: "RunAggregationQueryRequest.QueryTypeCase"
  nameWithType: "RunAggregationQueryRequest.QueryTypeCase"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequest.QueryTypeCase"
- uid: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getQueryTypeCase*"
  name: "getQueryTypeCase"
  nameWithType: "RunAggregationQueryRequestOrBuilder.getQueryTypeCase"
  fullName: "com.google.datastore.v1.RunAggregationQueryRequestOrBuilder.getQueryTypeCase"
  package: "com.google.datastore.v1"
- uid: "com.google.protobuf.MessageOrBuilder"
  isExternal: true
  name: "MessageOrBuilder"
  nameWithType: "MessageOrBuilder"
  fullName: "com.google.protobuf.MessageOrBuilder"
