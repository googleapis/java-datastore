### YamlMime:ManagedReference
items:
- uid: "com.google.datastore.v1.client.QuerySplitter"
  id: "QuerySplitter"
  parent: "com.google.datastore.v1.client"
  children:
  - "com.google.datastore.v1.client.QuerySplitter.getSplits(com.google.datastore.v1.Query,com.google.datastore.v1.PartitionId,int,com.google.datastore.v1.client.Datastore)"
  - "com.google.datastore.v1.client.QuerySplitter.getSplits(com.google.datastore.v1.Query,com.google.datastore.v1.PartitionId,int,com.google.datastore.v1.client.Datastore,com.google.protobuf.Timestamp)"
  langs:
  - "java"
  name: "QuerySplitter"
  nameWithType: "QuerySplitter"
  fullName: "com.google.datastore.v1.client.QuerySplitter"
  type: "Interface"
  package: "com.google.datastore.v1.client"
  summary: "Provides the ability to split a query into multiple shards."
  syntax:
    content: "public interface QuerySplitter"
- uid: "com.google.datastore.v1.client.QuerySplitter.getSplits(com.google.datastore.v1.Query,com.google.datastore.v1.PartitionId,int,com.google.datastore.v1.client.Datastore)"
  id: "getSplits(com.google.datastore.v1.Query,com.google.datastore.v1.PartitionId,int,com.google.datastore.v1.client.Datastore)"
  parent: "com.google.datastore.v1.client.QuerySplitter"
  langs:
  - "java"
  name: "getSplits(Query query, PartitionId partition, int numSplits, Datastore datastore)"
  nameWithType: "QuerySplitter.getSplits(Query query, PartitionId partition, int numSplits, Datastore datastore)"
  fullName: "com.google.datastore.v1.client.QuerySplitter.getSplits(Query query, PartitionId partition, int numSplits, Datastore datastore)"
  overload: "com.google.datastore.v1.client.QuerySplitter.getSplits*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Returns a list of sharded <xref uid=\"com.google.datastore.v1.Query\" data-throw-if-not-resolved=\"false\">Query</xref>s for the given query.\n\n <p>This will create up to the desired number of splits, however it may return less splits if\n the desired number of splits is unavailable. This will happen if the number of split points\n provided by the underlying Datastore is less than the desired number, which will occur if the\n number of results for the query is too small."
  syntax:
    content: "public abstract List<Query> getSplits(Query query, PartitionId partition, int numSplits, Datastore datastore)"
    parameters:
    - id: "query"
      type: "com.google.datastore.v1.Query"
      description: "the query to split."
    - id: "partition"
      type: "com.google.datastore.v1.PartitionId"
      description: "the partition the query is running in."
    - id: "numSplits"
      type: "int"
      description: "the desired number of splits."
    - id: "datastore"
      type: "com.google.datastore.v1.client.Datastore"
      description: "the datastore to run on."
    return:
      type: "java.util.List<com.google.datastore.v1.Query>"
  exceptions:
  - type: "com.google.datastore.v1.client.DatastoreException"
    description: "if there was a datastore error while generating query splits."
- uid: "com.google.datastore.v1.client.QuerySplitter.getSplits(com.google.datastore.v1.Query,com.google.datastore.v1.PartitionId,int,com.google.datastore.v1.client.Datastore,com.google.protobuf.Timestamp)"
  id: "getSplits(com.google.datastore.v1.Query,com.google.datastore.v1.PartitionId,int,com.google.datastore.v1.client.Datastore,com.google.protobuf.Timestamp)"
  parent: "com.google.datastore.v1.client.QuerySplitter"
  langs:
  - "java"
  name: "getSplits(Query query, PartitionId partition, int numSplits, Datastore datastore, Timestamp readTime)"
  nameWithType: "QuerySplitter.getSplits(Query query, PartitionId partition, int numSplits, Datastore datastore, Timestamp readTime)"
  fullName: "com.google.datastore.v1.client.QuerySplitter.getSplits(Query query, PartitionId partition, int numSplits, Datastore datastore, Timestamp readTime)"
  overload: "com.google.datastore.v1.client.QuerySplitter.getSplits*"
  type: "Method"
  package: "com.google.datastore.v1.client"
  summary: "Same as <xref uid=\"com.google.datastore.v1.client.QuerySplitter.getSplits(com.google.datastore.v1.Query,com.google.datastore.v1.PartitionId,int,com.google.datastore.v1.client.Datastore)\" data-throw-if-not-resolved=\"false\">#getSplits(Query, PartitionId, int, Datastore)</xref> but the splits are based on\n <code>readTime</code>, and the returned sharded <xref uid=\"com.google.datastore.v1.Query\" data-throw-if-not-resolved=\"false\">Query</xref>s should also be executed with <code>\n readTime</code>. Reading from a timestamp is currently a private preview feature in Datastore."
  syntax:
    content: "public default List<Query> getSplits(Query query, PartitionId partition, int numSplits, Datastore datastore, Timestamp readTime)"
    parameters:
    - id: "query"
      type: "com.google.datastore.v1.Query"
    - id: "partition"
      type: "com.google.datastore.v1.PartitionId"
    - id: "numSplits"
      type: "int"
    - id: "datastore"
      type: "com.google.datastore.v1.client.Datastore"
    - id: "readTime"
      type: "com.google.protobuf.Timestamp"
    return:
      type: "java.util.List<com.google.datastore.v1.Query>"
  exceptions:
  - type: "com.google.datastore.v1.client.DatastoreException"
references:
- uid: "com.google.datastore.v1.client.DatastoreException"
  name: "DatastoreException"
  nameWithType: "DatastoreException"
  fullName: "com.google.datastore.v1.client.DatastoreException"
- uid: "com.google.datastore.v1.Query"
  name: "Query"
  nameWithType: "Query"
  fullName: "com.google.datastore.v1.Query"
- uid: "com.google.datastore.v1.PartitionId"
  name: "PartitionId"
  nameWithType: "PartitionId"
  fullName: "com.google.datastore.v1.PartitionId"
- uid: "int"
  href: "https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
    isExternal: false
- uid: "com.google.datastore.v1.client.Datastore"
  name: "Datastore"
  nameWithType: "Datastore"
  fullName: "com.google.datastore.v1.client.Datastore"
- uid: "java.util.List<com.google.datastore.v1.Query>"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List<com/google/datastore/v1/Query>.html"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
    isExternal: false
    href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  - name: "<"
    fullName: "<"
    isExternal: false
  - uid: "com.google.datastore.v1.Query"
    name: "Query"
    fullName: "com.google.datastore.v1.Query"
    isExternal: false
  - name: ">"
    fullName: ">"
    isExternal: false
- uid: "com.google.datastore.v1.client.QuerySplitter.getSplits*"
  name: "getSplits"
  nameWithType: "QuerySplitter.getSplits"
  fullName: "com.google.datastore.v1.client.QuerySplitter.getSplits"
  package: "com.google.datastore.v1.client"
- uid: "com.google.protobuf.Timestamp"
  isExternal: true
  spec.java:
  - uid: "com.google.protobuf.Timestamp"
    name: "Timestamp"
    fullName: "com.google.protobuf.Timestamp"
    isExternal: true
- uid: "java.util.List"
  href: "https://docs.oracle.com/javase/8/docs/api/java/util/List.html"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
