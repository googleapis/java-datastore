// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/admin/v1/datastore_admin.proto

package com.google.datastore.admin.v1;

/**
 * <pre>
 * The request for
 * [google.datastore.admin.v1.DatastoreAdmin.ImportEntities][google.datastore.admin.v1.DatastoreAdmin.ImportEntities].
 * </pre>
 *
 * Protobuf type {@code google.datastore.admin.v1.ImportEntitiesRequest}
 */
public final class ImportEntitiesRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.datastore.admin.v1.ImportEntitiesRequest)
    ImportEntitiesRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ImportEntitiesRequest.newBuilder() to construct.
  private ImportEntitiesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ImportEntitiesRequest() {
    projectId_ = "";
    inputUrl_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ImportEntitiesRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ImportEntitiesRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            projectId_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              labels_ = com.google.protobuf.MapField.newMapField(
                  LabelsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            labels__ = input.readMessage(
                LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            labels_.getMutableMap().put(
                labels__.getKey(), labels__.getValue());
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            inputUrl_ = s;
            break;
          }
          case 34: {
            com.google.datastore.admin.v1.EntityFilter.Builder subBuilder = null;
            if (entityFilter_ != null) {
              subBuilder = entityFilter_.toBuilder();
            }
            entityFilter_ = input.readMessage(com.google.datastore.admin.v1.EntityFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(entityFilter_);
              entityFilter_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.datastore.admin.v1.DatastoreAdminProto.internal_static_google_datastore_admin_v1_ImportEntitiesRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetLabels();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.datastore.admin.v1.DatastoreAdminProto.internal_static_google_datastore_admin_v1_ImportEntitiesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.datastore.admin.v1.ImportEntitiesRequest.class, com.google.datastore.admin.v1.ImportEntitiesRequest.Builder.class);
  }

  public static final int PROJECT_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object projectId_;
  /**
   * <pre>
   * Required. Project ID against which to make the request.
   * </pre>
   *
   * <code>string project_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The projectId.
   */
  @java.lang.Override
  public java.lang.String getProjectId() {
    java.lang.Object ref = projectId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      projectId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. Project ID against which to make the request.
   * </pre>
   *
   * <code>string project_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for projectId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProjectIdBytes() {
    java.lang.Object ref = projectId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      projectId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LABELS_FIELD_NUMBER = 2;
  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.datastore.admin.v1.DatastoreAdminProto.internal_static_google_datastore_admin_v1_ImportEntitiesRequest_LabelsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> labels_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetLabels() {
    if (labels_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LabelsDefaultEntryHolder.defaultEntry);
    }
    return labels_;
  }

  public int getLabelsCount() {
    return internalGetLabels().getMap().size();
  }
  /**
   * <pre>
   * Client-assigned labels.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */

  @java.lang.Override
  public boolean containsLabels(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetLabels().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getLabels() {
    return getLabelsMap();
  }
  /**
   * <pre>
   * Client-assigned labels.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
    return internalGetLabels().getMap();
  }
  /**
   * <pre>
   * Client-assigned labels.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Client-assigned labels.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getLabelsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int INPUT_URL_FIELD_NUMBER = 3;
  private volatile java.lang.Object inputUrl_;
  /**
   * <pre>
   * Required. The full resource URL of the external storage location. Currently, only
   * Google Cloud Storage is supported. So input_url should be of the form:
   * `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where
   * `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is
   * an optional Cloud Storage namespace path (this is not a Cloud Datastore
   * namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written
   * by the ExportEntities operation. For more information about Cloud Storage
   * namespace paths, see
   * [Object name
   * considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
   * For more information, see
   * [google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url].
   * </pre>
   *
   * <code>string input_url = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The inputUrl.
   */
  @java.lang.Override
  public java.lang.String getInputUrl() {
    java.lang.Object ref = inputUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      inputUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The full resource URL of the external storage location. Currently, only
   * Google Cloud Storage is supported. So input_url should be of the form:
   * `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where
   * `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is
   * an optional Cloud Storage namespace path (this is not a Cloud Datastore
   * namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written
   * by the ExportEntities operation. For more information about Cloud Storage
   * namespace paths, see
   * [Object name
   * considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
   * For more information, see
   * [google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url].
   * </pre>
   *
   * <code>string input_url = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for inputUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getInputUrlBytes() {
    java.lang.Object ref = inputUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      inputUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENTITY_FILTER_FIELD_NUMBER = 4;
  private com.google.datastore.admin.v1.EntityFilter entityFilter_;
  /**
   * <pre>
   * Optionally specify which kinds/namespaces are to be imported. If provided,
   * the list must be a subset of the EntityFilter used in creating the export,
   * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
   * specified then all entities from the export are imported.
   * </pre>
   *
   * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
   * @return Whether the entityFilter field is set.
   */
  @java.lang.Override
  public boolean hasEntityFilter() {
    return entityFilter_ != null;
  }
  /**
   * <pre>
   * Optionally specify which kinds/namespaces are to be imported. If provided,
   * the list must be a subset of the EntityFilter used in creating the export,
   * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
   * specified then all entities from the export are imported.
   * </pre>
   *
   * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
   * @return The entityFilter.
   */
  @java.lang.Override
  public com.google.datastore.admin.v1.EntityFilter getEntityFilter() {
    return entityFilter_ == null ? com.google.datastore.admin.v1.EntityFilter.getDefaultInstance() : entityFilter_;
  }
  /**
   * <pre>
   * Optionally specify which kinds/namespaces are to be imported. If provided,
   * the list must be a subset of the EntityFilter used in creating the export,
   * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
   * specified then all entities from the export are imported.
   * </pre>
   *
   * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
   */
  @java.lang.Override
  public com.google.datastore.admin.v1.EntityFilterOrBuilder getEntityFilterOrBuilder() {
    return getEntityFilter();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(projectId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, projectId_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetLabels(),
        LabelsDefaultEntryHolder.defaultEntry,
        2);
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(inputUrl_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, inputUrl_);
    }
    if (entityFilter_ != null) {
      output.writeMessage(4, getEntityFilter());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(projectId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, projectId_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, labels__);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(inputUrl_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, inputUrl_);
    }
    if (entityFilter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getEntityFilter());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.datastore.admin.v1.ImportEntitiesRequest)) {
      return super.equals(obj);
    }
    com.google.datastore.admin.v1.ImportEntitiesRequest other = (com.google.datastore.admin.v1.ImportEntitiesRequest) obj;

    if (!getProjectId()
        .equals(other.getProjectId())) return false;
    if (!internalGetLabels().equals(
        other.internalGetLabels())) return false;
    if (!getInputUrl()
        .equals(other.getInputUrl())) return false;
    if (hasEntityFilter() != other.hasEntityFilter()) return false;
    if (hasEntityFilter()) {
      if (!getEntityFilter()
          .equals(other.getEntityFilter())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getProjectId().hashCode();
    if (!internalGetLabels().getMap().isEmpty()) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLabels().hashCode();
    }
    hash = (37 * hash) + INPUT_URL_FIELD_NUMBER;
    hash = (53 * hash) + getInputUrl().hashCode();
    if (hasEntityFilter()) {
      hash = (37 * hash) + ENTITY_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getEntityFilter().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.datastore.admin.v1.ImportEntitiesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.datastore.admin.v1.ImportEntitiesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The request for
   * [google.datastore.admin.v1.DatastoreAdmin.ImportEntities][google.datastore.admin.v1.DatastoreAdmin.ImportEntities].
   * </pre>
   *
   * Protobuf type {@code google.datastore.admin.v1.ImportEntitiesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.datastore.admin.v1.ImportEntitiesRequest)
      com.google.datastore.admin.v1.ImportEntitiesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.datastore.admin.v1.DatastoreAdminProto.internal_static_google_datastore_admin_v1_ImportEntitiesRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.datastore.admin.v1.DatastoreAdminProto.internal_static_google_datastore_admin_v1_ImportEntitiesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.datastore.admin.v1.ImportEntitiesRequest.class, com.google.datastore.admin.v1.ImportEntitiesRequest.Builder.class);
    }

    // Construct using com.google.datastore.admin.v1.ImportEntitiesRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      projectId_ = "";

      internalGetMutableLabels().clear();
      inputUrl_ = "";

      if (entityFilterBuilder_ == null) {
        entityFilter_ = null;
      } else {
        entityFilter_ = null;
        entityFilterBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.datastore.admin.v1.DatastoreAdminProto.internal_static_google_datastore_admin_v1_ImportEntitiesRequest_descriptor;
    }

    @java.lang.Override
    public com.google.datastore.admin.v1.ImportEntitiesRequest getDefaultInstanceForType() {
      return com.google.datastore.admin.v1.ImportEntitiesRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.datastore.admin.v1.ImportEntitiesRequest build() {
      com.google.datastore.admin.v1.ImportEntitiesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.datastore.admin.v1.ImportEntitiesRequest buildPartial() {
      com.google.datastore.admin.v1.ImportEntitiesRequest result = new com.google.datastore.admin.v1.ImportEntitiesRequest(this);
      int from_bitField0_ = bitField0_;
      result.projectId_ = projectId_;
      result.labels_ = internalGetLabels();
      result.labels_.makeImmutable();
      result.inputUrl_ = inputUrl_;
      if (entityFilterBuilder_ == null) {
        result.entityFilter_ = entityFilter_;
      } else {
        result.entityFilter_ = entityFilterBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.datastore.admin.v1.ImportEntitiesRequest) {
        return mergeFrom((com.google.datastore.admin.v1.ImportEntitiesRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.datastore.admin.v1.ImportEntitiesRequest other) {
      if (other == com.google.datastore.admin.v1.ImportEntitiesRequest.getDefaultInstance()) return this;
      if (!other.getProjectId().isEmpty()) {
        projectId_ = other.projectId_;
        onChanged();
      }
      internalGetMutableLabels().mergeFrom(
          other.internalGetLabels());
      if (!other.getInputUrl().isEmpty()) {
        inputUrl_ = other.inputUrl_;
        onChanged();
      }
      if (other.hasEntityFilter()) {
        mergeEntityFilter(other.getEntityFilter());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.datastore.admin.v1.ImportEntitiesRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.datastore.admin.v1.ImportEntitiesRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object projectId_ = "";
    /**
     * <pre>
     * Required. Project ID against which to make the request.
     * </pre>
     *
     * <code>string project_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The projectId.
     */
    public java.lang.String getProjectId() {
      java.lang.Object ref = projectId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        projectId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. Project ID against which to make the request.
     * </pre>
     *
     * <code>string project_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for projectId.
     */
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      java.lang.Object ref = projectId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        projectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. Project ID against which to make the request.
     * </pre>
     *
     * <code>string project_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      projectId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Project ID against which to make the request.
     * </pre>
     *
     * <code>string project_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearProjectId() {
      
      projectId_ = getDefaultInstance().getProjectId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Project ID against which to make the request.
     * </pre>
     *
     * <code>string project_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      projectId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableLabels() {
      onChanged();;
      if (labels_ == null) {
        labels_ = com.google.protobuf.MapField.newMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      if (!labels_.isMutable()) {
        labels_ = labels_.copy();
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Client-assigned labels.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */

    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Client-assigned labels.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Client-assigned labels.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Client-assigned labels.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLabels() {
      internalGetMutableLabels().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Client-assigned labels.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */

    public Builder removeLabels(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableLabels().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableLabels() {
      return internalGetMutableLabels().getMutableMap();
    }
    /**
     * <pre>
     * Client-assigned labels.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    public Builder putLabels(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableLabels().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Client-assigned labels.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */

    public Builder putAllLabels(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableLabels().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.lang.Object inputUrl_ = "";
    /**
     * <pre>
     * Required. The full resource URL of the external storage location. Currently, only
     * Google Cloud Storage is supported. So input_url should be of the form:
     * `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where
     * `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is
     * an optional Cloud Storage namespace path (this is not a Cloud Datastore
     * namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written
     * by the ExportEntities operation. For more information about Cloud Storage
     * namespace paths, see
     * [Object name
     * considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
     * For more information, see
     * [google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url].
     * </pre>
     *
     * <code>string input_url = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The inputUrl.
     */
    public java.lang.String getInputUrl() {
      java.lang.Object ref = inputUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inputUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The full resource URL of the external storage location. Currently, only
     * Google Cloud Storage is supported. So input_url should be of the form:
     * `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where
     * `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is
     * an optional Cloud Storage namespace path (this is not a Cloud Datastore
     * namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written
     * by the ExportEntities operation. For more information about Cloud Storage
     * namespace paths, see
     * [Object name
     * considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
     * For more information, see
     * [google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url].
     * </pre>
     *
     * <code>string input_url = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for inputUrl.
     */
    public com.google.protobuf.ByteString
        getInputUrlBytes() {
      java.lang.Object ref = inputUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inputUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The full resource URL of the external storage location. Currently, only
     * Google Cloud Storage is supported. So input_url should be of the form:
     * `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where
     * `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is
     * an optional Cloud Storage namespace path (this is not a Cloud Datastore
     * namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written
     * by the ExportEntities operation. For more information about Cloud Storage
     * namespace paths, see
     * [Object name
     * considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
     * For more information, see
     * [google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url].
     * </pre>
     *
     * <code>string input_url = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The inputUrl to set.
     * @return This builder for chaining.
     */
    public Builder setInputUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      inputUrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The full resource URL of the external storage location. Currently, only
     * Google Cloud Storage is supported. So input_url should be of the form:
     * `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where
     * `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is
     * an optional Cloud Storage namespace path (this is not a Cloud Datastore
     * namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written
     * by the ExportEntities operation. For more information about Cloud Storage
     * namespace paths, see
     * [Object name
     * considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
     * For more information, see
     * [google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url].
     * </pre>
     *
     * <code>string input_url = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearInputUrl() {
      
      inputUrl_ = getDefaultInstance().getInputUrl();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The full resource URL of the external storage location. Currently, only
     * Google Cloud Storage is supported. So input_url should be of the form:
     * `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where
     * `BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is
     * an optional Cloud Storage namespace path (this is not a Cloud Datastore
     * namespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written
     * by the ExportEntities operation. For more information about Cloud Storage
     * namespace paths, see
     * [Object name
     * considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
     * For more information, see
     * [google.datastore.admin.v1.ExportEntitiesResponse.output_url][google.datastore.admin.v1.ExportEntitiesResponse.output_url].
     * </pre>
     *
     * <code>string input_url = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for inputUrl to set.
     * @return This builder for chaining.
     */
    public Builder setInputUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      inputUrl_ = value;
      onChanged();
      return this;
    }

    private com.google.datastore.admin.v1.EntityFilter entityFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.datastore.admin.v1.EntityFilter, com.google.datastore.admin.v1.EntityFilter.Builder, com.google.datastore.admin.v1.EntityFilterOrBuilder> entityFilterBuilder_;
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     * @return Whether the entityFilter field is set.
     */
    public boolean hasEntityFilter() {
      return entityFilterBuilder_ != null || entityFilter_ != null;
    }
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     * @return The entityFilter.
     */
    public com.google.datastore.admin.v1.EntityFilter getEntityFilter() {
      if (entityFilterBuilder_ == null) {
        return entityFilter_ == null ? com.google.datastore.admin.v1.EntityFilter.getDefaultInstance() : entityFilter_;
      } else {
        return entityFilterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     */
    public Builder setEntityFilter(com.google.datastore.admin.v1.EntityFilter value) {
      if (entityFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        entityFilter_ = value;
        onChanged();
      } else {
        entityFilterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     */
    public Builder setEntityFilter(
        com.google.datastore.admin.v1.EntityFilter.Builder builderForValue) {
      if (entityFilterBuilder_ == null) {
        entityFilter_ = builderForValue.build();
        onChanged();
      } else {
        entityFilterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     */
    public Builder mergeEntityFilter(com.google.datastore.admin.v1.EntityFilter value) {
      if (entityFilterBuilder_ == null) {
        if (entityFilter_ != null) {
          entityFilter_ =
            com.google.datastore.admin.v1.EntityFilter.newBuilder(entityFilter_).mergeFrom(value).buildPartial();
        } else {
          entityFilter_ = value;
        }
        onChanged();
      } else {
        entityFilterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     */
    public Builder clearEntityFilter() {
      if (entityFilterBuilder_ == null) {
        entityFilter_ = null;
        onChanged();
      } else {
        entityFilter_ = null;
        entityFilterBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     */
    public com.google.datastore.admin.v1.EntityFilter.Builder getEntityFilterBuilder() {
      
      onChanged();
      return getEntityFilterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     */
    public com.google.datastore.admin.v1.EntityFilterOrBuilder getEntityFilterOrBuilder() {
      if (entityFilterBuilder_ != null) {
        return entityFilterBuilder_.getMessageOrBuilder();
      } else {
        return entityFilter_ == null ?
            com.google.datastore.admin.v1.EntityFilter.getDefaultInstance() : entityFilter_;
      }
    }
    /**
     * <pre>
     * Optionally specify which kinds/namespaces are to be imported. If provided,
     * the list must be a subset of the EntityFilter used in creating the export,
     * otherwise a FAILED_PRECONDITION error will be returned. If no filter is
     * specified then all entities from the export are imported.
     * </pre>
     *
     * <code>.google.datastore.admin.v1.EntityFilter entity_filter = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.datastore.admin.v1.EntityFilter, com.google.datastore.admin.v1.EntityFilter.Builder, com.google.datastore.admin.v1.EntityFilterOrBuilder> 
        getEntityFilterFieldBuilder() {
      if (entityFilterBuilder_ == null) {
        entityFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.datastore.admin.v1.EntityFilter, com.google.datastore.admin.v1.EntityFilter.Builder, com.google.datastore.admin.v1.EntityFilterOrBuilder>(
                getEntityFilter(),
                getParentForChildren(),
                isClean());
        entityFilter_ = null;
      }
      return entityFilterBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.datastore.admin.v1.ImportEntitiesRequest)
  }

  // @@protoc_insertion_point(class_scope:google.datastore.admin.v1.ImportEntitiesRequest)
  private static final com.google.datastore.admin.v1.ImportEntitiesRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.datastore.admin.v1.ImportEntitiesRequest();
  }

  public static com.google.datastore.admin.v1.ImportEntitiesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImportEntitiesRequest>
      PARSER = new com.google.protobuf.AbstractParser<ImportEntitiesRequest>() {
    @java.lang.Override
    public ImportEntitiesRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ImportEntitiesRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ImportEntitiesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImportEntitiesRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.datastore.admin.v1.ImportEntitiesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

