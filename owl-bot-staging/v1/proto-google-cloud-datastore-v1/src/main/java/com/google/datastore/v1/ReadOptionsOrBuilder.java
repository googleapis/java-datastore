// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/datastore/v1/datastore.proto

package com.google.datastore.v1;

public interface ReadOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.datastore.v1.ReadOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The non-transactional read consistency to use.
   * Cannot be set to `STRONG` for global queries.
   * </pre>
   *
   * <code>.google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;</code>
   * @return Whether the readConsistency field is set.
   */
  boolean hasReadConsistency();
  /**
   * <pre>
   * The non-transactional read consistency to use.
   * Cannot be set to `STRONG` for global queries.
   * </pre>
   *
   * <code>.google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;</code>
   * @return The enum numeric value on the wire for readConsistency.
   */
  int getReadConsistencyValue();
  /**
   * <pre>
   * The non-transactional read consistency to use.
   * Cannot be set to `STRONG` for global queries.
   * </pre>
   *
   * <code>.google.datastore.v1.ReadOptions.ReadConsistency read_consistency = 1;</code>
   * @return The readConsistency.
   */
  com.google.datastore.v1.ReadOptions.ReadConsistency getReadConsistency();

  /**
   * <pre>
   * The identifier of the transaction in which to read. A
   * transaction identifier is returned by a call to
   * [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
   * </pre>
   *
   * <code>bytes transaction = 2;</code>
   * @return Whether the transaction field is set.
   */
  boolean hasTransaction();
  /**
   * <pre>
   * The identifier of the transaction in which to read. A
   * transaction identifier is returned by a call to
   * [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
   * </pre>
   *
   * <code>bytes transaction = 2;</code>
   * @return The transaction.
   */
  com.google.protobuf.ByteString getTransaction();

  public com.google.datastore.v1.ReadOptions.ConsistencyTypeCase getConsistencyTypeCase();
}
